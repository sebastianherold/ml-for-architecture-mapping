FileName,Label,FileContent
ANTLR.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'antlr', 'extends', 'task', 'extendsindex', '1', 'antlr', 'path', 'commandlin', 'commandlinejava', 'bytearrayoutputstream', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'bufferedread', 'fileread', 'buildexcept', 'buildexcept', 'file', 'pumpstreamhandl', 'logoutputstream', 'teeoutputstream', 'logoutputstream', 'execut', 'buildexcept', 'commandlinejava', 'file', 'file', 'file', 'file', 'workingdir', 'bytearrayoutputstream', 'static', 'final', 'fileutil']"
AbstractAccessTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'unix', 'abstractaccesstask', 'fileset', 'buildexcept', 'buildexcept', 'buildexcept']"
AbstractAnalyzer.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'depend', 'abstractanalyzer', 'implements', 'dependencyanalyz', 'enumer', 'enumer', 'file', 'file', 'path', 'path', 'vector', 'runtimeexcept', 'vector', 'vector', 'file', 'file', 'zipfil', 'path', 'path', 'vector', 'boolean', 'determined', 'vector', 'vector', 'boolean', 'closure']"
AbstractCvsTask.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'abstractcvstask', 'extends', 'task', 'abstractcvstask', 'file', 'file', 'commandlin', 'vector', 'pumpstreamhandl', 'printstream', 'bufferedoutputstream', 'fileoutputstream', 'buildexcept', 'logoutputstream', 'printstream', 'bufferedoutputstream', 'fileoutputstream', 'buildexcept', 'logoutputstream', 'environ', 'file', 'execut', 'buildexcept', 'buildexcept', 'buildexcept', 'stringbuff', 'static', 'final', 'int', 'maximum_comression_level', 'commandlin', 'vector', 'static', 'final', 'str', 'string', 'command', 'boolean', 'quiet', 'boolean', 'reallyquiet', 'int', 'compression', 'boolean', 'noexec', 'int', 'port', 'file', 'passfile', 'file', 'boolean', 'append', 'file', 'file', 'boolean', 'failonerror', 'executestreamhandl', 'outputstream', 'outputstream']"
AbstractFileSet.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'abstractfileset', 'synchron', 'file', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'directoryscann', 'directoryscann', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'patternset', 'vector', 'vector', 'patternset', 'buildexcept', 'buildexcept', 'buildexcept', 'directoryscann', 'illegalargumentexcept', 'stringbuff', 'vector', 'vector', 'buildexcept', 'patternset', 'vector', 'vector', 'file', 'boolean', 'usedefaultexcludes', 'boolean', 'casesensitive', 'boolean', 'followsymlinks', 'directoryscanner', 'directoryscanner']"
AbstractHotDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'j2e', 'abstracthotdeploymenttool', 'implements', 'hotdeploymenttool', 'path', 'path', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'serverdeploy', 'path']"
AbstractJarSignerTask.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'abstractjarsignertask', 'extends', 'task', 'path', 'redirectorel', 'vector', 'environ', 'path', 'redirectorel', 'stringbuff', 'exectask', 'fileset', 'path', 'redirectorel', 'environ', 'path', 'path']"
AbstractScriptComponent.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'opt', 'abstractscriptcomponent', 'extends', 'projectcompon', 'scriptrunnerbas', 'path', 'scriptrunnerhelp', 'scriptrunnerhelp', 'scriptrunnerbase', 'runner']"
AbstractSelectorContainer.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'fileselector', 'enumer', 'vector', 'stringbuff', 'vector']"
AbstractSshMessage.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ssh', 'abstractsshmessag', 'progressmonitor', 'implements', 'sftpprogressmonitor', 'abstractsshmessag', 'abstractsshmessag', 'loglisten', 'buildexcept', 'stringbuff', 'buildexcept', 'buildexcept', 'buildexcept', 'progressmonitor', 'session', 'loglisten', 'progressmonitor', 'monitor', 'long', 'initfilesize', 'long', 'totallength', 'int', 'percenttransmitted']"
AggregateTransformer.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'aggregatetransform', 'format', 'extends', 'enumeratedattribut', 'aggregatetransform', 'xsltprocess', 'vector', 'fileinputstream', 'buildexcept', 'tempfil', 'xsltprocess', 'file', 'file', 'buildexcept', 'delet', 'urlresourc', 'fileresourc', 'file', 'filenotfoundexcept', 'file', 'filenotfoundexcept', 'list', 'static', 'final', 'fileutil', 'static', 'int', 'counter', 'static', 'documentbuilderfactori']"
Algorithm.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selectors', 'modifiedselector']"
AncestorAnalyzer.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'depend', 'bcel', 'ancestoranalyzer', 'extends', 'abstractanalyz', 'ancestoranalyz', 'classpars', 'hashtabl', 'hashtabl', 'hashtabl', 'hashtabl', 'classpars', 'classpars']"
And.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'and', 'extends', 'resourceselectorcontainer', 'implements', 'resourceselector']"
And.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'and', 'extends', 'conditionbase', 'implements', 'condit']"
AndSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'andselector', 'extends', 'baseselectorcontain', 'andselector', 'stringbuff']"
AnsiColorLogger.java,listener,"['package', 'org', 'apache', 'tools', 'ant', 'listen', 'ansicolorlogger', 'extends', 'defaultlogg', 'properti', 'fileinputstream', 'stringbuff', 'static', 'final', 'int', 'attr_normal', 'static', 'final', 'int', 'attr_bright', 'static', 'final', 'int', 'attr_dim', 'static', 'final', 'int', 'attr_underline', 'static', 'final', 'int', 'attr_blink', 'static', 'final', 'int', 'attr_reverse', 'static', 'final', 'int', 'attr_hidden', 'static', 'final', 'int', 'fg_black', 'static', 'final', 'int', 'fg_red', 'static', 'final', 'int', 'fg_green', 'static', 'final', 'int', 'fg_yellow', 'static', 'final', 'int', 'fg_blue', 'static', 'final', 'int', 'fg_magenta', 'static', 'final', 'int', 'fg_cyan', 'static', 'final', 'int', 'fg_white', 'static', 'final', 'int', 'bg_black', 'static', 'final', 'int', 'bg_red', 'static', 'final', 'int', 'bg_green', 'static', 'final', 'int', 'bg_yellow', 'static', 'final', 'int', 'bg_blue', 'static', 'final', 'int', 'bg_magenta', 'static', 'final', 'int', 'bg_cyan', 'static', 'final', 'int', 'bg_white', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'char', 'static', 'final', 'string', 'end_color', 'prefix', 'boolean', 'colorsset']"
Ant.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'ant', 'extends', 'task', 'targetel', 'ant', 'ant', 'properti', 'refer', 'targetel', 'vector', 'vector', 'vector', 'vector', 'printstream', 'fileoutputstream', 'defaultlogg', 'vector', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'hashset', 'buildexcept', 'buildexcept', 'buildexcept', 'properti', 'buildexcept', 'buildexcept', 'static', 'final', 'fileutil', 'file', 'dir', 'string', 'antfile', 'string', 'output', 'boolean', 'inheritall', 'boolean', 'inheritrefs', 'vector', 'vector', 'project', 'printstream', 'out', 'vector', 'vector', 'boolean', 'targetattributeset', 'string', 'targetid']"
AntAnalyzer.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'antanalyzer', 'extends', 'abstractanalyz', 'antanalyz', 'hashtabl', 'hashtabl', 'hashtabl', 'hashtabl', 'fileinputstream', 'zipfil', 'zipentri', 'classfil']"
AntClassLoader.java,ant,"['package', 'org', 'apache', 'tools', 'antclassloader', 'extends', 'classloader', 'implements', 'subbuildlisten', 'resourceenumeration', 'implements', 'enumer', 'object', 'antclassload', 'antclassload', 'antclassload', 'antclassload', 'antclassload', 'antclassload', 'synchron', 'inputstream', 'url', 'synchron', 'vector', 'vector', 'vector', 'hashtabl', 'hashmap', 'buildexcept', 'file', 'buildexcept', 'zipfil', 'zipentri', 'inputstreamread', 'stringtoken', 'url', 'file', 'stringbuff', 'file', 'fileinputstream', 'zipfil', 'resourceenumer', 'file', 'zipfil', 'url', 'jarfil', 'url', 'bytearrayoutputstream', 'classnotfoundexcept', 'hashtabl', 'static', 'final', 'fileutil', 'url', 'static', 'final', 'int', 'buffer_size', 'static', 'final', 'int', 'number_of_strings', 'project', 'boolean', 'parentfirst', 'vector', 'vector', 'boolean', 'ignorebase', 'classloader', 'parent', 'hashtabl', 'static', 'map', 'string', 'string', 'classloader', 'savedcontextloader', 'boolean', 'iscontextloadersaved']"
AntFilterReader.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'path', 'path', 'paramet', 'vector', 'path', 'buildexcept', 'final', 'vector', 'path']"
AntResolver.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extension', 'resolv', 'antresolver', 'implements', 'extensionresolv', 'file', 'ant', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'file']"
AntSoundPlayer.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'sound', 'antsoundplayer', 'implements', 'linelistener', 'buildlisten', 'antsoundplay', 'file', 'filesuccess', 'int', 'loopssuccess', 'long', 'durationsuccess', 'file', 'filefail', 'int', 'loopsfail', 'long', 'durationfail']"
AntStructure.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'antstructure', 'extends', 'task', 'dtdprinter', 'implements', 'structureprint', 'dtdprinter', 'buildexcept', 'printwrit', 'outputstreamwrit', 'fileoutputstream', 'printwrit', 'filewrit', 'buildexcept', 'hashtabl', 'stringbuff', 'vector', 'stringbuff', 'file', 'structureprint', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'hashtabl']"
AntTypeDefinition.java,ant,"['package', 'org', 'apache', 'tools', 'anttypedefinit', 'classload', 'object', 'object', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'string', 'class', 'class', 'class', 'string', 'classload']"
AntVersion.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'antversion', 'implements', 'condit', 'deweydecim', 'deweydecim', 'buildexcept', 'buildexcept', 'deweydecim', 'deweydecim', 'buildexcept', 'project', 'stringbuff', 'deweydecim', 'string', 'atleast', 'string', 'exactly']"
Antlib.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'antlib', 'extends', 'task', 'implements', 'taskcontain', 'buildexcept', 'projecthelper2', 'buildexcept', 'antlib', 'arraylist', 'buildexcept', 'classload', 'string', 'list']"
AntlibDefinition.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'antlibdefinition', 'extends', 'task', 'classload', 'buildexcept', 'classload']"
ApacheCatalog.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resolv', 'apachecatalog', 'extends', 'catalog', 'apachecatalogresolver', 'resolver']"
ApacheCatalogResolver.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resolv', 'apachecatalogresolver', 'extends', 'catalogresolv', 'buildexcept', 'buildexcept', 'buildexcept', 'resourceloc', 'resourceloc', 'xmlcatalog', 'xmlcatalog']"
Apt.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'option', 'option', 'apt', 'path', 'path', 'option', 'vector', 'file', 'vector', 'path', 'option', 'boolean', 'compile', 'path', 'vector', 'file']"
AptCompilerAdapter.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'main', 'aptcompileradapter', 'extends', 'defaultcompileradapt', 'main', 'stringbuff', 'buildexcept', 'static', 'final', 'int', 'apt_compiler_success']"
AptExternalCompilerAdapter.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'aptexternalcompileradapter', 'extends', 'defaultcompileradapt', 'commandlin']"
ArchiveFileSet.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'archivefileset', 'extends', 'fileset', 'archivefileset', 'file', 'file', 'directoryscann', 'iter', 'object', 'buildexcept', 'buildexcept', 'fileresourc', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'int', 'base_octal', 'resource', 'src', 'boolean', 'hasdir', 'int', 'filemode', 'int', 'dirmode', 'boolean', 'filemodehasbeenset', 'boolean', 'dirmodehasbeenset']"
ArchiveResource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'archiveresource', 'extends', 'resourc', 'archiveresourc', 'archiveresourc', 'archiveresourc', 'archiveresourc', 'resourc', 'fileresourc', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'resourc', 'boolean', 'haveentry', 'boolean', 'modeset', 'int', 'mode']"
ArchiveScanner.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'archivescanner', 'extends', 'directoryscann', 'resourc', 'treemap', 'treemap', 'treemap', 'treemap', 'fileresourc', 'fileresourceiter', 'fileresourceiter', 'resourc', 'resourc', 'resourc', 'resourc', 'resourc', 'treemap', 'treemap', 'treemap', 'treemap']"
AsiExtraField.java,zip,"['package', 'org', 'apache', 'tools', 'zip', 'asiextrafield', 'implements', 'zipextrafield', 'unixstat', 'clon', 'asiextrafield', 'zipshort', 'zipshort', 'zipshort', 'zipshort', 'crc32', 'zipshort', 'zipexcept', 'static', 'final', 'zipshort', 'int', 'mode', 'int', 'uid', 'int', 'gid', 'boolean', 'dirflag', 'crc32']"
Assertions.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'package', 'and', 'class', 'have', 'been', 'set', 'assertions', 'extends', 'datatype', 'implements', 'clon', 'baseassert', 'if', 'getpackagename', 'null', 'enabledassertion', 'extends', 'baseassert', 'disabledassertion', 'extends', 'baseassert', 'object', 'arraylist', 'buildexcept', 'buildexcept', 'stringbuff', 'arraylist']"
Attrib.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'window', 'attrib', 'extends', 'executeon', 'attrib', 'fileset', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'str', 'boolean', 'haveattr']"
Available.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'available', 'extends', 'task', 'implements', 'condit', 'filedir', 'extends', 'enumeratedattribut', 'path', 'path', 'path', 'path', 'filedir', 'buildexcept', 'buildexcept', 'buildexcept', 'stringbuff', 'file', 'file', 'file', 'static', 'final', 'fileutil', 'file', 'path', 'filedir', 'path', 'antclassload', 'boolean', 'istask', 'boolean', 'ignoresystemclasses', 'boolean', 'searchparents', 'static', 'final', 'string']"
BCFileSet.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'bcfileset', 'extends', 'fileset', 'bcfileset', 'bcfileset', 'iter', 'fileresourceiter']"
BUnzip2.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'bunzip2', 'extends', 'unpack', 'fileoutputstream', 'bufferedinputstream', 'buildexcept', 'buildexcept', 'cbzip2inputstream', 'buildexcept', 'static', 'final', 'str']"
BZip2.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'bzip2', 'extends', 'pack', 'bufferedoutputstream', 'fileoutputstream', 'cbzip2outputstream', 'buildexcept']"
BZip2Constants.java,bzip2,"['package', 'org', 'apache', 'tools', 'bzip2']"
BZip2Resource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'bzip2resource', 'extends', 'compressedresourc', 'bzip2resourc', 'bzip2resourc', 'ioexcept', 'cbzip2inputstream', 'cbzip2outputstream', 'static', 'final', 'char']"
Base64Converter.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'base64convert', 'static', 'final', 'char']"
BaseExtendSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'baseextendselector']"
BaseResourceCollectionContainer.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'object', 'synchron', 'arraylist', 'buildexcept', 'failfast', 'arraylist', 'buildexcept', 'stringbuff', 'list', 'collection', 'coll', 'boolean', 'cache']"
BaseResourceCollectionWrapper.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'failfast', 'stringbuff', 'buildexcept', 'resourcecollect', 'collection', 'coll', 'boolean', 'cache']"
BaseSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'baseselector', 'extends', 'datatype', 'implements', 'fileselector', 'baseselector', 'buildexcept', 'string', 'errmsg']"
BaseSelectorContainer.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'baseselectorcontain', 'fileselector', 'enumer', 'vector', 'stringbuff', 'buildexcept', 'vector']"
BaseTest.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'basetest', 'vector']"
Basename.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'basename', 'extends', 'task', 'buildexcept', 'buildexcept', 'file']"
BatchTest.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'batchtest', 'extends', 'basetest', 'batchtest', 'enumer', 'resourc', 'vector', 'junittest', 'project', 'resourc']"
BorlandDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'while', 'ithomes', 'hasnext', 'hashtabl', 'descriptorhandl', 'file', 'buildexcept', 'file', 'file', 'exectask', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'execut', 'commandlin', 'buildexcept', 'buildexcept', 'vector', 'bufferedread', 'inputstreamread', 'file', 'buildexcept', 'bufferedread', 'inputstreamread', 'boolean', 'java2iiopdebug', 'string', 'java2iioparams', 'boolean', 'generateclient', 'int', 'version', 'boolean', 'verify', 'string', 'hashtabl']"
BorlandGenerateClient.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'borlandgenerateclient', 'extends', 'task', 'path', 'path', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'exectask', 'file', 'buildexcept', 'exectask', 'file', 'buildexcept']"
BriefJUnitResultFormatter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'briefjunitresultformatter', 'implements', 'junitresultformatt', 'briefjunitresultformatt', 'stringwrit', 'printwrit', 'printwrit', 'stringbuff', 'stringbuff', 'outputstream', 'printwrit', 'stringwrit', 'printwrit', 'numberformat', 'string', 'systemoutput', 'string', 'systemerror']"
BuildEvent.java,ant,"['package', 'org', 'apache', 'tools', 'buildevent', 'extends', 'eventobject', 'buildev', 'buildev', 'buildev', 'project', 'target', 'task', 'throwabl', 'project', 'target', 'task', 'throwabl']"
BuildException.java,ant,"['package', 'org', 'apache', 'tools', 'buildexception', 'extends', 'runtimeexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'throwabl', 'throwabl', 'locat', 'throwabl', 'locat']"
BuildListener.java,ant,"['package', 'org', 'apache', 'tools']"
BuildLogger.java,ant,"['package', 'org', 'apache', 'tools']"
BuildNumber.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'fileoutputstream', 'buildexcept', 'buildexcept', 'properti', 'fileinputstream', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'str', 'static', 'final', 'string', 'default_filename', 'static', 'final', 'fileutil', 'file']"
CBZip2InputStream.java,bzip2,"['package', 'org', 'apache', 'tools', 'bzip2', 'cbzip2inputstream', 'extends', 'inputstream', 'implements', 'bzip2const', 'data', 'extends', 'object', 'cbzip2inputstream', 'ioexcept', 'crc', 'ioexcept', 'indexoutofboundsexcept', 'indexoutofboundsexcept', 'indexoutofboundsexcept', 'ioexcept', 'illegalstateexcept', 'illegalstateexcept', 'illegalstateexcept', 'illegalstateexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'data', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'int', 'int', 'final', 'crc', 'inputstream', 'static', 'final', 'int', 'eof', 'static', 'final', 'int', 'start_block_state', 'static', 'final', 'int', 'rand_part_a_state', 'static', 'final', 'int', 'rand_part_b_state', 'static', 'final', 'int', 'rand_part_c_state', 'static', 'final', 'int', 'no_rand_part_a_state', 'static', 'final', 'int', 'no_rand_part_b_state', 'static', 'final', 'int', 'no_rand_part_c_state', 'int', 'currentstate', 'int', 'storedblockcrc', 'int', 'computedblockcrc', 'cbzip2inputstream', 'data']"
CBZip2OutputStream.java,bzip2,"['package', 'org', 'apache', 'tools', 'bzip2', 'cbzip2outputstream', 'extends', 'outputstream', 'implements', 'bzip2const', 'data', 'extends', 'object', 'cbzip2outputstream', 'cbzip2outputstream', 'crc', 'illegalargumentexcept', 'illegalargumentexcept', 'ioexcept', 'data', 'indexoutofboundsexcept', 'indexoutofboundsexcept', 'indexoutofboundsexcept', 'ioexcept', 'static', 'final', 'int', 'final', 'int', 'final', 'crc', 'int', 'runlength', 'cbzip2outputstream', 'data', 'outputstream']"
CCCheckin.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'cccheckin', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'string', 'mcomment', 'string', 'mcfile', 'boolean', 'mnwarn', 'boolean', 'mptime', 'boolean', 'mkeep', 'boolean', 'midentical']"
CCCheckout.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'cccheckout', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'commandlin', 'boolean', 'mreserved', 'string', 'mout', 'boolean', 'mndata', 'string', 'mbranch', 'boolean', 'mversion', 'boolean', 'mnwarn', 'string', 'mcomment', 'string', 'mcfile', 'boolean', 'mnotco']"
CCLock.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'cclock', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'buildexcept', 'boolean', 'mreplace', 'boolean', 'mobsolete', 'string', 'mcomment', 'string', 'mnusers', 'string', 'mpname', 'string', 'mobjselect']"
CCMCheck.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ccm', 'ccmcheck', 'extends', 'continuu', 'ccmcheck', 'file', 'vector', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'commandlin', 'buildexcept', 'file', 'file', 'string', 'comment', 'string', 'task']"
CCMCheckin.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ccm', 'ccmcheckin', 'extends', 'ccmcheck', 'ccmcheckin', 'date']"
CCMCheckinDefault.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ccm', 'ccmcheckindefault', 'extends', 'ccmcheck', 'ccmcheckindefault']"
CCMCheckout.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ccm', 'ccmcheckout', 'extends', 'ccmcheck', 'ccmcheckout']"
CCMCreateTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ccm', 'ccmcreatetask', 'extends', 'continuus', 'implements', 'executestreamhandl', 'ccmcreatetask', 'commandlin', 'buildexcept', 'commandlin', 'buildexcept', 'bufferedread', 'inputstreamread', 'bufferedread', 'inputstreamread', 'buildexcept', 'buildexcept', 'string', 'comment', 'string', 'platform', 'string', 'resolver', 'string', 'release', 'string', 'subsystem', 'string', 'task']"
CCMReconfigure.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ccm', 'ccmreconfigure', 'extends', 'continuu', 'ccmreconfigur', 'commandlin', 'buildexcept', 'string', 'ccmproject', 'boolean', 'recurse', 'boolean', 'verbose']"
CCMkattr.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'ccmkattr', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'buildexcept', 'buildexcept', 'boolean', 'mreplace', 'boolean', 'mrecurse', 'string', 'mversion', 'string', 'mtypename', 'string', 'mtypevalue', 'string', 'mcomment', 'string', 'mcfile']"
CCMkbl.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'ccmkbl', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'string', 'mcomment', 'string', 'mcfile', 'string', 'mbaselinerootname', 'boolean', 'mnwarn', 'boolean', 'midentical', 'boolean', 'mfull', 'boolean', 'mnlabel']"
CCMkdir.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'ccmkdir', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'string', 'mcomment', 'string', 'mcfile', 'boolean', 'mnoco']"
CCMkelem.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'ccmkelem', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'buildexcept', 'string', 'mcomment', 'string', 'mcfile', 'boolean', 'mnwarn', 'boolean', 'mptime', 'boolean', 'mnoco', 'boolean', 'mcheckin', 'boolean', 'mmaster', 'string', 'meltype']"
CCMklabel.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'ccmklabel', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'buildexcept', 'boolean', 'mreplace', 'boolean', 'mrecurse', 'string', 'mversion', 'string', 'mtypename', 'string', 'mvob', 'string', 'mcomment', 'string', 'mcfile']"
CCMklbtype.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'ccmklbtype', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'buildexcept', 'string', 'mtypename', 'string', 'mvob', 'string', 'mcomment', 'string', 'mcfile', 'boolean', 'mreplace', 'boolean', 'mglobal', 'boolean', 'mordinary', 'boolean', 'mpbranch', 'boolean', 'mshared']"
CCRmtype.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'ccrmtype', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'buildexcept', 'buildexcept', 'string', 'mtypekind', 'string', 'mtypename', 'string', 'mvob', 'string', 'mcomment', 'string', 'mcfile', 'boolean', 'mrmall', 'boolean', 'mignore']"
CCUnCheckout.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'ccuncheckout', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'boolean', 'mkeep']"
CCUnlock.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'ccunlock', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'buildexcept', 'string', 'mcomment', 'string', 'mpname']"
CCUpdate.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'ccupdate', 'extends', 'clearcas', 'commandlin', 'buildexcept', 'boolean', 'mgraphical', 'boolean', 'moverwrite', 'boolean', 'mrename', 'boolean', 'mctime', 'boolean', 'mptime', 'string', 'mlog']"
CRC.java,bzip2,"['package', 'org', 'apache', 'tools', 'bzip2', 'crc']"
CSharp.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'csharp', 'extends', 'dotnetcompil', 'csharp', 'file', 'int', 'filealign', 'boolean', 'fullpaths', 'boolean', 'noconfig']"
CVSEntry.java,cvslib,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'cvslib', 'cvsentri', 'cvsentri', 'date', 'vector', 'vector', 'rcsfile', 'rcsfile', 'date', 'final', 'str', 'final', 'vector']"
CVSPass.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'cvspass', 'extends', 'task', 'cvspass', 'file', 'buildexcept', 'buildexcept', 'stringbuff', 'bufferedread', 'fileread', 'printwrit', 'filewrit', 'buildexcept', 'stringbuff', 'string', 'cvsroot', 'file', 'passfile', 'string', 'password', 'final', 'char']"
Cab.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'cab', 'extends', 'matchingtask', 'vector', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'exectask', 'printwrit', 'fileoutputstream', 'vector', 'stringbuff', 'logoutputstream', 'logoutputstream', 'streampump', 'streampump', 'thread', 'thread', 'buildexcept', 'buildexcept', 'file', 'file', 'vector', 'boolean', 'docompress', 'boolean', 'doverbose', 'static', 'final', 'fileutil']"
Cache.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selectors', 'modifiedselector']"
CallTarget.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'calltarget', 'extends', 'task', 'properti', 'ant', 'buildexcept', 'ant', 'boolean', 'inheritall', 'boolean', 'inheritrefs', 'boolean', 'targetset']"
ChainedMapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'chainedmapper', 'extends', 'containermapp', 'arraylist', 'arraylist']"
ChangeLogParser.java,cvslib,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'cvslib', 'changelogpars', 'cvsentri', 'simpledateformat', 'simpledateformat', 'hashtabl', 'illegalstateexcept', 'cvsentri', 'illegalstateexcept', 'static', 'final', 'int', 'get_entry', 'static', 'final', 'int', 'get_file', 'static', 'final', 'int', 'get_date', 'static', 'final', 'int', 'get_comment', 'static', 'final', 'int', 'get_revision', 'static', 'final', 'int', 'get_previous_rev', 'static', 'final', 'simpledateformat', 'int', 'status', 'final', 'hasht']"
ChangeLogTask.java,cvslib,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'cvslib', 'changelogtask', 'extends', 'abstractcvstask', 'vector', 'vector', 'date', 'properti', 'cvsversion', 'simpledateformat', 'changelogpars', 'redirectingstreamhandl', 'buildexcept', 'buildexcept', 'buildexcept', 'fileinputstream', 'buildexcept', 'vector', 'fileoutputstream', 'printwrit', 'outputstreamwrit', 'changelogwrit', 'buildexcept', 'file', 'vector', 'file', 'file', 'date', 'date', 'final', 'vector']"
ChangeLogWriter.java,cvslib,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'cvslib', 'changelogwrit', 'simpledateformat', 'simpledateformat', 'domelementwrit', 'static', 'final', 'domelementwrit']"
Checksum.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'checksum', 'extends', 'matchingtask', 'implements', 'condit', 'fileunion', 'extends', 'restrict', 'formatelement', 'extends', 'enumeratedattribut', 'formatel', 'messageformat', 'union', 'hashmap', 'hashmap', 'hashtabl', 'messageformat', 'fileunion', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'file', 'fileinputstream', 'digestinputstream', 'fileoutputstream', 'buildexcept', 'stringbuff', 'buildexcept', 'bufferedread', 'fileread', 'buildexcept', 'buildexcept', 'buildexcept', 'hashmap', 'messageformat', 'messageformat', 'messageformat', 'formatel', 'union', 'file', 'file', 'file', 'string', 'provider', 'map', 'map', 'fileunion', 'resources', 'hashtabl', 'messagedigest', 'int', 'readbuffersize', '8', 'messageformat', 'static', 'hashmap', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str']"
ChecksumAlgorithm.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selectors', 'modifiedselector', 'checksumalgorithm', 'implements', 'algorithm', 'crc32', 'adler32', 'buildexcept', 'nosuchalgorithmexcept', 'fileinputstream', 'checkedinputstream', 'bufferedinputstream', 'stringbuff', 'checksum', 'checksum']"
Chgrp.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'unix', 'chgrp', 'extends', 'abstractaccesstask', 'chgrp', 'buildexcept', 'buildexcept', 'boolean', 'havegroup']"
Chmod.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'chmod', 'extends', 'executeon', 'chmod', 'patternset', 'patternset', 'patternset', 'fileset', 'fileset', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'fileset', 'boolean', 'defaultsetdefined', 'boolean', 'haveperm']"
Chown.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'unix', 'chown', 'extends', 'abstractaccesstask', 'chown', 'buildexcept', 'buildexcept', 'boolean', 'haveowner']"
ClassCPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'classcpinfo', 'extends', 'constantpoolentri', 'classcpinfo']"
ClassFile.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'classfil', 'vector', 'datainputstream', 'classformaterror', 'constantpool', 'vector', 'static', 'final', 'int', 'class_magic', 'constantpool']"
ClassFileIterator.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend']"
ClassFileUtils.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'classfileutil']"
ClassNameReader.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jlink', 'constantpool', 'classnamereader', 'extends', 'object', 'integ', 'doubl', 'integ', 'integ', 'datainputstream', 'constantpool']"
ClassfileSet.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'optional', 'depend', 'classfileset', 'extends', 'fileset', 'classroot', 'classfileset', 'directoryscann', 'object', 'vector', 'vector', 'dependscann', 'classfileset', 'vector', 'vector']"
Classloader.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'classloader', 'extends', 'task', 'classload', 'path', 'path', 'antclassload', 'file', 'string', 'name', 'path', 'boolean', 'reset', 'boolean', 'parentfirst', 'string', 'parentname']"
ClasspathUtils.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'classpathutil', 'deleg', 'path', 'path', 'classload', 'object', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'deleg', 'path', 'final', 'projectcompon', 'path', 'boolean', 'reverseloader']"
ClearCase.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'clearcas', 'clearcase', 'extends', 'task', 'file', 'execut', 'logstreamhandl', 'buildexcept', 'exectask', 'string', 'mviewpath', 'string', 'mobjselect', 'static', 'int', 'pcnt', 'boolean', 'mfailonerr', 'static', 'final', 'str']"
CollectionUtils.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'collectionutil', 'emptyenumeration', 'implements', 'enumer', 'compoundenumeration', 'implements', 'enumer', 'emptyenumer', 'object', 'object', 'object', 'compoundenumer', 'object', 'nosuchelementexcept', 'compoundenumer', 'enumer', 'iter', 'unsupportedoperationexcept', 'final', 'enumeration', 'e1']"
Commandline.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'commandline', 'implements', 'clon', 'argument', 'extends', 'projectcompon', 'marker', 'commandlin', 'commandlin', 'argument', 'argument', 'object', 'marker', 'iter', 'vector', 'path', 'argument', 'linkedlist', 'arraylist', 'buildexcept', 'stringbuff', 'stringtoken', 'vector', 'stringbuff', 'stringbuff', 'buildexcept', 'buildexcept', 'marker', 'stringbuff', 'stringbuff', 'static', 'final', 'boolean', 'vector', 'string', 'executable', 'string']"
CommandlineJava.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'commandlinejava', 'implements', 'clon', 'sysproperties', 'extends', 'environment', 'implements', 'clon', 'object', 'commandlinejava', 'commandlin', 'commandlin', 'path', 'path', 'commandlin', 'commandlin', 'path', 'path', 'sysproperti', 'object', 'commandlin', 'commandlin', 'sysproperti', 'vector', 'linkedlist', 'properti', 'buildexcept', 'buildexcept', 'buildexcept', 'properti', 'path', 'path', 'linkedlist', 'sysproperti', 'propertyset', 'buildexcept', 'path', 'commandlin', 'commandlin', 'sysproperti', 'path', 'classpath', 'path', 'bootclasspath', 'string', 'maxmemory', 'assertions', 'assertions', 'boolean', 'executejar', 'boolean', 'clonevm', 'vector']"
CommonsLoggingListener.java,listener,"['package', 'org', 'apache', 'tools', 'ant', 'listen', 'commonslogginglistener', 'implements', 'buildlistener', 'buildlogg', 'commonslogginglisten', 'boolean', 'initialized', 'logfactori']"
Compare.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'compare', 'extends', 'datatype', 'implements', 'resourceselector', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'delegatedresourcecompar', 'union', 'buildexcept', 'delegatedresourcecompar', 'quantifi', 'comparison', 'union']"
Comparison.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'comparison', 'extends', 'enumeratedattribut', 'comparison', 'comparison', 'comparison', 'comparison', 'comparison', 'comparison', 'comparison', 'comparison', 'buildexcept', 'static', 'final', 'int', 'static', 'final', 'int', 'static', 'final', 'int']"
Compatability.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'compat', 'final', 'str']"
Compatibility.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'compat', 'final', 'str']"
CompilerAdapter.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil']"
CompilerAdapterFactory.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'compileradapterfactori', 'jike', 'javacextern', 'javac12', 'javac13', 'javac12', 'buildexcept', 'jvc', 'kjc', 'gcj', 'sj', 'static', 'final', 'str']"
ComponentHelper.java,ant,"['package', 'org', 'apache', 'tools', 'componenthelp', 'm', 'getreturntype', 'anttypetable', 'extends', 'hasht', 'componenthelp', 'object', 'object', 'anttypedefinit', 'hashtabl', 'hashtabl', 'hashtabl', 'task', 'object', 'object', 'hashtabl', 'hashtabl', 'hashset', 'stack', 'componenthelp', 'anttypet', 'anttypedefinit', 'buildexcept', 'buildexcept', 'buildexcept', 'anttypedefinit', 'buildexcept', 'anttypedefinit', 'buildexcept', 'properti', 'buildexcept', 'anttypedefinit', 'typedef', 'stringwrit', 'printwrit', 'file', 'file', 'stringbuff', 'anttypet', 'hashtabl', 'boolean', 'rebuildtaskclassdefinitions', 'hashtabl', 'boolean', 'rebuildtypeclassdefinitions', 'set', 'stack', 'string', 'antlibcurrenturi', 'componenthelp', 'project', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'properties', 'project']"
CompositeMapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'compositemapper', 'extends', 'containermapp', 'hashset']"
CompressedResource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'compressedresource', 'extends', 'resourc', 'compressedresourc', 'compressedresourc', 'inputstream', 'outputstream', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'resourc']"
Concat.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'concat', 'extends', 'task', 'textelement', 'extends', 'projectcompon', 'multireader', 'extends', 'read', 'concat', 'path', 'exist', 'path', 'resourc', 'vector', 'stringbuff', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'restrict', 'buildexcept', 'restrict', 'stringresourc', 'fileoutputstream', 'buildexcept', 'concatresourceinputstream', 'thread', 'streampump', 'buildexcept', 'printwrit', 'logoutputstream', 'fileoutputstream', 'printwrit', 'bufferedwrit', 'outputstreamwrit', 'printwrit', 'bufferedwrit', 'outputstreamwrit', 'stringread', 'multiread', 'stringread', 'buildexcept', 'chainreaderhelp', 'bufferedread', 'buildexcept', 'bufferedread', 'fileread', 'bufferedread', 'inputstreamread', 'fileinputstream', 'buildexcept', 'stringbuff', 'bufferedread', 'inputstreamread', 'inputstreamread', 'static', 'final', 'int', 'buffer_size', 'static', 'final', 'fileutil', 'static', 'final', 'resourceselector', 'static', 'final', 'resourceselector', 'file', 'stringbuff', 'resourc', 'vector', 'boolean', 'forceoverwrite', 'textel', 'textel', 'boolean', 'fixlastline', 'writer', 'outputwriter', 'string', 'boolean', 'trimleading', 'boolean', 'trim', 'boolean', 'filtering', 'string', 'encoding', 'reader', 'reader', 'int', 'lastpos', 'char', 'boolean', 'needaddseparator', 'iter']"
ConcatFileInputStream.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'concatfileinputstream', 'extends', 'inputstream', 'concatfileinputstream', 'bufferedinputstream', 'fileinputstream', 'static', 'final', 'int', 'boolean', 'eof', 'file', 'inputstream', 'projectcompon']"
ConcatResourceInputStream.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'concatresourceinputstream', 'extends', 'inputstream', 'concatresourceinputstream', 'bufferedinputstream', 'static', 'final', 'int', 'boolean', 'eof', 'iter', 'inputstream', 'projectcompon', 'boolean', 'ignoreerrors']"
Condition.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit']"
ConditionBase.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'object', 'vector', 'vector']"
ConditionTask.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'conditiontask', 'extends', 'conditionbas', 'conditiontask', 'buildexcept', 'buildexcept', 'buildexcept', 'string', 'property', 'string', 'alternative']"
ConstantCPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'constantcpinfo', 'extends', 'constantpoolentri', 'object', 'object']"
ConstantPool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'constantpool', 'constantpool', 'constantpoolentri', 'vector', 'hashtabl', 'integ', 'stringbuff', 'vector', 'hashtabl']"
ConstantPoolEntry.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'constantpoolentri', 'constantpoolentri', 'utf8cpinfo', 'integercpinfo', 'floatcpinfo', 'longcpinfo', 'doublecpinfo', 'classcpinfo', 'stringcpinfo', 'fieldrefcpinfo', 'methodrefcpinfo', 'interfacemethodrefcpinfo', 'nameandtypecpinfo', 'classformaterror']"
Constants.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'constant']"
ContainerMapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'containermapper', 'implements', 'filenamemapp', 'synchron', 'synchron', 'arraylist', 'illegalargumentexcept', 'list']"
Contains.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'contains', 'implements', 'condit', 'buildexcept', 'string', 'string', 'boolean', 'casesensitive']"
ContainsRegexpSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'containsregexpselector', 'stringbuff', 'fileresourc', 'regularexpress', 'bufferedread', 'inputstreamread', 'buildexcept', 'buildexcept', 'buildexcept', 'string', 'userprovidedexpression', 'regularexpression', 'myregexp', 'regexp', 'myexpression']"
ContainsSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'containsselector', 'extends', 'baseextendselector', 'implements', 'resourceselector', 'containsselector', 'stringbuff', 'fileresourc', 'bufferedread', 'inputstreamread', 'buildexcept', 'buildexcept', 'string', 'contains', 'boolean', 'casesensitive', 'boolean', 'ignorewhitespace']"
Content.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'compar', 'content', 'extends', 'resourcecompar', 'buildexcept', 'boolean', 'binary']"
Continuus.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ccm', 'continuus', 'extends', 'task', 'execut', 'buildexcept', 'logstreamhandl', 'static', 'final', 'str']"
Copy.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'copy', 'extends', 'task', 'copi', 'filterchain', 'filterset', 'mapper', 'resourc', 'file', 'vector', 'hashtabl', 'hashtabl', 'hashtabl', 'vector', 'vector', 'filterchain', 'filterset', 'buildexcept', 'mapper', 'file', 'buildexcept', 'hashmap', 'hashmap', 'hashset', 'arraylist', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'vector', 'sourcefilescann', 'file', 'file', 'file', 'hashmap', 'vector', 'resourcefactori', 'fileresourc', 'file', 'file', 'filtersetcollect', 'file', 'buildexcept', 'file', 'filtersetcollect', 'fileresourc', 'file', 'buildexcept', 'arraylist', 'flatfilenamemapp', 'identitymapp', 'stringbuff', 'boolean', 'enablemultiplemappings', 'vector', 'vector', 'string', 'inputencoding', 'string', 'outputencoding', 'long', 'granularity']"
CopyPath.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'copypath', 'extends', 'task', 'path', 'buildexcept', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'file', 'buildexcept', 'static', 'final', 'fileutil', 'filenamemapp', 'path', 'file', 'boolean', 'preservelastmodified']"
Copydir.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'copydir', 'extends', 'matchingtask', 'hashtabl', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'file', 'file', 'file', 'file', 'file', 'boolean', 'filtering', 'boolean', 'flatten', 'boolean', 'forceoverwrite', 'hashtabl']"
Copyfile.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'copyfile', 'extends', 'task', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'file', 'boolean', 'filtering', 'boolean', 'forceoverwrite']"
Cvs.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'cvs', 'extends', 'abstractcvstask', 'cv']"
CvsTagDiff.java,cvslib,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'cvslib', 'package', 'p', 'package', 'cvstagdiff', 'extends', 'abstractcvstask', 'domelementwrit', 'stringtoken', 'bufferedread', 'fileread', 'vector', 'cvstagentri', 'cvstagentri', 'cvstagentri', 'buildexcept', 'fileoutputstream', 'printwrit', 'outputstreamwrit', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'fileutil', 'static', 'final', 'domelementwrit', 'file']"
CvsTagEntry.java,cvslib,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'cvslib', 'cvstagentri', 'cvstagentri', 'cvstagentri', 'cvstagentri', 'stringbuff']"
CvsUser.java,cvslib,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'cvslib', 'cvsuser', 'buildexcept', 'buildexcept']"
CvsVersion.java,cvslib,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'cvslib', 'cvsversion', 'extends', 'abstractcvstask', 'stringtoken', 'bytearrayoutputstream', 'bytearrayoutputstream', 'stringtoken']"
DDCreator.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'ddcreator', 'extends', 'matchingtask', 'buildexcept', 'buildexcept', 'path', 'buildexcept', 'file', 'file', 'file', 'file']"
DOMElementWriter.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'used', 'bi', 'domelementwrit', 'xmlnamespacepolici', 'xmlnamespacepolici', 'domelementwrit', 'domelementwrit', 'domelementwrit', 'hashmap', 'hashmap', 'xmlnamespacepolici', 'xmlnamespacepolici', 'xmlnamespacepolici', 'outputstreamwrit', 'stringbuff', 'stringbuff', 'arraylist', 'static', 'final', 'str', 'boolean', 'xmldeclaration', 'xmlnamespacepolici', 'hashmap', 'int', 'nextprefix', 'hashmap', 'static', 'str']"
DOMUtil.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'domutil', 'nodelistimpl', 'extends', 'vector', 'implements', 'nodelist', 'node', 'nodelistimpl', 'illegalstateexcept']"
DOMUtils.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'domutil']"
DTDLocation.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'dtdlocation', 'extends', 'resourceloc']"
DataType.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'datatype', 'extends', 'projectcomponent', 'implements', 'clon', 'refer', 'object', 'identitystack', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept']"
Date.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'date', 'implements', 'resourceselector', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'buildexcept', 'simpledateformat', 'buildexcept', 'buildexcept', 'static', 'final', 'fileutil', 'long', 'millis', 'string', 'datetime', 'string', 'pattern', 'timecomparison']"
Date.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'compar', 'date', 'extends', 'resourcecompar']"
DateSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'dateselector', 'extends', 'baseextendselector', 'timecomparisons', 'extends', 'timecomparison', 'dateselector', 'stringbuff', 'integ', 'timecomparison', 'simpledateformat', 'static', 'final', 'fileutil', 'string', 'datetime', 'boolean', 'includedirs', 'long', 'granularity', 'timecomparison']"
DateUtils.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'dateutil', 'simpledateformat', 'messageformat', 'choiceformat', 'choiceformat', 'date', 'simpledateformat', 'stringbuff', 'simpledateformat', 'simpledateformat', 'static', 'final', 'double', 'static', 'final', 'string', 'static', 'final', 'string', 'static', 'final', 'choiceformat', 'static', 'final', 'choiceformat']"
DefBase.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'defbase', 'extends', 'antlibdefinit', 'path', 'path', 'classload', 'classpathutils', 'deleg']"
DefaultCompilerAdapter.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'defaultcompileradapter', 'implements', 'compileradapt', 'javac', 'path', 'path', 'path', 'commandlin', 'commandlin', 'stringbuff', 'printwrit', 'filewrit', 'buildexcept', 'execut', 'logstreamhandl', 'buildexcept', 'path', 'static', 'final', 'fileutil']"
DefaultExcludes.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'defaultexcludes', 'extends', 'task', 'buildexcept', 'stringbuff', 'boolean', 'defaultrequested', 'boolean', 'echo']"
DefaultJspCompilerAdapter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jsp', 'compil', 'jspc', 'project', 'stringbuff', 'static', 'str']"
DefaultLogger.java,ant,"['package', 'org', 'apache', 'tools', 'defaultlogger', 'implements', 'buildlogg', 'defaultlogg', 'printstream', 'printstream', 'stringbuff', 'stringbuff', 'stringbuff', 'bufferedread', 'stringread']"
DefaultNative2Ascii.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'native2ascii', 'defaultnative2ascii', 'implements', 'native2asciiadapt', 'defaultnative2ascii', 'commandlin']"
DefaultRmicAdapter.java,rmic,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'rm', 'defaultrmicadapter', 'implements', 'rmicadapt', 'rmicfilenamemapper', 'implements', 'filenamemapp', 'defaultrmicadapt', 'rmic', 'filenamemapp', 'path', 'random', 'rmicfilenamemapp', 'path', 'path', 'commandlin', 'stringbuff', 'rmic', 'filenamemapp', 'static', 'final', 'random']"
Definer.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'definer', 'extends', 'defbas', 'resourcestack', 'extends', 'threadloc', 'onerror', 'extends', 'enumeratedattribut', 'format', 'extends', 'enumeratedattribut', 'object', 'onerror', 'onerror', 'file', 'object', 'hashmap', 'resourcestack', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'enumer', 'nosuchelementexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'properti', 'buildexcept', 'buildexcept', 'anttypedefinit', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'str', 'static', 'resourcestack', 'file', 'int', 'boolean', 'definerset', 'int', 'string', 'string', 'class', 'class', 'boolean', 'more']"
DelegatedResourceComparator.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'compar', 'delegatedresourcecomparator', 'extends', 'resourcecompar', 'synchron', 'synchron', 'synchron', 'vector', 'vector', 'v']"
Delete.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'delete', 'extends', 'matchingtask', 'reversedirs', 'implements', 'resourcecollect', 'iter', 'patternset', 'patternset', 'patternset', 'patternset', 'patternset', 'revers', 'filesystem', 'exist', 'compar', 'fileresourceiter', 'vector', 'resourc', 'buildexcept', 'buildexcept', 'resourc', 'resourc', 'reversedir', 'restrict', 'sort', 'buildexcept', 'buildexcept', 'file', 'file', 'file', 'static', 'final', 'int', 'delete_retry_sleep_millis', 'static', 'final', 'resourcecompar', 'static', 'final', 'resourceselector', 'file', 'string', 'boolean', 'quiet', 'boolean', 'failonerror', 'boolean', 'deleteonexit', 'resources', 'rcs']"
Deltree.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'deltree', 'extends', 'task', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'file']"
DemuxInputStream.java,ant,"['package', 'org', 'apache', 'tools', 'demuxinputstream', 'extends', 'inputstream', 'demuxinputstream', 'project']"
DemuxOutputStream.java,ant,"['package', 'org', 'apache', 'tools', 'demuxoutputstream', 'extends', 'outputstream', 'bufferinfo', 'demuxoutputstream', 'weakhashmap', 'bufferinfo', 'bytearrayoutputstream', 'bytearrayoutputstream', 'bytearrayoutputstream', 'boolean', 'crseen', 'static', 'final', 'int', 'max_size', 'static', 'final', 'int', 'intial_size', 'static', 'final', 'int', 'cr', 'static', 'final', 'int', 'lf', 'weakhashmap', 'project']"
Depend.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'depend', 'extends', 'matchingtask', 'classfileinfo', 'path', 'path', 'path', 'hashtabl', 'bufferedread', 'fileread', 'vector', 'file', 'printwrit', 'filewrit', 'path', 'hashtabl', 'hashtabl', 'hashtabl', 'file', 'antanalyz', 'vector', 'hashtabl', 'hashtabl', 'hashtabl', 'object', 'hashtabl', 'file', 'ioexcept', 'file', 'hashtabl', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'vector', 'file', 'file', 'file', 'classfileinfo', 'file', 'file', 'boolean', 'isuserwarned', 'path', 'path', 'file', 'string', 'hashtabl', 'hashtabl', 'hashtabl', 'hashtabl', 'boolean', 'closure', 'boolean', 'warnonrmistubs', 'boolean', 'dump', 'path', 'static', 'final', 'str', 'static', 'final', 'str']"
DependScanner.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'optional', 'depend', 'dependscanner', 'extends', 'directoryscann', 'dependscann', 'synchron', 'synchron', 'synchron', 'illegalstateexcept', 'vector', 'buildexcept', 'path', 'hashtabl', 'file', 'vector', 'vector', 'directoryscann']"
DependSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'dependselector', 'extends', 'mappingselector', 'dependselector', 'stringbuff']"
DependSet.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'dependset', 'extends', 'matchingtask', 'nonexistent', 'extends', 'restrict', 'xest', 'extends', 'sort', 'oldest', 'extends', 'xest', 'newest', 'extends', 'xest', 'hidemissingbasedir', 'implements', 'resourcecollect', 'iter', 'synchron', 'synchron', 'exist', 'revers', 'union', 'path', 'hidemissingbasedir', 'buildexcept', 'buildexcept', 'delet', 'nonexist', 'oldest', 'nonexist', 'newest', 'restrict', 'static', 'final', 'resourceselector', 'static', 'final', 'resourcecompar', 'fileset', 'union', 'sources', 'path', 'targets']"
DependencyAnalyzer.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'depend']"
DependencyVisitor.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'depend', 'bcel', 'dependencyvisitor', 'extends', 'emptyvisitor', 'enumer', 'hashtabl', 'stringtoken', 'hashtabl', 'constantpool']"
DepthSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'depthselector', 'extends', 'baseextendselector', 'depthselector', 'stringbuff', 'stringtoken', 'stringtoken', 'buildexcept', 'buildexcept']"
Description.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'description', 'extends', 'datatyp', 'stringbuff', 'vector']"
DescriptorHandler.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'descriptorhandler', 'extends', 'org', 'xml', 'sax', 'handlerbas', 'descriptorhandl', 'inputsourc', 'hashtabl', 'hashtabl', 'hashtabl', 'hashtabl', 'file', 'url', 'inputsourc', 'fileinputstream', 'inputsourc', 'inputsourc', 'hashtabl', 'hashtabl', 'file', 'static', 'final', 'int', 'default_hash_table_size', 'static', 'final', 'int', 'state_looking_ejbjar', 'static', 'final', 'int', 'state_in_ejbjar', 'static', 'final', 'int', 'state_in_beans', 'static', 'final', 'int', 'state_in_session', 'static', 'final', 'int', 'state_in_entity', 'static', 'final', 'int', 'state_in_message', 'task', 'string', 'publicid', 'int', 'parsestate', 'hashtabl', 'hashtabl', 'boolean', 'inejbref', 'hashtabl', 'file']"
DeweyDecimal.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'deweydecimal', 'extends', 'org', 'apache', 'tools', 'ant', 'util', 'deweydecim', 'deweydecim', 'deweydecim']"
DeweyDecimal.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'deweydecim', 'deweydecim', 'deweydecim', 'stringtoken', 'numberformatexcept', 'numberformatexcept', 'stringbuff', 'int']"
Diagnostics.java,ant,"['package', 'org', 'apache', 'tools', 'diagnost', 'buildexcept', 'file', 'filenamefilt', 'project', 'file', 'properti', 'file', 'fileoutputstream', 'static', 'final', 'int', 'big_drift_limit', 'static', 'final', 'int', 'test_file_size', 'static', 'final', 'int', 'kilobyte', 'static', 'final', 'int', 'seconds_per_millisecond', 'static', 'final', 'int', 'seconds_per_minute', 'static', 'final', 'int', 'minutes_per_hour']"
DiagnosticsTask.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'diagnosticstask', 'extends', 'task', 'static', 'final', 'string']"
Difference.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'difference', 'extends', 'baseresourcecollectioncontain', 'buildexcept', 'hashset', 'arraylist']"
DifferentSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'differentselector', 'extends', 'mappingselector', 'buildexcept', 'static', 'final', 'fileutil', 'boolean', 'ignorefiletimes', 'boolean', 'ignorecontents']"
DigestAlgorithm.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selectors', 'modifiedselector', 'digestalgorithm', 'implements', 'algorithm', 'buildexcept', 'buildexcept', 'buildexcept', 'fileinputstream', 'digestinputstream', 'stringbuff', 'stringbuff', 'string', 'provider', 'messagedigest', 'messagedigest', 'int', 'readbuffersize', '8']"
DirSet.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'dirset', 'extends', 'abstractfileset', 'implements', 'resourcecollect', 'dirset', 'object', 'iter', 'fileresourceiter', 'stringbuff']"
Directory.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ssh', 'directori', 'directori', 'directori', 'iter', 'iter', 'directori', 'file', 'directori', 'arraylist', 'arraylist', 'stringtoken', 'file', 'arraylist', 'arraylist', 'directori']"
DirectoryIterator.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'directoryiterator', 'implements', 'classfileiter', 'directoryiter', 'classfil', 'stack', 'vector', 'file', 'fileinputstream', 'classfil', 'stack', 'enumer']"
DirectoryScanner.java,ant,"['package', 'org', 'apache', 'tools', 'directoryscann', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'file', 'vector', 'hashmap', 'hashset', 'hashset', 'hashset', 'object', 'object', 'vector', 'file', 'illegalstateexcept', 'illegalstateexcept', 'hashmap', 'buildexcept', 'file', 'buildexcept', 'vector', 'vector', 'vector', 'vector', 'vector', 'vector', 'vector', 'vector', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'vector', 'file', 'file', 'illegalstateexcept', 'illegalstateexcept', 'illegalstateexcept', 'illegalstateexcept', 'fileresourc', 'file', 'file', 'buildexcept', 'file', 'file', 'arraylist', 'static', 'final', 'boolean', 'static', 'final', 'fileutil', 'static', 'final', 'boolean', 'static', 'final', 'boolean', 'static', 'vector', 'boolean', 'followsymlinks', 'map', 'set', 'set', 'set', 'string', 'string', 'boolean', 'arenonpatternsetsready', 'boolean', 'scanning', 'object', 'boolean', 'slowscanning', 'object', 'illegalstateexception', 'illegal']"
Dirname.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'dirname', 'extends', 'task', 'buildexcept', 'buildexcept', 'file']"
DotnetBaseMatchingTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'dotnetbasematchingtask', 'extends', 'matchingtask', 'file', 'file', 'vector', 'hashtabl']"
DotnetCompile.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'targettypes', 'extends', 'enumeratedattribut', 'dotnetcompil', 'file', 'vector', 'vector', 'vector', 'path', 'stringbuff', 'buildexcept', 'stringbuff', 'buildexcept', 'buildexcept', 'hashtabl', 'netcommand', 'boolean', 'includedefaultreferences', 'file', 'file', 'path', 'boolean', 'useresponsefile', 'static', 'final', 'int', 'automatic_response_file_threshold']"
DotnetDefine.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'dotnetdefin', 'buildexcept']"
DotnetResource.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'dotnetresourc', 'file', 'arraylist', 'buildexcept', 'buildexcept', 'buildexcept', 'stringbuff', 'buildexcept', 'buildexcept', 'file', 'boolean', 'embed', 'boolean', 'ispublic', 'string', 'name', 'arraylist', 'string', 'namespace']"
DoubleCPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'doublecpinfo', 'extends', 'constantcpinfo', 'doublecpinfo', 'doubl']"
DynamicAttribute.java,ant,"['package', 'org', 'apache', 'tools']"
DynamicAttributeNS.java,ant,"['package', 'org', 'apache', 'tools']"
DynamicConfigurator.java,ant,"['package', 'org', 'apache', 'tools']"
DynamicConfiguratorNS.java,ant,"['package', 'org', 'apache', 'tools']"
DynamicElement.java,ant,"['package', 'org', 'apache', 'tools']"
DynamicElementNS.java,ant,"['package', 'org', 'apache', 'tools']"
EJBDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb']"
Ear.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'ear', 'extends', 'jar', 'ear', 'buildexcept', 'zipfileset', 'buildexcept', 'static', 'final', 'fileutil', 'file']"
Echo.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'echo', 'extends', 'task', 'echolevel', 'extends', 'loglevel', 'filewrit', 'bufferedwrit', 'outputstreamwrit', 'fileoutputstream', 'buildexcept']"
EchoProperties.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'echoproperties', 'extends', 'task', 'formatattribute', 'extends', 'enumeratedattribut', 'tuple', 'implements', 'compar', 'enumer', 'set', 'vector', 'propertyset', 'propertyset', 'buildexcept', 'hashtabl', 'buildexcept', 'buildexcept', 'fileinputstream', 'properti', 'buildexcept', 'buildexcept', 'bytearrayoutputstream', 'buildexcept', 'buildexcept', 'fileoutputstream', 'buildexcept', 'arraylist', 'properti', 'treeset', 'compar', 'arraylist', 'tupl', 'outputstreamwrit', 'domelementwrit', 'buildexcept', 'buildexcept', 'exceptionininitializererror', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'file', 'infile', 'file', 'destfile', 'boolean', 'failonerror', 'vector', 'string']"
EchoXML.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'echoxml', 'extends', 'xmlfrag', 'domelementwrit', 'fileoutputstream', 'logoutputstream', 'buildexcept', 'buildexcept', 'file', 'static', 'final', 'str']"
EjbJar.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'ejbjar', 'extends', 'matchingtask', 'config', 'namingscheme', 'extends', 'enumeratedattribut', 'cmpversion', 'extends', 'enumeratedattribut', 'list', 'arraylist', 'weblogicdeploymenttool', 'webspheredeploymenttool', 'borlanddeploymenttool', 'iplanetdeploymenttool', 'jbossdeploymenttool', 'jonasdeploymenttool', 'weblogictoplinkdeploymenttool', 'path', 'dtdlocat', 'fileset', 'file', 'arraylist', 'arraylist', 'config', 'arraylist', 'weblogicdeploymenttool', 'webspheredeploymenttool', 'borlanddeploymenttool', 'iplanetdeploymenttool', 'jbossdeploymenttool', 'jonasdeploymenttool', 'weblogictoplinkdeploymenttool', 'path', 'dtdlocat', 'fileset', 'namingschem', 'buildexcept', 'buildexcept', 'buildexcept', 'namingschem', 'buildexcept', 'genericdeploymenttool', 'buildexcept', 'buildexcept', 'config', 'file', 'arraylist']"
Ejbc.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'ejbc', 'extends', 'matchingtask', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'buildexcept', 'file', 'file', 'file', 'file', 'file', 'file', 'file', 'file']"
EmailAddress.java,email,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'email', 'emailaddress', 'emailaddress', 'emailaddress']"
EmailTask.java,email,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'email', 'emailtask', 'extends', 'task', 'encoding', 'extends', 'enumeratedattribut', 'path', 'header', 'vector', 'vector', 'vector', 'vector', 'vector', 'buildexcept', 'messag', 'buildexcept', 'messag', 'buildexcept', 'buildexcept', 'buildexcept', 'emailaddress', 'emailaddress', 'stringtoken', 'emailaddress', 'stringtoken', 'emailaddress', 'stringtoken', 'emailaddress', 'stringtoken', 'fileresourc', 'path', 'header', 'buildexcept', 'buildexcept', 'plainmail', 'buildexcept', 'messag', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'vector', 'buildexcept', 'string', 'encoding', 'int', 'port', 'string', 'subject', 'message', 'message', 'boolean', 'failonerror', 'boolean', 'includefilenames', 'string', 'messagemimetype', 'emailaddress', 'from', 'vector', 'vector', 'vector', 'vector', 'vector', 'path', 'attachments', 'string', 'charset', 'string', 'user', 'string', 'password', 'boolean', 'ssl']"
EnumeratedAttribute.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'enumeratedattribut', 'buildexcept', 'buildexcept', 'buildexcept']"
Enumerations.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'enumer', 'arrayenumeration', 'implements', 'enumer', 'compoundenumeration', 'implements', 'enumer', 'arrayenumer', 'object', 'compoundenumer', 'object', 'arrayenumer', 'compoundenumer', 'nosuchelementexcept', 'nosuchelementexcept', 'object', 'enumeration', 'int', 'index']"
Environment.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'environ', 'variabl', 'variabl', 'environ', 'vector', 'stringbuff', 'buildexcept', 'vector', 'string', 'key']"
EqualComparator.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selectors', 'modifiedselector', 'equalcomparator', 'implements', 'compar']"
Equals.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'equals', 'implements', 'condit', 'buildexcept', 'string', 'arg1', 'boolean', 'trim', 'boolean', 'casesensitive']"
ErrorInQuitException.java,mail,"['package', 'org', 'apache', 'tools', 'mail', 'errorinquitexception', 'extends', 'ioexcept', 'errorinquitexcept']"
Exec.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'exec', 'extends', 'task', 'streampumper', 'extends', 'thread', 'exec', 'streampump', 'buildexcept', 'buildexcept', 'printwrit', 'filewrit', 'streampump', 'streampump', 'buildexcept', 'buildexcept', 'bufferedread', 'inputstreamread', 'file', 'boolean', 'failonerror', 'bufferedread', 'boolean', 'endofstream', 'static', 'final', 'int', 'sleep_time']"
ExecTask.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'exectask', 'extends', 'task', 'exectask', 'exectask', 'commandlin', 'environ', 'commandlin', 'redirector', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'path', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'execut', 'buildexcept', 'buildexcept', 'buildexcept', 'executewatchdog', 'static', 'final', 'fileutil', 'file', 'long', 'timeout', 'environ', 'boolean', 'failifexecfails', 'boolean', 'resolveexecutable', 'boolean', 'searchpath', 'boolean', 'spawn', 'boolean', 'incompatiblewithspawn', 'file', 'file', 'file', 'boolean', 'vmlauncher']"
Execute.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'execut', 'commandlaunch', 'java13commandlauncher', 'extends', 'commandlaunch', 'commandlauncherproxy', 'extends', 'commandlaunch', 'os2commandlauncher', 'extends', 'commandlauncherproxi', 'winntcommandlauncher', 'extends', 'commandlauncherproxi', 'maccommandlauncher', 'extends', 'commandlauncherproxi', 'scriptcommandlauncher', 'extends', 'commandlauncherproxi', 'vmscommandlauncher', 'extends', 'java13commandlaunch', 'execut', 'execut', 'execut', 'file', 'process', 'process', 'java13commandlaunch', 'process', 'process', 'process', 'process', 'process', 'process', 'process', 'vmscommandlaunch', 'process', 'process', 'processdestroy', 'java13commandlaunch', 'maccommandlaunch', 'commandlaunch', 'os2commandlaunch', 'commandlaunch', 'commandlaunch', 'winntcommandlaunch', 'scriptcommandlaunch', 'commandlaunch', 'perlscriptcommandlaunch', 'vmscommandlaunch', 'scriptcommandlaunch', 'commandlaunch', 'vector', 'bytearrayoutputstream', 'execut', 'pumpstreamhandl', 'bufferedread', 'stringread', 'file', 'file', 'pumpstreamhandl', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'outputstream', 'pumpstreamhandl', 'execut', 'logstreamhandl', 'buildexcept', 'buildexcept', 'hashmap', 'ioexcept', 'buildexcept', 'buildexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'printwrit', 'filewrit', 'thread', 'static', 'final', 'fileutil', 'string', 'cmdl', 'string', 'env', 'int', 'exitvalue', 'executestreamhandl', 'executewatchdog', 'file', 'workingdirectory', 'project', 'project', 'boolean', 'newenvironment', 'boolean', 'spawn', 'boolean', 'usevmlauncher', 'static', 'str', 'static', 'commandlauncher', 'vmlauncher', 'static', 'commandlauncher', 'shelllauncher', 'static', 'vector', 'procenvironment', 'static', 'processdestroy', 'static', 'boolean', 'environmentcaseinsensitive', 'method', 'commandlaunch']"
ExecuteJava.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'executejava', 'implements', 'runnable', 'timeoutobserv', 'synchron', 'synchron', 'buildexcept', 'buildexcept', 'buildexcept', 'thread', 'watchdog', 'buildexcept', 'commandlinejava', 'redirector', 'execut', 'executewatchdog', 'buildexcept', 'buildexcept', 'commandline', 'javacommand', 'path', 'classpath', 'commandlinejava', 'sysproperties', 'sysproperties', 'permissions', 'perm', 'method', 'main', 'long', 'timeout', 'volatile', 'throwable', 'caught', 'volatile', 'boolean', 'timedout', 'thread', 'thread']"
ExecuteOn.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'executeon', 'extends', 'exectask', 'filedirboth', 'extends', 'enumeratedattribut', 'commandlin', 'commandlin', 'mapper', 'vector', 'union', 'buildexcept', 'buildexcept', 'buildexcept', 'mapper', 'buildexcept', 'buildexcept', 'buildexcept', 'pumpstreamhandl', 'vector', 'vector', 'buildexcept', 'vector', 'hashtabl', 'file', 'file', 'sourcefilescann', 'union', 'resources', 'boolean', 'relative', 'boolean', 'parallel', 'boolean', 'forwardslash', 'boolean', 'skipempty', 'boolean', 'addsourcefile', 'boolean', 'verbose', 'boolean', 'ignoremissing', 'boolean', 'force']"
ExecuteStreamHandler.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef']"
ExecuteWatchdog.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'executewatchdog', 'implements', 'timeoutobserv', 'executewatchdog', 'executewatchdog', 'synchron', 'synchron', 'synchron', 'synchron', 'executewatchdog', 'execut', 'watchdog', 'nullpointerexcept', 'illegalstateexcept', 'buildexcept', 'process', 'volatile', 'boolean', 'watch', 'exception', 'caught', 'volatile', 'boolean', 'killedprocess', 'watchdog']"
Executor.java,ant,"['package', 'org', 'apache', 'tools']"
Exists.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'compar', 'exists', 'extends', 'resourcecompar']"
Exists.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'exists', 'implements', 'resourceselector']"
Exit.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'exit', 'extends', 'task', 'nestedcondition', 'extends', 'conditionbase', 'implements', 'condit', 'conditionbas', 'buildexcept', 'integ', 'buildexcept', 'exitstatusexcept', 'buildexcept', 'nestedcondit', 'buildexcept', 'string', 'ifcondition', 'nestedcondit', 'integ']"
ExitException.java,ant,"['package', 'org', 'apache', 'tools', 'exitexception', 'extends', 'securityexcept', 'exitexcept', 'exitexcept']"
ExitStatusException.java,ant,"['package', 'org', 'apache', 'tools', 'exitstatusexception', 'extends', 'buildexcept', 'exitstatusexcept', 'exitstatusexcept', 'exitstatusexcept']"
Expand.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'expand', 'extends', 'task', 'mapper', 'vector', 'union', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'zipfil', 'date', 'buildexcept', 'buildexcept', 'identitymapp', 'hashset', 'hashset', 'fileoutputstream', 'buildexcept', 'mapper', 'file', 'file', 'boolean', 'overwrite', 'mapper', 'mapperelement', 'vector', 'union', 'boolean', 'resourcesspecified', 'static', 'final', 'str', 'static', 'final', 'fileutil']"
ExtendFileSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector']"
ExtendSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'extendselector', 'extends', 'baseselector', 'extendselector', 'vector', 'path', 'string', 'classname', 'fileselector', 'dynselector', 'vector', 'path', 'classpath']"
Extension.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'extens', 'extens', 'deweydecim', 'deweydecim', 'compat', 'compat', 'compat', 'compat', 'compat', 'compat', 'arraylist', 'deweydecim', 'illegalargumentexcept', 'deweydecim', 'illegalargumentexcept', 'nullpointerexcept', 'stringbuff', 'arraylist', 'stringtoken', 'extens', 'deweydecim', 'deweydecim']"
ExtensionAdapter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'extensionadapter', 'extends', 'datatyp', 'deweydecim', 'deweydecim', 'buildexcept', 'buildexcept', 'extens', 'deweydecim', 'deweydecim']"
ExtensionResolver.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens']"
ExtensionSet.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'extens', 'arraylist', 'arraylist', 'buildexcept', 'final', 'arraylist', 'final', 'arraylist']"
ExtensionUtil.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'extensionutil', 'arraylist', 'arraylist', 'file', 'jarfil', 'buildexcept', 'extens', 'extens', 'jarfil', 'buildexcept', 'buildexcept']"
ExtraAttribute.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'extraattribut', 'buildexcept', 'buildexcept']"
ExtraFieldUtils.java,zip,"['package', 'org', 'apache', 'tools', 'zip', 'extrafieldutil', 'hashtabl', 'runtimeexcept', 'runtimeexcept', 'runtimeexcept', 'unrecognizedextrafield', 'vector', 'zipshort', 'zipshort', 'zipexcept', 'zipexcept', 'zipexcept', 'zipexcept', 'static', 'hasht']"
FStatP4OutputHandler.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'fstatp4outputhandler', 'extends', 'p4handleradapt', 'fstatp4outputhandl', 'arraylist', 'arraylist', 'arraylist', 'arraylist', 'perl5util', 'p4fstat', 'arraylist', 'arraylist', 'static', 'perl5util']"
FTP.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'net', 'ftpdirectoryscanner', 'extends', 'directoryscann', 'antftpfil', 'antftprootfile', 'extends', 'antftpfil', 'action', 'extends', 'enumeratedattribut', 'granularity', 'extends', 'enumeratedattribut', 'ftpsystemtype', 'extends', 'enumeratedattribut', 'languagecode', 'extends', 'enumeratedattribut', 'ftpdirectoryscann', 'ftpfile', 'ftpfile', 'antftpfil', 'antftpfil', 'ftpfile', 'antftprootfil', 'vector', 'vector', 'vector', 'vector', 'vector', 'vector', 'vector', 'vector', 'buildexcept', 'hashtabl', 'buildexcept', 'antftprootfil', 'antftpfil', 'buildexcept', 'antftpfil', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'hashmap', 'hashset', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'stringbuff', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'action', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'ftpdirectoryscann', 'buildexcept', 'bufferedwrit', 'filewrit', 'retryhandl', 'retryabl', 'retryabl', 'buildexcept', 'buildexcept', 'file', 'vector', 'file', 'buildexcept', 'buildexcept', 'bufferedinputstream', 'fileinputstream', 'delet', 'buildexcept', 'buildexcept', 'simpledateformat', 'buildexcept', 'stringbuff', 'date', 'stringbuff', 'date', 'date', 'file', 'file', 'bufferedinputstream', 'fileinputstream', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'bufferedoutputstream', 'fileoutputstream', 'buildexcept', 'stringtoken', 'buildexcept', 'buildexcept', 'ftpclient', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'retryhandl', 'retryabl', 'retryhandl', 'retryabl', 'retryhandl', 'retryabl', 'retryhandl', 'retryabl', 'buildexcept', 'buildexcept', 'granular', 'ftpsystemtyp', 'languagecod', 'static', 'final', 'int', 'code_521', 'static', 'final', 'long', 'granularity_minute', 'static', 'final', 'fileutil', 'file', 'boolean', 'binary', 'boolean', 'passive', 'boolean', 'verbose', 'boolean', 'neweronly', 'long', 'timediffmillis', 'long', 'granularitymillis', 'boolean', 'timediffauto', 'int', 'action', 'vector', 'vector', 'int', 'transferred', 'int', 'port', 'boolean', 'skipfailedtransfers', 'int', 'skipped', 'boolean', 'ignorenoncriticalerrors', 'boolean', 'preservelastmodified', 'string', 'chmod', 'string', 'umask', 'ftpsystemtyp', 'string', 'defaultdateformatconfig', 'string', 'recentdateformatconfig', 'languagecod', 'string', 'servertimezoneconfig', 'string', 'shortmonthnamesconfig', 'granular', 'boolean', 'isconfigurationset', 'int', 'retriesallowed', 'string', 'sitecommand', 'string', 'initialsitecommand', 'string', 'rootpath', 'boolean', 'remotesystemcasesensitive', 'boolean', 'remotesensitivitychecked', 'map', 'set', 'ftpclient', 'ftpfile', 'antftpfile', 'parent', 'boolean', 'relativepathcalculated', 'boolean', 'traversessymlinks', 'static', 'final', 'simpledateformat', 'static', 'final', 'string', 'static', 'final', 'string', 'static', 'final', 'string', 'static', 'final', 'string']"
FTPConfigurator.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'net', 'ftpconfigur', 'ftpclientconfig', 'ftpclientconfig']"
FacadeTaskHelper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'facad', 'facadetaskhelp', 'facadetaskhelp', 'facadetaskhelp', 'vector', 'vector', 'vector']"
FailFast.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'failfast', 'implements', 'iter', 'object', 'weakhashmap', 'hashset', 'concurrentmodificationexcept', 'illegalargumentexcept', 'illegalargumentexcept', 'nosuchelementexcept', 'unsupportedoperationexcept', 'static', 'final', 'weakhashmap', 'object', 'iter']"
FieldRefCPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'fieldrefcpinfo', 'extends', 'constantpoolentri', 'fieldrefcpinfo']"
FileList.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'filelist', 'extends', 'datatype', 'implements', 'resourcecollect', 'filenam', 'filelist', 'file', 'iter', 'vector', 'stringtoken', 'buildexcept', 'buildexcept', 'buildexcept', 'fileresourceiter', 'vector', 'file']"
FileNameMapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util']"
FileResource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'fileresource', 'extends', 'resource', 'implements', 'touch', 'fileresourc', 'fileresourc', 'fileresourc', 'fileresourc', 'file', 'file', 'inputstream', 'outputstream', 'fileinputstream', 'fileoutputstream', 'buildexcept', 'static', 'final', 'fileutil', 'file', 'file']"
FileResourceIterator.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'fileresourceiterator', 'implements', 'iter', 'fileresourceiter', 'fileresourceiter', 'fileresourceiter', 'object', 'fileresourc', 'unsupportedoperationexcept', 'nosuchelementexcept', 'fileresourc', 'file', 'string', 'int', 'pos']"
FileScanner.java,ant,"['package', 'org', 'apache', 'tools']"
FileSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector']"
FileSet.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'fileset', 'extends', 'abstractfileset', 'implements', 'resourcecollect', 'fileset', 'object', 'iter', 'fileresourceiter']"
FileSystem.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'compar', 'filesystem', 'extends', 'resourcecompar', 'static', 'final', 'fileutil']"
FileTokenizer.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'filetokenizer', 'extends', 'projectcomponent', 'implements', 'token']"
FileUtils.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'fileutil', 'url', 'file', 'file', 'file', 'file', 'file', 'fileutil', 'random', 'object', 'fileutil', 'url', 'file', 'file', 'file', 'file', 'file', 'file', 'file', 'file', 'file', 'file', 'file', 'file', 'file', 'file', 'fileresourc', 'fileresourc', 'fileresourc', 'file', 'file', 'stringbuff', 'pathtoken', 'stack', 'stringtoken', 'file', 'stringbuff', 'file', 'buildexcept', 'stringbuff', 'stringbuff', 'stringbuff', 'decimalformat', 'file', 'fileresourc', 'fileresourc', 'illegalargumentexcept', 'stringbuff', 'file', 'file', 'file', 'file', 'stringbuff', 'buildexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'arraylist', 'stringbuff', 'inputstreamread', 'inputstream', 'static', 'final', 'fileutil', 'static', 'random', 'static', 'boolean', 'static', 'boolean', 'static', 'boolean', 'static', 'boolean', 'object', 'string', 'cachefromurirequest', 'string', 'cachefromuriresponse']"
FilenameSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'filenameselector', 'extends', 'baseextendselector', 'filenameselector', 'stringbuff', 'string', 'pattern', 'boolean', 'casesensitive', 'boolean', 'negated']"
Files.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'file', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'patternset', 'vector', 'vector', 'patternset', 'fileresourceiter', 'stringbuff', 'vector', 'vector', 'buildexcept', 'patternset', 'directoryscann', 'patternset', 'vector', 'vector', 'boolean', 'usedefaultexcludes', 'boolean', 'casesensitive', 'boolean', 'followsymlinks', 'directoryscanner', 'ds']"
FilesMatch.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'filesmatch', 'implements', 'condit', 'buildexcept', 'buildexcept', 'static', 'final', 'fileutil', 'file', 'file1', 'boolean', 'textfile']"
Filter.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'filter', 'extends', 'task', 'buildexcept', 'file']"
FilterChain.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'vector', 'vector', 'buildexcept', 'vector']"
FilterMapper.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'mapp', 'filtermapper', 'extends', 'filterchain', 'implements', 'filenamemapp', 'unsupportedattributeexcept', 'unsupportedattributeexcept', 'stringread', 'chainreaderhelp', 'vector', 'buildexcept']"
FilterSet.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'filterset', 'extends', 'datatype', 'implements', 'clon', 'filter', 'filtersfil', 'onmissing', 'extends', 'enumeratedattribut', 'filter', 'filter', 'filtersfil', 'onmiss', 'onmiss', 'filterset', 'synchron', 'synchron', 'synchron', 'synchron', 'filtersfil', 'synchron', 'synchron', 'synchron', 'synchron', 'onmiss', 'onmiss', 'onmiss', 'onmiss', 'vector', 'vector', 'hashtabl', 'buildexcept', 'buildexcept', 'properti', 'fileinputstream', 'filter', 'buildexcept', 'filtersfil', 'filter', 'buildexcept', 'stringbuff', 'vector', 'buildexcept', 'buildexcept', 'static', 'final', 'int', 'fail_index', 'static', 'final', 'int', 'warn_index', 'static', 'final', 'int', 'ignore_index', 'string', 'startoftoken', 'string', 'endoftoken', 'vector', 'boolean', 'duplicatetoken', 'boolean', 'recurse', 'hashtable', 'filterhash', 'vector', 'onmiss', 'boolean', 'readingfiles', 'int', 'recursedepth', 'vector']"
FilterSetCollection.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'filtersetcollect', 'filtersetcollect', 'filtersetcollect', 'vector', 'vector']"
First.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'first', 'extends', 'baseresourcecollectionwrapp', 'synchron', 'synchron', 'buildexcept', 'arraylist', 'int', 'count']"
FixCRLF.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'fixcrlf', 'extends', 'matchingtask', 'implements', 'chainableread', 'oneliner', 'implements', 'enumer', 'bufferlin', 'addasisremove', 'extends', 'enumeratedattribut', 'crlf', 'extends', 'enumeratedattribut', 'onelin', 'object', 'bufferlin', 'fixcrlffilt', 'crlf', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'filterchain', 'vector', 'file', 'buildexcept', 'stringbuff', 'stringbuff', 'stringbuff', 'bufferedread', 'fileread', 'inputstreamread', 'fileinputstream', 'buildexcept', 'stringbuff', 'stringbuff', 'buildexcept', 'nosuchelementexcept', 'bufferlin', 'static', 'final', 'fileutil', 'boolean', 'preservelastmodified', 'file', 'file', 'destdir', 'file', 'fixcrlffilt', 'vector', 'fcv', 'string', 'encoding', 'string', 'outputencoding', 'static', 'final', 'int', 'static', 'final', 'int', 'notjava', 'static', 'final', 'int', 'looking', 'static', 'final', 'int', 'inbuflen', 'static', 'final', 'int', 'linebuflen', 'static', 'final', 'char', 'int', 'state', 'filter', 'getjavafiles', 'looking', 'stringbuff', 'stringbuff', 'bufferedread', 'stringbuff', 'boolean', 'reachedeof', 'file', 'int', 'next', 'int', 'column', 'int', 'lookahead']"
FlatFileNameMapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'flatfilenamemapper', 'implements', 'filenamemapp']"
FlexInteger.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'flexinteg', 'flexinteg', 'integ']"
FloatCPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'floatcpinfo', 'extends', 'constantcpinfo', 'floatcpinfo']"
ForkingSunRmic.java,rmic,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'rm', 'forkingsunrmic', 'extends', 'defaultrmicadapt', 'execut', 'logstreamhandl', 'buildexcept']"
FormatterElement.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'formatterel', 'typeattribute', 'extends', 'enumeratedattribut', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'bufferedoutputstream', 'fileoutputstream', 'buildexcept', 'outputstream', 'file', 'boolean', 'usefile']"
FullAnalyzer.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'depend', 'bcel', 'fullanalyzer', 'extends', 'abstractanalyz', 'fullanalyz', 'classpars', 'hashtabl', 'hashtabl', 'hashtabl', 'dependencyvisitor', 'classpars', 'classpars', 'descendingvisitor']"
GUnzip.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'gunzip', 'extends', 'unpack', 'fileoutputstream', 'gzipinputstream', 'buildexcept', 'static', 'final', 'str']"
GZip.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'gzip', 'extends', 'pack', 'gzipoutputstream', 'fileoutputstream', 'buildexcept']"
GZipResource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'gzipresource', 'extends', 'compressedresourc', 'gzipresourc', 'gzipresourc', 'gzipinputstream', 'gzipoutputstream']"
Gcj.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'gcj', 'extends', 'defaultcompileradapt', 'commandlin', 'path', 'buildexcept', 'static', 'final', 'string']"
GenerateKey.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'generatekey', 'extends', 'task', 'dnameparam', 'distinguishednam', 'object', 'enumer', 'distinguishednam', 'vector', 'dnameparam', 'stringbuff', 'stringbuff', 'buildexcept', 'buildexcept', 'distinguishednam', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'stringbuff', 'exectask', 'vector']"
GenericDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'genericdeploymenttool', 'implements', 'ejbdeploymenttool', 'genericdeploymenttool', 'path', 'path', 'path', 'fileinputstream', 'zipentri', 'descriptorhandl', 'file', 'buildexcept', 'buildexcept', 'fileinputstream', 'file', 'inputsourc', 'file', 'buildexcept', 'file', 'buildexcept', 'file', 'file', 'hashset', 'fileinputstream', 'buildexcept', 'manifest', 'jaroutputstream', 'fileoutputstream', 'innerclassfilenamefilt', 'file', 'buildexcept', 'file', 'buildexcept', 'ejbjar', 'config', 'file', 'path', 'task', 'classloader', 'classpathloader', 'set', 'descriptorhandl', 'dependencyanalyz']"
GenericHotDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'j2e', 'generichotdeploymenttool', 'extends', 'abstracthotdeploymenttool', 'commandlin', 'commandlin', 'buildexcept', 'static', 'final', 'string']"
Get.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'get', 'extends', 'task', 'nullprogress', 'implements', 'downloadprogress', 'verboseprogress', 'implements', 'downloadprogress', 'verboseprogress', 'verboseprogress', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'nullprogress', 'date', 'base64convert', 'buildexcept', 'buildexcept', 'fileoutputstream', 'date', 'static', 'final', 'fileutil', 'url', 'file', 'boolean', 'verbose', 'boolean', 'usetimestamp', 'boolean', 'ignoreerrors', 'string', 'uname', 'string', 'pword', 'int', 'dots']"
GlobPatternMapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'globpatternmapper', 'implements', 'filenamemapp', 'boolean', 'handledirsep', 'boolean', 'casesensitive']"
HasFreeSpace.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'hasfreespace', 'implements', 'condit', 'file', 'reflectwrapp', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept']"
HasMethod.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'hasmethod', 'extends', 'projectcomponent', 'implements', 'condit', 'path', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'antclassload', 'boolean', 'ignoresystemclasses']"
HashvalueAlgorithm.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selectors', 'modifiedselector', 'hashvaluealgorithm', 'implements', 'algorithm']"
Header.java,email,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'email', 'header']"
HotDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'j2e']"
Http.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'http', 'extends', 'projectcomponent', 'implements', 'condit', 'buildexcept', 'url', 'buildexcept', 'static', 'final', 'int', 'error_begins', 'string', 'spec', 'int', 'errorsbeginat']"
IPlanetDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'iplanetdeploymenttool', 'extends', 'genericdeploymenttool', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'iplanetejbc', 'file', 'file', 'buildexcept', 'file', 'buildexcept', 'file', 'file', 'file', 'boolean', 'keepgenerated', 'boolean', 'debug', 'string', 'string', 'string', 'static', 'final', 'str']"
IPlanetEjbc.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'package', 'name', 'iplanetejbc', 'ejbcexception', 'extends', 'except', 'ejbchandler', 'extends', 'handlerbas', 'ejbinfo', 'classnam', 'redirectoutput', 'extends', 'thread', 'iplanetejbc', 'hashtabl', 'ejbcexcept', 'ejbchandl', 'ejbinfo', 'inputsourc', 'ejbinfo', 'classnam', 'classnam', 'classnam', 'classnam', 'list', 'classnam', 'file', 'redirectoutput', 'ejbchandl', 'hashtabl', 'arraylist', 'stringtoken', 'arraylist', 'file', 'file', 'file', 'file', 'iplanetejbc', 'stringbuff', 'redirectoutput', 'redirectoutput', 'ejbcexcept', 'arraylist', 'hashmap', 'hashmap', 'hashmap', 'file', 'fileinputstream', 'inputsourc', 'ejbinfo', 'ejbinfo', 'arraylist', 'classnam', 'classnam', 'classnam', 'classnam', 'ejbcexcept', 'ejbcexcept', 'ejbcexcept', 'ejbcexcept', 'ejbcexcept', 'ejbcexcept', 'ejbcexcept', 'date', 'file', 'file', 'bufferedread', 'inputstreamread', 'static', 'final', 'int', 'min_num_args', 'static', 'final', 'int', 'max_num_args', 'static', 'final', 'int', 'num_classes_with_iiop', 'static', 'final', 'int', 'num_classes_without_iiop', 'static', 'final', 'str', 'file', 'file', 'file', 'string', 'string', 'boolean', 'retainsource', 'boolean', 'debugoutput', 'file', 'saxparser', 'ejbchandl', 'string', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'map', 'map', 'map', 'ejbinfo', 'boolean', 'iasdescriptor', 'string', 'string', 'string', 'string', 'classname', 'classname', 'classname', 'classname', 'string', 'boolean', 'cmp', 'boolean', 'iiop', 'boolean', 'hasession', 'list', 'inputstream']"
IPlanetEjbcTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'iplanetejbctask', 'extends', 'task', 'path', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'iplanetejbc', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'file', 'file', 'file', 'path', 'boolean', 'keepgenerated', 'boolean', 'debug', 'file']"
IdentityMapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'identitymapper', 'implements', 'filenamemapp']"
IdentityStack.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'identitystack', 'extends', 'stack', 'identitystack', 'identitystack', 'synchron', 'synchron', 'synchron', 'identitystack']"
Ilasm.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'targettypes', 'extends', 'enumeratedattribut', 'ilasm', 'vector', 'buildexcept', 'netcommand', 'file']"
Ildasm.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'ildasm', 'extends', 'task', 'encodingtypes', 'extends', 'enumeratedattribut', 'visibilityoptions', 'extends', 'enumeratedattribut', 'buildexcept', 'buildexcept', 'buildexcept', 'netcommand', 'static', 'final', 'fileutil', 'file', 'file', 'boolean', 'progressbar', 'boolean', 'bytes', 'boolean', 'linenumbers', 'boolean', 'rawexceptionhandling', 'boolean', 'showsource', 'boolean', 'quoteallnames', 'boolean', 'header', 'boolean', 'assembler', 'boolean', 'metadata', 'file']"
ImmutableResourceException.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'immutableresourceexception', 'extends', 'ioexcept', 'immutableresourceexcept', 'immutableresourceexcept']"
ImplementationSpecificArgument.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'facad', 'implementationspecificargument', 'extends', 'commandline', 'argu', 'implementationspecificargu']"
ImportTask.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'importtask', 'extends', 'task', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'file', 'buildexcept', 'static', 'final', 'fileutil']"
ImportTypelib.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'importtypelib', 'extends', 'task', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'netcommand', 'static', 'final', 'fileutil', 'file', 'file', 'boolean', 'usesysarray', 'boolean', 'unsafe', 'string', 'extraoptions']"
InnerClassFilenameFilter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'innerclassfilenamefilter', 'implements', 'filenamefilt']"
Input.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'input', 'extends', 'task', 'handler', 'extends', 'defbas', 'handlertype', 'extends', 'enumeratedattribut', 'handlertyp', 'input', 'handler', 'buildexcept', 'buildexcept', 'defaultinputhandl', 'propertyfileinputhandl', 'greedyinputhandl', 'multiplechoiceinputrequest', 'inputrequest', 'buildexcept', 'handler', 'string', 'refid', 'handlertype', 'type', 'string', 'classname', 'string', 'validargs', 'string', 'addproperty', 'string', 'defaultvalue', 'handler', 'handler']"
InstanceOf.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'instanceof', 'implements', 'resourceselector', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'str', 'project']"
IntegerCPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'integercpinfo', 'extends', 'constantcpinfo', 'integercpinfo', 'integ']"
InterfaceMethodRefCPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'interfacemethodrefcpinfo', 'extends', 'constantpoolentri', 'interfacemethodrefcpinfo']"
Intersect.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'intersect', 'extends', 'baseresourcecollectioncontain', 'buildexcept', 'arraylist', 'arraylist']"
IntrospectionHelper.java,ant,"['package', 'org', 'apache', 'tools', 'introspectionhelp', 'else', 'if', 'enumeratedattribute', 'class', 'isassignablefrom', 'reflectedarg', 'creator', 'nestedcr', 'createnestedcreator', 'extends', 'nestedcr', 'addnestedcreator', 'extends', 'nestedcr', 'attributesett', 'object', 'creator', 'method', 'method', 'method', 'enumer', 'map', 'enumer', 'map', 'list', 'object', 'object', 'hashmap', 'hashtabl', 'hashmap', 'hashtabl', 'hashtabl', 'hashtabl', 'hashtabl', 'arraylist', 'createnestedcr', 'addnestedcr', 'addnestedcr', 'introspectionhelp', 'unsupportedattributeexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'unsupportedelementexcept', 'nestedcr', 'nestedcr', 'buildexcept', 'buildexcept', 'buildexcept', 'creator', 'buildexcept', 'buildexcept', 'buildexcept', 'unsupportedelementexcept', 'unsupportedattributeexcept', 'buildexcept', 'unsupportedelementexcept', 'unsupportedattributeexcept', 'attributesett', 'attributesett', 'buildexcept', 'charact', 'attributesett', 'attributesett', 'buildexcept', 'attributesett', 'attributesett', 'buildexcept', 'attributesett', 'buildexcept', 'buildexcept', 'buildexcept', 'whatev', 'attributesett', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'nestedcr', 'buildexcept', 'stringbuff', 'static', 'final', 'map', 'static', 'final', 'map', 'static', 'final', 'int', 'max_report_nested_text', 'static', 'final', 'str', 'hashtabl', 'hashtabl', 'hashtabl', 'hashtabl', 'list', 'method', 'addtext', 'nestedcr', 'object', 'project', 'object', 'method', 'constructor', 'method']"
IsFailure.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'isfailure', 'implements', 'condit']"
IsFalse.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'isfalse', 'extends', 'projectcomponent', 'implements', 'condit', 'buildexcept', 'boolean', 'value']"
IsFileSelected.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'isfileselected', 'extends', 'abstractselectorcontainer', 'implements', 'condit', 'buildexcept', 'buildexcept', 'static', 'final', 'fileutil', 'file', 'file']"
IsReachable.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'isreachable', 'extends', 'projectcomponent', 'implements', 'condit', 'buildexcept', 'buildexcept', 'buildexcept', 'url', 'buildexcept', 'buildexcept', 'integ', 'buildexcept', 'static', 'final', 'int', 'second', 'int', 'timeout', 'static', 'final', 'str', 'static', 'class']"
IsReference.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'isreference', 'extends', 'projectcomponent', 'implements', 'condit', 'buildexcept', 'refer']"
IsSet.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'isset', 'extends', 'projectcomponent', 'implements', 'condit', 'buildexcept']"
IsSigned.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'issigned', 'extends', 'datatype', 'implements', 'condit', 'zipfil', 'buildexcept', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'int', 'short_sig_limit', 'file']"
IsTrue.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'istrue', 'extends', 'projectcomponent', 'implements', 'condit', 'buildexcept', 'boolean', 'value']"
JAXPUtils.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'jaxputil', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'fileutil', 'static', 'saxparserfactory', 'parserfactory', 'static', 'saxparserfactory', 'nsparserfactory', 'static', 'documentbuilderfactory', 'builderfactory']"
JDBCTask.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'package', 'exampl', 'sqlexampletask', 'extends', 'jdbctask', 'jdbctask', 'extends', 'task', 'path', 'path', 'buildexcept', 'hashtabl', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'properti', 'sqlexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'hasht', 'boolean', 'caching', 'path', 'antclassload', 'boolean', 'autocommit', 'string', 'driver', 'string', 'url', 'string', 'userid', 'string', 'password', 'string', 'rdbms', 'string', 'version']"
JDependTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jdepend', 'jdependtask', 'extends', 'task', 'formatattribute', 'extends', 'enumeratedattribut', 'file', 'path', 'path', 'path', 'path', 'file', 'path', 'path', 'commandlin', 'patternset', 'patternset', 'commandlinejava', 'patternset', 'path', 'path', 'path', 'commandlinejava', 'buildexcept', 'buildexcept', 'filewrit', 'buildexcept', 'printwrit', 'file', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'vector', 'path', 'path', 'file', 'buildexcept', 'file', 'buildexcept', 'execut', 'logstreamhandl', 'buildexcept', 'executewatchdog', 'commandlinejava', 'path', 'path', 'file', 'file', 'path', 'boolean', 'haltonerror', 'boolean', 'fork', 'long', 'timeout', 'string', 'jvm', 'patternset', 'static', 'constructor', 'static', 'method', 'boolean', 'includeruntime', 'path', 'runtimeclasses', 'string', 'static', 'final', 'int', 'success', 'static', 'final', 'int', 'errors']"
JJDoc.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'javacc', 'jjdoc', 'extends', 'task', 'jjdoc', 'hashtabl', 'commandlinejava', 'buildexcept', 'file', 'execut', 'logstreamhandl', 'buildexcept', 'buildexcept', 'final', 'hasht', 'string', 'outputfile', 'boolean', 'plaintext', 'static', 'final', 'str', 'static', 'final', 'str', 'file', 'targetfile', 'file', 'javacchome', 'commandlinejava']"
JJTree.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'javacc', 'jjtree', 'extends', 'task', 'jjtree', 'hashtabl', 'commandlinejava', 'buildexcept', 'file', 'buildexcept', 'file', 'execut', 'logstreamhandl', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'stringbuff', 'static', 'final', 'str', 'static', 'final', 'str', 'final', 'hasht', 'string', 'outputfile', 'static', 'final', 'str', 'file', 'outputdirectory', 'file', 'targetfile', 'file', 'javacchome', 'commandlinejava']"
JSharp.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'jsharp', 'extends', 'dotnetcompil', 'jsharp', 'buildexcept']"
JUnitResultFormatter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit']"
JUnitTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'junittask', 'extends', 'task', 'summaryattribute', 'extends', 'enumeratedattribut', 'splitloader', 'extends', 'antclassload', 'forkedtestconfigur', 'forkmode', 'extends', 'enumeratedattribut', 'testresulthold', 'junitlogoutputstream', 'extends', 'logoutputstream', 'junitlogstreamhandler', 'extends', 'pumpstreamhandl', 'commandlin', 'path', 'path', 'batchtest', 'permiss', 'junittask', 'splitload', 'forkmod', 'forkmod', 'junitlogoutputstream', 'junitlogstreamhandl', 'vector', 'vector', 'vector', 'environ', 'forkmod', 'batchtest', 'buildexcept', 'permiss', 'buildexcept', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'splitload', 'arraylist', 'printwrit', 'bufferedwrit', 'filewrit', 'buildexcept', 'buildexcept', 'path', 'stringbuff', 'stringbuff', 'properti', 'fileoutputstream', 'buildexcept', 'execut', 'junitlogstreamhandl', 'testresulthold', 'buildexcept', 'bufferedread', 'fileread', 'buildexcept', 'testresulthold', 'executewatchdog', 'logoutputstream', 'file', 'fileoutputstream', 'commandlinejava', 'hashmap', 'forkedtestconfigur', 'arraylist', 'testresulthold', 'buildexcept', 'junitlogoutputstream', 'logoutputstream', 'static', 'final', 'str', 'commandlinejava', 'vector', 'vector', 'vector', 'file', 'dir', 'integer', 'timeout', 'boolean', 'summary', 'boolean', 'reloading', 'junittaskmirror', 'junittestrunnermirror', 'runner', 'boolean', 'newenvironment', 'environ', 'boolean', 'includeantruntime', 'path', 'antruntimeclasses', 'boolean', 'showoutput', 'boolean', 'outputtoformatters', 'file', 'antclassloader', 'classloader', 'permissions', 'perm', 'forkmod', 'boolean', 'splitjunit', 'junittaskmirror', 'boolean', 'haltonerror', 'boolean', 'haltonfail', 'boolean', 'filtertrace', 'boolean', 'fork', 'string', 'string', 'static', 'final', 'int', 'string_buffer_size', 'static', 'final', 'fileutil', 'final', 'string', 'task']"
JUnitTaskMirror.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit']"
JUnitTaskMirrorImpl.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'junittaskmirrorimpl', 'implements', 'junittaskmirror', 'vmexiterrortest', 'extends', 'testcas', 'junittaskmirrorimpl', 'junittaskmirror', 'junittaskmirror', 'vmexiterrortest', 'assertionfailederror', 'junittestrunn', 'summaryjunitresultformatt', 'assertionfailederror', 'final', 'junittask', 'junittest']"
JUnitTest.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'junittest', 'extends', 'basetest', 'implements', 'clon', 'junittest', 'junittest', 'junittest', 'properti', 'formatterel', 'object', 'properti', 'string', 'name', 'string', 'outfile', 'long', 'runs', 'failures', 'properties', 'props']"
JUnitTestRunner.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'junittestrunner', 'implements', 'testlistener', 'junittaskmirror', 'junittestrunnermirror', 'junittestrunn', 'junittestrunn', 'junittestrunn', 'junittestrunn', 'junittestrunn', 'junittestrunn', 'vector', 'testresult', 'bytearrayoutputstream', 'printstream', 'bytearrayoutputstream', 'printstream', 'printstream', 'outputstream', 'printstream', 'outputstream', 'printstream', 'teeoutputstream', 'printstream', 'teeoutputstream', 'testsuit', 'properti', 'fileinputstream', 'stringtoken', 'junittest', 'file', 'junittest', 'vector', 'junitresultformatt', 'file', 'formatterel', 'file', 'stringwrit', 'printwrit', 'stringread', 'bufferedread', 'junittestrunn', 'filewrit', 'filewrit', 'testlisten', 'assertionfailederror', 'assertionfailederror', 'vector', 'testresult', 'static', 'boolean', 'filtertrace', 'boolean', 'showoutput', 'boolean', 'outputtoformatters', 'permissions', 'perm', 'static', 'final', 'string', 'boolean', 'haltonerror', 'boolean', 'haltonfailure', 'int', 'retcode', 'junittest', 'printstream', 'printstream', 'boolean', 'forked', 'static', 'boolean', 'multipletests', 'classload', 'boolean', 'logtestlistenerevents', 'static', 'string', 'crashfile', 'printstream', 'savedout', 'static', 'vector']"
JUnitVersionHelper.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'junitversionhelp', 'static', 'method', 'testcasename']"
JakartaOroMatcher.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexp', 'jakartaoromatcher', 'implements', 'regexpmatch', 'jakartaoromatch', 'vector', 'vector', 'perl5compil', 'perl5match', 'buildexcept', 'vector']"
JakartaOroRegexp.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexp', 'jakartaororegexp', 'extends', 'jakartaoromatcher', 'implements', 'regexp', 'jakartaororegexp', 'stringbuff', 'perl5substitut']"
JakartaRegexpMatcher.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexp', 'jakartaregexpmatcher', 'implements', 'regexpmatch', 'vector', 'vector', 'buildexcept', 'vector']"
JakartaRegexpRegexp.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexp', 'jakartaregexpregexp', 'stringbuff']"
Jar.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'jar', 'extends', 'zip', 'filesetmanifestconfig', 'extends', 'enumeratedattribut', 'jar', 'arraylist', 'vector', 'buildexcept', 'fileinputstream', 'inputstreamread', 'inputstreamread', 'buildexcept', 'buildexcept', 'zipfil', 'inputstreamread', 'manifest', 'buildexcept', 'buildexcept', 'path', 'buildexcept', 'bytearrayoutputstream', 'outputstreamwrit', 'printwrit', 'bytearrayinputstream', 'bytearrayoutputstream', 'printwrit', 'outputstreamwrit', 'arraylist', 'stringtoken', 'arraylist', 'arraylist', 'bytearrayinputstream', 'inputstreamread', 'inputstreamread', 'buildexcept', 'inputstreamread', 'inputstreamread', 'buildexcept', 'buildexcept', 'buildexcept', 'zipoutputstream', 'fileoutputstream', 'buildexcept', 'file', 'treemap', 'compar', 'hashset', 'static', 'final', 'str', 'static', 'final', 'str', 'list', 'manifest', 'manifest', 'manifest', 'manifest', 'filesetmanifestconfig', 'boolean', 'mergemanifestsmain', 'manifest', 'file', 'boolean', 'index', 'boolean', 'createempty', 'vector', 'path', 'static', 'final', 'zipextrafield']"
JarFileIterator.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'jarfileiterator', 'implements', 'classfileiter', 'jarfileiter', 'classfil', 'zipinputstream', 'classfil', 'runtimeexcept', 'zipinputstream']"
JarLibAvailableTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'jarlibavailabletask', 'extends', 'task', 'vector', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'final', 'vector', 'extensionadapt']"
JarLibDisplayTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'jarlibdisplaytask', 'extends', 'task', 'vector', 'librarydisplay', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'final', 'vector']"
JarLibManifestTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'jarlibmanifesttask', 'extends', 'task', 'arraylist', 'arraylist', 'arraylist', 'buildexcept', 'manifest', 'buildexcept', 'buildexcept', 'buildexcept', 'fileoutputstream', 'stringbuff', 'arraylist', 'static', 'final', 'str', 'static', 'final', 'str', 'file', 'extens', 'final', 'arraylist', 'final', 'arraylist', 'final', 'arraylist']"
JarLibResolveTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'jarlibresolvetask', 'extends', 'task', 'arraylist', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'extens', 'final', 'arraylist', 'boolean', 'checkextension', 'boolean', 'failonerror']"
JarMarker.java,zip,"['package', 'org', 'apache', 'tools', 'zip', 'jarmarker', 'implements', 'zipextrafield', 'jarmark', 'zipshort', 'zipshort', 'zipshort', 'zipshort', 'zipshort', 'jarmark', 'zipexcept', 'static', 'final', 'zipshort', 'static', 'final', 'zipshort', 'static', 'final', 'byte', 'static', 'final', 'jarmark']"
Jasper41Mangler.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jsp', 'jasper41mangler', 'implements', 'jspmangl', 'stringbuff']"
JasperC.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jsp', 'compil', 'jasperc', 'extends', 'defaultjspcompileradapt', 'jasperc', 'jspmangler', 'buildexcept', 'commandlinejava', 'path']"
Java.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'java', 'extends', 'task', 'path', 'path', 'permiss', 'commandlin', 'commandlin', 'commandlinejava', 'commandlinejava', 'commandlinejava', 'environ', 'redirector', 'exitstatusexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'permiss', 'buildexcept', 'permiss', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'keepaliveinputstream', 'executejava', 'buildexcept', 'buildexcept', 'execut', 'buildexcept', 'buildexcept', 'execut', 'buildexcept', 'buildexcept', 'commandlinejava', 'executewatchdog', 'stringwrit', 'printwrit', 'commandlinejava', 'environ', 'boolean', 'fork', 'boolean', 'newenvironment', 'file', 'dir', 'boolean', 'failonerror', 'long', 'timeout', 'file', 'file', 'file', 'permissions', 'perm', 'boolean', 'spawn', 'boolean', 'incompatiblewithspawn']"
JavaCC.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'javacc', 'javacc', 'extends', 'task', 'javacc', 'hashtabl', 'commandlinejava', 'integ', 'integ', 'integ', 'buildexcept', 'file', 'buildexcept', 'file', 'path', 'antclassload', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'file', 'static', 'final', 'str', 'static', 'final', 'str', 'final', 'hasht', 'file', 'outputdirectory', 'file', 'targetfile', 'file', 'javacchome', 'commandlinejava']"
JavaEnvUtils.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'javaenvutil', 'file', 'vector', 'vector', 'printwrit', 'bufferedwrit', 'filewrit', 'static', 'final', 'boolean', 'static', 'final', 'boolean', 'static', 'final', 'boolean', 'static', 'final', 'str', 'static', 'final', 'fileutil', 'static', 'str', 'static', 'int', 'static', 'boolean', 'static', 'vector']"
JavaResource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'javaresource', 'extends', 'resourc', 'javaresourc', 'javaresourc', 'path', 'path', 'inputstream', 'path', 'path', 'refer']"
Javac.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'javac', 'extends', 'matchingtask', 'javac', 'path', 'path', 'file', 'path', 'path', 'path', 'path', 'path', 'path', 'path', 'path', 'implementationspecificargu', 'file', 'file', 'facadetaskhelp', 'path', 'path', 'path', 'path', 'path', 'implementationspecificargu', 'buildexcept', 'globpatternmapp', 'sourcefilescann', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'path', 'file', 'path', 'path', 'boolean', 'debug', 'boolean', 'optimize', 'boolean', 'deprecation', 'boolean', 'depend', 'boolean', 'verbose', 'path', 'path', 'boolean', 'includeantruntime', 'boolean', 'includejavaruntime', 'boolean', 'fork', 'string', 'forkedexecutable', 'boolean', 'nowarn', 'facadetaskhelper', 'facade', 'file']"
Javac12.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'javac12', 'extends', 'defaultcompileradapt', 'logoutputstream', 'buildexcept', 'buildexcept']"
Javac13.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'javac13', 'extends', 'defaultcompileradapt', 'buildexcept', 'static', 'final', 'int', 'modern_compiler_success']"
JavacExternal.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'javacexternal', 'extends', 'defaultcompileradapt', 'commandlin', 'buildexcept']"
Javadoc.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'package', 'name', 'ends', 'with', 'quot', 'quot', 'package', 'names', 'javadoc', 'extends', 'task', 'docletparam', 'extensioninfo', 'extends', 'projectcompon', 'docletinfo', 'extends', 'extensioninfo', 'packagenam', 'sourcefil', 'html', 'accesstype', 'extends', 'enumeratedattribut', 'resourcecollectioncontain', 'linkargu', 'tagargument', 'extends', 'fileset', 'groupargu', 'javadocoutputstream', 'extends', 'logoutputstream', 'path', 'path', 'docletparam', 'enumer', 'sourcefil', 'sourcefil', 'file', 'commandlin', 'path', 'docletinfo', 'path', 'path', 'linkargu', 'linkargu', 'file', 'tagargu', 'tagargu', 'groupargu', 'groupargu', 'resourcecollectioncontain', 'path', 'vector', 'docletparam', 'stringbuff', 'arraylist', 'commandlin', 'vector', 'vector', 'vector', 'vector', 'vector', 'vector', 'resourcecollectioncontain', 'vector', 'path', 'stringtoken', 'sourcefil', 'stringtoken', 'packagenam', 'stringtoken', 'packagenam', 'docletinfo', 'docletinfo', 'docletinfo', 'docletinfo', 'path', 'path', 'html', 'html', 'html', 'html', 'buildexcept', 'stringtoken', 'buildexcept', 'linkargu', 'tagargu', 'groupargu', 'vector', 'html', 'stringtoken', 'packagenam', 'stringbuff', 'vector', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'url', 'url', 'buildexcept', 'file', 'stringtoken', 'buildexcept', 'file', 'bufferedread', 'fileread', 'buildexcept', 'printwrit', 'filewrit', 'buildexcept', 'javadocoutputstream', 'javadocoutputstream', 'execut', 'pumpstreamhandl', 'buildexcept', 'buildexcept', 'printwrit', 'filewrit', 'buildexcept', 'stringbuff', 'stringbuff', 'buildexcept', 'sourcefil', 'vector', 'patternset', 'file', 'dirset', 'file', 'path', 'vector', 'file', 'stringbuff', 'arraylist', 'static', 'final', 'fileutil', 'commandlin', 'boolean', 'failonerror', 'path', 'sourcepath', 'file', 'destdir', 'vector', 'vector', 'vector', 'boolean', 'author', 'boolean', 'version', 'docletinfo', 'doclet', 'path', 'classpath', 'path', 'bootclasspath', 'string', 'group', 'string', 'packagelist', 'vector', 'vector', 'vector', 'boolean', 'usedefaultexcludes', 'html', 'doctitle', 'html', 'header', 'html', 'footer', 'html', 'bottom', 'boolean', 'useexternalfile', 'string', 'source', 'boolean', 'linksource', 'boolean', 'breakiterator', 'boolean', 'includenosourcepackages', 'boolean', 'old', 'string', 'executable', 'vector', 'boolean', 'offline', 'file', 'boolean', 'resolvelink', 'string', 'name', 'boolean', 'enabled', 'html', 'vector', 'string', 'queuedline']"
Javah.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'javah', 'extends', 'task', 'classargu', 'javah', 'classargu', 'classargu', 'file', 'path', 'path', 'path', 'path', 'file', 'implementationspecificargu', 'vector', 'facadetaskhelp', 'classargu', 'arraylist', 'stringtoken', 'path', 'path', 'implementationspecificargu', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'buildexcept', 'stringbuff', 'stringbuff', 'vector', 'file', 'path', 'classpath', 'file', 'outputfile', 'boolean', 'verbose', 'boolean', 'force', 'boolean', 'old', 'boolean', 'stubs', 'path', 'path', 'static', 'str', 'facadetaskhelper', 'facade']"
JavahAdapter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'javah']"
JavahAdapterFactory.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'javah', 'javahadapterfactori', 'kaffeh', 'sunjavah', 'sunjavah']"
JavaxScriptRunner.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'opt', 'javaxscriptrunner', 'extends', 'scriptrunnerbas', 'object', 'buildexcept', 'buildexcept', 'reflectwrapp', 'reflectwrapp', 'reflectwrapp']"
JbossDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'jbossdeploymenttool', 'extends', 'genericdeploymenttool', 'file', 'file', 'buildexcept', 'file', 'file']"
Jdk14RegexpMatcher.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexp', 'jdk14regexpmatcher', 'implements', 'regexpmatch', 'jdk14regexpmatch', 'vector', 'vector', 'buildexcept', 'buildexcept', 'vector']"
Jdk14RegexpRegexp.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexp', 'jdk14regexpregexp', 'extends', 'jdk14regexpmatcher', 'implements', 'regexp', 'jdk14regexpregexp', 'stringbuff', 'stringbuff']"
Jikes.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'jikes', 'extends', 'defaultcompileradapt', 'commandlin', 'path', 'path']"
Jikes.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'jike', 'random', 'file', 'printwrit', 'filewrit', 'buildexcept', 'execut', 'buildexcept']"
JikesOutputParser.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'jikesoutputparser', 'implements', 'executestreamhandl', 'bufferedread', 'inputstreamread']"
JlinkTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jlink', 'jlinktask', 'extends', 'matchingtask', 'path', 'path', 'buildexcept', 'buildexcept', 'jlink', 'buildexcept', 'file', 'outfile', 'path', 'mergefiles', 'path', 'addfiles', 'boolean', 'compress']"
JonasDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'jonasdeploymenttool', 'extends', 'genericdeploymenttool', 'file', 'file', 'file', 'buildexcept', 'file', 'path', 'path', 'path', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'ioexcept', 'illegalargumentexcept', 'file', 'boolean', 'keepgenerated', 'boolean', 'nocompil', 'boolean', 'novalidation', 'boolean', 'secpropag', 'boolean', 'verbose', 'file', 'boolean', 'keepgeneric', 'boolean', 'nogenic']"
JonasHotDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'j2e', 'jonashotdeploymenttool', 'extends', 'generichotdeploymenttool', 'implements', 'hotdeploymenttool', 'path', 'path', 'file', 'file', 'path', 'buildexcept', 'buildexcept', 'static', 'final', 'str', 'file', 'string', 'orb']"
JspC.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jsp', 'jspc', 'extends', 'matchingtask', 'webappparamet', 'path', 'file', 'file', 'file', 'path', 'path', 'path', 'path', 'file', 'file', 'webappparamet', 'vector', 'file', 'vector', 'vector', 'path', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'date', 'file', 'file', 'path', 'path', 'path', 'file', 'int', 'verbose', 'file', 'file', 'file', 'file']"
JspCompilerAdapter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jsp', 'compil']"
JspCompilerAdapterFactory.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jsp', 'compil', 'jspcompileradapterfactori', 'jasperc', 'jspnamemangl', 'jasperc', 'jasper41mangl', 'buildexcept', 'buildexcept', 'buildexcept']"
JspMangler.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jsp']"
JspNameMangler.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jsp', 'jspnamemangler', 'implements', 'jspmangl', 'stringbuff']"
Jvc.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'jvc', 'extends', 'defaultcompileradapt', 'path', 'commandlin']"
KaffeNative2Ascii.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'native2ascii', 'kaffenative2ascii', 'extends', 'defaultnative2ascii', 'buildexcept', 'executejava', 'buildexcept', 'static', 'final', 'string']"
KaffeRmic.java,rmic,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'rm', 'kaffermic', 'extends', 'defaultrmicadapt', 'stringbuff', 'buildexcept', 'executejava', 'static', 'final', 'string']"
Kaffeh.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'javah', 'kaffeh', 'implements', 'javahadapt', 'commandlin', 'path']"
KeepAliveInputStream.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'keepaliveinputstream', 'extends', 'filterinputstream', 'keepaliveinputstream']"
KeepAliveOutputStream.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'keepaliveoutputstream', 'extends', 'filteroutputstream', 'keepaliveoutputstream']"
KeySubst.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'keysubst', 'extends', 'task', 'hashtabl', 'bufferedread', 'fileread', 'bufferedwrit', 'filewrit', 'stringtoken', 'stringtoken', 'hashtabl', 'stringbuff', 'file', 'source', 'file', 'dest', 'hashtabl']"
Kjc.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'kjc', 'extends', 'defaultcompileradapt', 'executejava', 'commandlin', 'path']"
LazyFileOutputStream.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'lazyfileoutputstream', 'extends', 'outputstream', 'lazyfileoutputstream', 'lazyfileoutputstream', 'lazyfileoutputstream', 'lazyfileoutputstream', 'lazyfileoutputstream', 'synchron', 'synchron', 'synchron', 'file', 'ioexcept', 'fileoutputstream', 'fileoutputstream', 'file', 'boolean', 'opened', 'boolean', 'closed']"
LazyHashtable.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'lazyhashtable', 'extends', 'hasht', 'lazyhasht', 'enumer', 'enumer']"
LeadPipeInputStream.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'leadpipeinputstream', 'extends', 'pipedinputstream', 'leadpipeinputstream', 'leadpipeinputstream', 'leadpipeinputstream', 'leadpipeinputstream', 'synchron', 'synchron', 'projectcompon']"
Length.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'length', 'extends', 'task', 'implements', 'condit', 'filemode', 'extends', 'enumeratedattribut', 'when', 'extends', 'comparison', 'handler', 'eachhandler', 'extends', 'handl', 'allhandler', 'extends', 'handl', 'conditionhandler', 'extends', 'allhandl', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'fileresourc', 'resourc', 'printstream', 'propertyoutputstream', 'logoutputstream', 'eachhandl', 'allhandl', 'buildexcept', 'conditionhandl', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'string', 'mode', 'comparison', 'resourc', 'printstream', 'long', 'accum']"
LibFileSet.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens']"
LibraryDisplayer.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'librarydisplay', 'buildexcept', 'stringbuff']"
LineOrientedOutputStream.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'lineorientedoutputstream', 'extends', 'outputstream', 'bytearrayoutputstream', 'static', 'final', 'int', 'intial_size', 'static', 'final', 'int', 'cr', 'static', 'final', 'int', 'lf', 'boolean', 'skip']"
LineTokenizer.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'stringbuff', 'string', 'int', 'boolean', 'includedelims']"
LoadFile.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'loadfile', 'extends', 'loadresourc', 'fileresourc']"
LoadProperties.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'loadproperties', 'extends', 'task', 'path', 'path', 'vector', 'fileresourc', 'buildexcept', 'buildexcept', 'bufferedinputstream', 'inputstreamread', 'inputstreamread', 'chainreaderhelp', 'bytearrayinputstream', 'bytearrayinputstream', 'properti', 'properti', 'buildexcept', 'buildexcept', 'buildexcept', 'javaresourc', 'buildexcept', 'resource', 'src', 'final', 'vector', 'string', 'encoding']"
LoadResource.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'loadresource', 'extends', 'task', 'vector', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'bufferedinputstream', 'inputstreamread', 'inputstreamread', 'chainreaderhelp', 'buildexcept', 'buildexcept', 'resourc', 'boolean', 'failonerror', 'boolean', 'quiet', 'string', 'encoding', 'string', 'property', 'final', 'vector']"
LoaderUtils.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'loaderutil', 'static', 'final', 'fileutil']"
Location.java,ant,"['package', 'org', 'apache', 'tools', 'location', 'implements', 'serializ', 'locat', 'locat', 'locat', 'locat', 'stringbuff', 'static', 'final', 'fileutil']"
LocationResolver.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extension', 'resolv', 'locationresolver', 'implements', 'extensionresolv', 'file', 'buildexcept']"
Log4jListener.java,listener,"['package', 'org', 'apache', 'tools', 'ant', 'listen', 'log4jlistener', 'implements', 'buildlisten', 'log4jlisten', 'boolean', 'initialized']"
LogLevel.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'loglevel', 'extends', 'enumeratedattribut', 'loglevel', 'loglevel', 'loglevel', 'loglevel', 'loglevel', 'loglevel', 'static', 'int']"
LogListener.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ssh']"
LogOutputStream.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'logoutputstream', 'extends', 'lineorientedoutputstream', 'logoutputstream', 'logoutputstream', 'runtimeexcept', 'projectcompon']"
LogStreamHandler.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'logstreamhandler', 'extends', 'pumpstreamhandl', 'logstreamhandl', 'logstreamhandl', 'logoutputstream', 'logoutputstream', 'buildexcept']"
LongCPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'longcpinfo', 'extends', 'constantcpinfo', 'longcpinfo']"
MSVSS.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'vss', 'msvss', 'extends', 'task', 'implements', 'msvssconst', 'currentmodupdated', 'extends', 'enumeratedattribut', 'writablefiles', 'extends', 'enumeratedattribut', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'execut', 'logstreamhandl', 'buildexcept', 'gregoriancalendar', 'stringbuff', 'string', 'ssdir', 'string', 'vsslogin', 'string', 'vsspath', 'string', 'serverpath', 'string', 'version', 'string', 'date', 'string', 'label', 'string', 'autoresponse', 'string', 'localpath', 'string', 'comment', 'string', 'fromlabel', 'string', 'tolabel', 'string', 'outputfilename', 'string', 'user', 'string', 'fromdate', 'string', 'todate', 'string', 'style', 'boolean', 'quiet', 'boolean', 'recursive', 'boolean', 'writable', 'boolean', 'failonerror', 'boolean', 'getlocalcopy', 'dateformat', 'currentmodupdated', 'timestamp', 'writablefiles', 'writablefiles']"
MSVSSADD.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'vss', 'msvssadd', 'extends', 'msvss', 'commandlin', 'buildexcept', 'string', 'localpath']"
MSVSSCHECKIN.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'vss', 'msvsscheckin', 'extends', 'msvss', 'commandlin', 'buildexcept']"
MSVSSCHECKOUT.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'vss', 'msvsscheckout', 'extends', 'msvss', 'commandlin', 'buildexcept']"
MSVSSCP.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'vss', 'msvsscp', 'extends', 'msvss', 'commandlin', 'buildexcept']"
MSVSSCREATE.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'vss', 'msvsscreate', 'extends', 'msvss', 'commandlin', 'buildexcept']"
MSVSSConstants.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'vss']"
MSVSSGET.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'vss', 'msvssget', 'extends', 'msvss', 'commandlin', 'buildexcept']"
MSVSSHISTORY.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'vss', 'msvsshistory', 'extends', 'msvss', 'briefcodediffnofile', 'extends', 'enumeratedattribut', 'commandlin', 'buildexcept', 'simpledateformat', 'buildexcept']"
MSVSSLABEL.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'vss', 'msvsslabel', 'extends', 'msvss', 'commandlin', 'buildexcept', 'buildexcept']"
MacroDef.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'macrodef', 'extends', 'antlibdefinit', 'nestedsequential', 'implements', 'taskcontain', 'attribut', 'text', 'templateel', 'myanttypedefinition', 'extends', 'anttypedefinit', 'text', 'nestedsequenti', 'list', 'unknownel', 'list', 'map', 'myanttypedefinit', 'object', 'arraylist', 'hashmap', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'nestedsequenti', 'arraylist', 'unknownel', 'runtimeconfigur', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'myanttypedefinit', 'buildexcept', 'buildexcept', 'buildexcept', 'nestedsequenti', 'string', 'boolean', 'backtrace', 'list', 'string', 'textname', 'text', 'text', 'boolean', 'hasimplicitelement', 'list', 'string', 'string', 'boolean', 'optional', 'boolean', 'implicit', 'macrodef']"
MacroInstance.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'macroinstance', 'extends', 'task', 'implements', 'dynamicattribute', 'taskcontain', 'element', 'implements', 'taskcontain', 'macrodef', 'object', 'list', 'hashmap', 'arraylist', 'buildexcept', 'hashmap', 'buildexcept', 'buildexcept', 'arraylist', 'stringbuff', 'stringbuff', 'unknownel', 'target', 'runtimeconfigur', 'buildexcept', 'buildexcept', 'hashmap', 'hashtabl', 'hashset', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'macrodef', 'map', 'map', 'nselements', 'map', 'hashtabl', 'string', 'text', 'string', 'implicittag', 'list', 'list', 'static', 'final', 'int', 'state_normal', 'static', 'final', 'int', 'state_expect_bracket', 'static', 'final', 'int', 'state_expect_name']"
MagicNames.java,ant,"['package', 'org', 'apache', 'tools', 'magicnam']"
MailLogger.java,listener,"['package', 'org', 'apache', 'tools', 'ant', 'listen', 'maillogger', 'extends', 'defaultlogg', 'stringbuff', 'properti', 'fileinputstream', 'except', 'mailmessag', 'stringtoken', 'stringtoken', 'messag', 'emailaddress', 'vector', 'vector', 'vector', 'vector', 'stringtoken', 'emailaddress', 'stringbuff']"
MailMessage.java,mail,"['package', 'org', 'apache', 'tools', 'mail', 'mailmessag', 'mailprintstream', 'extends', 'printstream', 'mailmessag', 'mailmessag', 'mailmessag', 'printstream', 'mailprintstream', 'mailmessag', 'vector', 'vector', 'vector', 'vector', 'vector', 'stringbuff', 'socket', 'mailprintstream', 'bufferedoutputstream', 'smtpresponseread', 'ioexcept', 'errorinquitexcept', 'ioexcept', 'int', 'port', 'vector', 'vector', 'vector', 'vector', 'vector', 'mailprintstream', 'smtpresponseread', 'socket', 'static', 'final', 'int', 'ok_ready', 'static', 'final', 'int', 'ok_helo', 'static', 'final', 'int', 'ok_from', 'static', 'final', 'int', 'ok_rcpt_1', 'static', 'final', 'int', 'ok_rcpt_2', 'static', 'final', 'int', 'ok_data', 'static', 'final', 'int', 'ok_dot', 'static', 'final', 'int', 'ok_quit']"
Mailer.java,email,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'email', 'mailer']"
Main.java,ant,"['package', 'org', 'apache', 'tools', 'main', 'implements', 'antmain', 'main', 'vector', 'properti', 'vector', 'vector', 'main', 'hashmap', 'file', 'printstream', 'fileoutputstream', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'properti', 'fileinputstream', 'file', 'file', 'file', 'buildexcept', 'file', 'project', 'noexitsecuritymanag', 'demuxinputstream', 'printstream', 'demuxoutputstream', 'printstream', 'demuxoutputstream', 'proxysetup', 'defaultinputhandl', 'runtimeexcept', 'defaultlogg', 'stringbuff', 'properti', 'stringbuff', 'buildexcept', 'buildexcept', 'vector', 'vector', 'vector', 'stringbuff', 'file', 'static', 'printstream', 'static', 'printstream', 'vector', 'properti', 'vector', 'vector', 'boolean', 'allowinput', 'boolean', 'keepgoingmode', 'string', 'loggerclassname', 'string', 'inputhandlerclassname', 'boolean', 'emacsmode', 'boolean', 'readytorun', 'boolean', 'projecthelp', 'static', 'boolean', 'islogfileused', 'integer', 'threadpriority', 'boolean', 'proxy', 'static', 'string', 'antversion']"
Majority.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'major', 'major', 'synchron', 'synchron', 'boolean', 'tie']"
MajoritySelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'majorityselector', 'extends', 'baseselectorcontain', 'majorityselector', 'stringbuff', 'boolean', 'allowtie']"
MakeUrl.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'makeurl', 'extends', 'task', 'linkedlist', 'linkedlist', 'stringbuff', 'file', 'stringbuff', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'list', 'list', 'boolean', 'validate']"
Manifest.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'manifest', 'attribut', 'section', 'attribut', 'attribut', 'attribut', 'enumer', 'attribut', 'enumer', 'object', 'enumer', 'manifest', 'manifest', 'enumer', 'section', 'section', 'enumer', 'vector', 'manifestexcept', 'ioexcept', 'ioexcept', 'vector', 'hashtabl', 'vector', 'manifestexcept', 'attribut', 'manifestexcept', 'attribut', 'attribut', 'buildexcept', 'buildexcept', 'manifestexcept', 'section', 'attribut', 'section', 'hashtabl', 'vector', 'buildexcept', 'inputstreamread', 'manifest', 'attribut', 'inputstreamread', 'manifest', 'buildexcept', 'buildexcept', 'bufferedread', 'section', 'attribut', 'manifestexcept', 'attribut', 'buildexcept', 'buildexcept', 'attribut', 'stringwrit', 'printwrit', 'vector', 'static', 'final', 'int', 'max_name_value_length', 'static', 'final', 'int', 'max_name_length', 'string', 'name', 'vector', 'int', 'currentindex', 'vector', 'string', 'name', 'hashtabl', 'vector', 'string', 'manifestversion', 'section', 'hashtabl', 'vector']"
ManifestClassPath.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'manifestclasspath', 'extends', 'task', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'stringbuff', 'stringbuff', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'int', 'maxparentlevels', 'path']"
ManifestException.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'manifestexception', 'extends', 'except', 'manifestexcept']"
ManifestTask.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'manifesttask', 'extends', 'task', 'mode', 'extends', 'enumeratedattribut', 'manifesttask', 'manifest', 'mode', 'buildexcept', 'fileinputstream', 'inputstreamread', 'inputstreamread', 'manifest', 'buildexcept', 'buildexcept', 'buildexcept', 'fileoutputstream', 'outputstreamwrit', 'printwrit', 'buildexcept', 'manifest', 'file', 'mode']"
Mapper.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'mapper', 'extends', 'datatype', 'implements', 'clon', 'mappertype', 'extends', 'enumeratedattribut', 'mapper', 'path', 'filenamemapp', 'mappertyp', 'compositemapp', 'buildexcept', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'properti', 'containermapper', 'container', 'properti']"
MappingSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'mappingselector', 'extends', 'baseselector', 'mappingselector', 'mapper', 'buildexcept', 'mapper', 'identitymapp', 'buildexcept', 'file', 'static', 'final', 'fileutil']"
Matches.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'matches', 'extends', 'projectcomponent', 'implements', 'condit', 'buildexcept', 'regularexpress', 'buildexcept', 'buildexcept', 'buildexcept', 'string', 'boolean', 'casesensitive', 'boolean', 'multiline', 'boolean', 'singleline', 'regularexpress']"
MatchingTask.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'matchingtask', 'extends', 'task', 'implements', 'selectorcontain', 'patternset', 'patternset', 'patternset', 'patternset', 'patternset', 'fileselector', 'enumer', 'fileset', 'stringtoken', 'stringtoken']"
MergingMapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'mergingmapper', 'implements', 'filenamemapp']"
Message.java,email,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'email', 'message', 'extends', 'projectcompon', 'messag', 'messag', 'messag', 'stringbuff', 'printwrit', 'outputstreamwrit', 'printwrit', 'fileread', 'bufferedread', 'file', 'messagesource', 'stringbuff', 'boolean', 'specified', 'string', 'charset']"
MethodRefCPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'methodrefcpinfo', 'extends', 'constantpoolentri', 'methodrefcpinfo']"
MimeMail.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'net', 'mimemail', 'extends', 'emailtask']"
Mkdir.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'mkdir', 'extends', 'task', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'int', 'mkdir_retry_sleep_millis', 'file']"
ModifiedSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selectors', 'modifiedselector', 'cachename', 'extends', 'enumeratedattribut', 'algorithmname', 'extends', 'enumeratedattribut', 'comparatorname', 'extends', 'enumeratedattribut', 'modifiedselector', 'classload', 'cach', 'algorithm', 'compar', 'vector', 'vector', 'file', 'file', 'propertiesfilecach', 'digestalgorithm', 'equalcompar', 'vector', 'hashvaluealgorithm', 'digestalgorithm', 'checksumalgorithm', 'propertiesfilecach', 'equalcompar', 'buildexcept', 'vector', 'buildexcept', 'buildexcept', 'buildexcept', 'fileresourc', 'buildexcept', 'file', 'buildexcept', 'paramet', 'cachenam', 'algorithmnam', 'comparatornam', 'project', 'stringbuff', 'cachename', 'cachename', 'algorithmname', 'algoname', 'comparatorname', 'compname', 'boolean', 'update', 'boolean', 'selectdirectories', 'boolean', 'selectresourceswithoutinputstream', 'boolean', 'delayupdate', 'comparator', 'comparator', 'algorithm', 'algorithm', 'cache', 'cache', 'int', 'modified', 'boolean', 'isconfigured', 'vector', 'vector', 'classloader', 'myclassloader', 'path', 'classpath']"
Move.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'move', 'extends', 'copi', 'move', 'buildexcept', 'file', 'buildexcept', 'fileset', 'file', 'file', 'file', 'file', 'buildexcept', 'buildexcept', 'filtersetcollect', 'buildexcept', 'file', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept']"
Name.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'name', 'implements', 'resourceselector', 'boolean', 'cs']"
Name.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'compar', 'name', 'extends', 'resourcecompar']"
NameAndTypeCPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'nameandtypecpinfo', 'extends', 'constantpoolentri', 'nameandtypecpinfo']"
Native2Ascii.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'native2ascii', 'extends', 'matchingtask', 'extmapper', 'implements', 'filenamemapp', 'native2ascii', 'mapper', 'implementationspecificargu', 'facadetaskhelp', 'buildexcept', 'mapper', 'implementationspecificargu', 'buildexcept', 'buildexcept', 'identitymapp', 'extmapp', 'sourcefilescann', 'file', 'file', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'boolean', 'reverse', 'string', 'encoding', 'file', 'srcdir', 'file', 'destdir', 'string', 'extension', 'mapper', 'facadetaskhelper', 'facade']"
Native2AsciiAdapter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'native2ascii']"
Native2AsciiAdapterFactory.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'native2ascii', 'native2asciiadapterfactori', 'kaffenative2ascii', 'sunnative2ascii', 'sunnative2ascii']"
NetCommand.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'netcommand', 'netcommand', 'commandlin', 'runtimeexcept', 'runtimeexcept', 'logstreamhandl', 'execut', 'buildexcept', 'buildexcept', 'fileoutputstream', 'printwrit', 'bufferedoutputstream', 'buildexcept', 'file', 'static', 'final', 'fileutil', 'file', 'boolean', 'useresponsefile', 'file', 'int', 'automaticresponsefilethreshold']"
Nice.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'nice', 'extends', 'task', 'buildexcept', 'buildexcept', 'integ', 'integ']"
NoBannerLogger.java,ant,"['package', 'org', 'apache', 'tools', 'nobannerlogger', 'extends', 'defaultlogg', 'nobannerlogg']"
NoExitSecurityManager.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'opt', 'noexitsecuritymanager', 'extends', 'securitymanag', 'exitexcept']"
None.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'none', 'none']"
NoneSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'noneselector', 'extends', 'baseselectorcontain', 'noneselector', 'stringbuff']"
Not.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'not', 'implements', 'resourceselector', 'illegalstateexcept', 'resourceselector']"
Not.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'not', 'extends', 'conditionbase', 'implements', 'condit', 'buildexcept', 'buildexcept']"
NotSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'notselector', 'extends', 'noneselector', 'notselector', 'notselector', 'stringbuff']"
Or.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'or', 'extends', 'resourceselectorcontainer', 'implements', 'resourceselector']"
Or.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'or', 'extends', 'conditionbase', 'implements', 'condit']"
OrSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'orselector', 'extends', 'baseselectorcontain', 'orselector', 'stringbuff']"
Os.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'os', 'implements', 'condit', 'os', 'os', 'buildexcept', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str']"
OutErrSummaryJUnitResultFormatter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'outerrsummaryjunitresultformatt']"
OutputStreamFunneler.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'outputstreamfunnel', 'funnel', 'extends', 'outputstream', 'outputstreamfunnel', 'outputstreamfunnel', 'synchron', 'synchron', 'illegalargumentexcept', 'funnel', 'ioexcept', 'boolean', 'closed', 'outputstream', 'int', 'count']"
P4Add.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4add', 'extends', 'p4bas', 'vector', 'buildexcept', 'buildexcept', 'stringbuff', 'file', 'stringbuff', 'simplep4outputhandl', 'static', 'final', 'int', 'default_cmd_length', 'vector', 'int', 'cmdlength']"
P4Base.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4base', 'extends', 'org', 'apache', 'tools', 'ant', 'task', 'perl5util', 'commandlin', 'simplep4outputhandl', 'execut', 'buildexcept', 'buildexcept', 'buildexcept', 'boolean', 'inerror']"
P4Change.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4change', 'extends', 'p4bas', 'p4handleradapt', 'buildexcept', 'stringbuff', 'p4handleradapt', 'buildexcept', 'stringbuff']"
P4Counter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4counter', 'extends', 'p4bas', 'buildexcept', 'buildexcept', 'p4handleradapt', 'buildexcept', 'simplep4outputhandl']"
P4Delete.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4delete', 'extends', 'p4bas', 'buildexcept', 'simplep4outputhandl']"
P4Edit.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4edit', 'extends', 'p4bas', 'buildexcept', 'simplep4outputhandl']"
P4Fstat.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4fstat', 'extends', 'p4bas', 'vector', 'buildexcept', 'buildexcept', 'fstatp4outputhandl', 'stringbuff', 'file', 'stringbuff', 'vector', 'static', 'final', 'int', 'default_cmd_length', 'int', 'cmdlength', 'static', 'final', 'int', 'show_all', 'static', 'final', 'int', 'show_existing', 'static', 'final', 'int', 'show_non_existing', 'int', 'show', 'fstatp4outputhandl', 'stringbuff', 'int', 'filenum', 'int', 'donefilenum', 'boolean', 'debug']"
P4Handler.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc']"
P4HandlerAdapter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4handleradapter', 'implements', 'p4handl', 'pumpstreamhandl', 'p4outputstream', 'p4outputstream', 'bytearrayinputstream', 'pumpstreamhandl', 'p4outputstream', 'p4outputstream', 'pumpstreamhandler', 'myhandler']"
P4Have.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4have', 'extends', 'p4bas', 'simplep4outputhandl']"
P4Integrate.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4integrate', 'extends', 'p4bas', 'buildexcept', 'simplep4outputhandl', 'string', 'change', 'string', 'fromfile', 'string', 'tofile', 'string', 'branch', 'boolean', 'restoredeletedrevisions', 'boolean', 'forceintegrate', 'boolean', 'leavetargetrevision', 'boolean', 'enablebaselessmerges', 'boolean', 'simulationmode', 'boolean', 'reversebranchmappings', 'boolean', 'propagatesourcefiletype', 'boolean', 'nocopynewtargetfiles']"
P4Label.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4label', 'extends', 'p4bas', 'simpledateformat', 'date', 'p4handleradapt', 'p4handleradapt', 'stringbuff', 'p4handleradapt', 'p4handleradapt']"
P4Labelsync.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4labelsync', 'extends', 'p4bas', 'buildexcept', 'simplep4outputhandl']"
P4OutputHandler.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc']"
P4OutputStream.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4outputstream', 'extends', 'outputstream', 'p4outputstream', 'bytearrayoutputstream', 'p4handler', 'bytearrayoutputstream', 'boolean', 'skip']"
P4Reopen.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4reopen', 'extends', 'p4bas', 'buildexcept', 'buildexcept', 'simplep4outputhandl']"
P4Resolve.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4resolve', 'extends', 'p4bas', 'buildexcept', 'buildexcept', 'buildexcept', 'simplep4outputhandl', 'string', 'resolvemode', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'string']"
P4Revert.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4revert', 'extends', 'p4bas', 'buildexcept', 'simplep4outputhandl', 'string', 'revertchange', 'boolean', 'onlyunchanged']"
P4Submit.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4submit', 'extends', 'p4bas', 'p4submitadapter', 'extends', 'simplep4outputhandl', 'p4submitadapt', 'p4submitadapt', 'buildexcept', 'vector', 'buildexcept']"
P4Sync.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'p4sync', 'extends', 'p4bas', 'buildexcept', 'buildexcept', 'simplep4outputhandl']"
Pack.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'pack', 'extends', 'task', 'resourc', 'fileresourc', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'fileresourc', 'resourc']"
PackageNameMapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'packagenamemapper', 'extends', 'globpatternmapp']"
Parallel.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'tasklist', 'implements', 'taskcontain', 'taskrunnable', 'implements', 'runn', 'synchron', 'throwabl', 'arraylist', 'vector', 'object', 'buildexcept', 'taskrunn', 'threadgroup', 'taskrunn', 'thread', 'thread', 'thread', 'thread', 'buildexcept', 'stringbuff', 'buildexcept', 'buildexcept', 'list', 'vector', 'final', 'object', 'int', 'numthreads', 'int', 'numthreadsperprocessor', 'volatile', 'boolean', 'tasklist', 'stringbuff', 'int', 'numexceptions', 'throwabl', 'locat', 'throwabl', 'task']"
Parameter.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'paramet', 'string', 'name', 'string', 'type', 'string', 'value']"
Parameterizable.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ']"
ParserSupports.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'parsersupports', 'extends', 'projectcomponent', 'implements', 'condit', 'buildexcept', 'buildexcept', 'buildexcept']"
Patch.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'patch', 'extends', 'task', 'commandlin', 'buildexcept', 'buildexcept', 'buildexcept', 'execut', 'logstreamhandl', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'file', 'boolean', 'havepatchfile', 'commandlin']"
Path.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'path', 'extends', 'datatype', 'implements', 'cloneable', 'resourcecollect', 'pathelement', 'implements', 'resourcecollect', 'iter', 'path', 'path', 'pathel', 'path', 'synchron', 'object', 'path', 'path', 'path', 'synchron', 'path', 'path', 'fileresourceiter', 'pathel', 'union', 'path', 'file', 'file', 'vector', 'pathtoken', 'stringbuff', 'stringbuff', 'stringbuff', 'buildexcept', 'path', 'file', 'fileset', 'fileset', 'file', 'path', 'path', 'path', 'path', 'path', 'path', 'path', 'path', 'fileset', 'buildexcept', 'string', 'union', 'union']"
PathConvert.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'pathconvert', 'extends', 'task', 'mapentri', 'targetos', 'extends', 'enumeratedattribut', 'pathconvert', 'path', 'mapentri', 'vector', 'buildexcept', 'path', 'union', 'mapentri', 'targeto', 'buildexcept', 'stringbuff', 'arraylist', 'stringtoken', 'buildexcept', 'mapper', 'buildexcept', 'buildexcept', 'static', 'boolean', 'union', 'path', 'reference', 'refid', 'string', 'targetos', 'boolean', 'targetwindows', 'boolean', 'setonempty', 'string', 'property', 'vector', 'string', 'pathsep', 'string', 'dirsep', 'mapper', 'mapper', 'string', 'from', 'string', 'to']"
PathTokenizer.java,ant,"['package', 'org', 'apache', 'tools', 'pathtoken', 'pathtoken', 'stringtoken', 'stringtoken', 'stringtoken', 'string', 'lookahead']"
PatternSet.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'patternset', 'extends', 'datatype', 'implements', 'clon', 'nameentri', 'patternset', 'nameentri', 'nameentri', 'nameentri', 'nameentri', 'object', 'vector', 'vector', 'vector', 'vector', 'stringbuff', 'stringtoken', 'stringtoken', 'nameentri', 'bufferedread', 'fileread', 'buildexcept', 'buildexcept', 'vector', 'buildexcept', 'buildexcept', 'buildexcept', 'vector', 'vector', 'vector', 'vector']"
Permissions.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'permiss', 'mysm', 'extends', 'securitymanag', 'permiss', 'permiss', 'permiss', 'synchron', 'synchron', 'linkedlist', 'linkedlist', 'permiss', 'mysm', 'buildexcept', 'buildexcept', 'unresolvedpermiss', 'exitexcept', 'securityexcept', 'securityexcept', 'hashset', 'stringtoken', 'list', 'list', 'java', 'security', 'permissions', 'granted', 'securitymanager', 'origsm', 'boolean', 'active', 'set']"
PlainJUnitResultFormatter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'plainjunitresultformatter', 'implements', 'junitresultformatt', 'plainjunitresultformatt', 'hashtabl', 'hashtabl', 'stringwrit', 'printwrit', 'stringbuff', 'buildexcept', 'stringbuff', 'buildexcept', 'numberformat', 'hashtabl', 'outputstream', 'stringwrit', 'printwrit', 'hashtabl', 'string', 'systemoutput', 'string', 'systemerror']"
PlainMailer.java,email,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'email', 'plainmailer', 'extends', 'mail', 'mailmessag', 'buildexcept', 'buildexcept', 'fileinputstream', 'bufferedinputstream']"
PreSetDef.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'presetdef', 'extends', 'antlibdefinition', 'implements', 'taskcontain', 'presetdefinition', 'extends', 'anttypedefinit', 'presetdefinit', 'classload', 'object', 'unknownel', 'object', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'presetdefinit', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'unknownel', 'string', 'anttypedefinit', 'unknownelement']"
PresentSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'presentselector', 'extends', 'baseselector', 'filepresence', 'extends', 'enumeratedattribut', 'presentselector', 'mapper', 'stringbuff', 'buildexcept', 'mapper', 'identitymapp', 'buildexcept', 'file', 'file', 'targetdir', 'mapper', 'mapperelement', 'filenamemapper', 'map', 'boolean', 'destmustexist']"
ProcessDestroyer.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'processdestroyer', 'implements', 'runn', 'processdestroyerimpl', 'extends', 'thread', 'processdestroyerimpl', 'processdestroy', 'vector', 'processdestroyerimpl', 'vector', 'method', 'method', 'processdestroyerimpl', 'destroyprocessthread', 'boolean', 'added', 'boolean', 'running', 'boolean', 'shoulddestroy']"
Project.java,ant,"['package', 'org', 'apache', 'tools', 'project', 'implements', 'resourcefactori', 'antreftable', 'extends', 'hasht', 'inputstream', 'inputhandl', 'project', 'project', 'antclassload', 'antclassload', 'classload', 'synchron', 'synchron', 'vector', 'filterset', 'hashtabl', 'hashtabl', 'hashtabl', 'file', 'hashtabl', 'hashtabl', 'hashtabl', 'task', 'object', 'executor', 'file', 'file', 'hashtabl', 'object', 'synchron', 'task', 'object', 'resourc', 'antreft', 'hashmap', 'hashtabl', 'filterset', 'filtersetcollect', 'vector', 'weakhashmap', 'weakhashmap', 'defaultinputhandl', 'project', 'antclassload', 'antclassload', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'eofexcept', 'buildexcept', 'hashset', 'buildexcept', 'buildexcept', 'vector', 'hashtabl', 'stack', 'runtimeexcept', 'stringbuff', 'vector', 'runtimeexcept', 'stringbuff', 'buildexcept', 'runtimeexcept', 'stringbuff', 'buildexcept', 'vector', 'vector', 'buildev', 'buildev', 'buildev', 'buildev', 'buildev', 'buildev', 'buildev', 'buildev', 'buildev', 'buildev', 'buildev', 'fileresourc', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'fileutil', 'hashtabl', 'hashmap', 'project', 'parentidproject', 'hashtabl', 'filterset', 'file', 'vector', 'classloader', 'coreloader', 'map', 'thread', 'task', 'inputhandler', 'inputhandler', 'inputstream', 'defaultinputstream', 'boolean', 'keepgoingmode', 'boolean', 'loggingmessage']"
ProjectComponent.java,ant,"['package', 'org', 'apache', 'tools', 'projectcomponent', 'implements', 'clon', 'projectcompon', 'project', 'locat', 'object']"
ProjectHelper.java,ant,"['package', 'org', 'apache', 'tools', 'projecthelp', 'projecthelp', 'hashtabl', 'vector', 'hashtabl', 'vector', 'buildexcept', 'inputstreamread', 'inputstreamread', 'bufferedread', 'projecthelper2', 'buildexcept', 'buildexcept', 'buildexcept', 'vector']"
PropertiesfileCache.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selectors', 'modifiedselector', 'propertiesfilecache', 'implements', 'cach', 'propertiesfilecach', 'propertiesfilecach', 'file', 'object', 'iter', 'properti', 'bufferedinputstream', 'fileinputstream', 'bufferedoutputstream', 'fileoutputstream', 'properti', 'stringbuff', 'file', 'cachefile', 'properti', 'boolean', 'cacheloaded', 'boolean', 'cachedirty']"
Property.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'property', 'extends', 'task', 'properti', 'file', 'url', 'refer', 'path', 'path', 'path', 'illegalstateexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'properti', 'buildexcept', 'properti', 'fileinputstream', 'buildexcept', 'properti', 'buildexcept', 'properti', 'stack', 'buildexcept', 'vector', 'vector', 'stringbuff', 'project']"
PropertyFile.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'propertyfile', 'extends', 'task', 'entri', 'operation', 'extends', 'enumeratedattribut', 'type', 'extends', 'enumeratedattribut', 'unit', 'extends', 'enumeratedattribut', 'entri', 'unit', 'vector', 'entri', 'properti', 'fileinputstream', 'bufferedinputstream', 'fileoutputstream', 'buildexcept', 'buildexcept', 'bufferedoutputstream', 'fileoutputstream', 'buildexcept', 'buildexcept', 'simpledateformat', 'date', 'buildexcept', 'decimalformat', 'decimalformat', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'hashmap', 'integ', 'integ', 'integ', 'integ', 'integ', 'integ', 'integ', 'integ', 'string', 'properties', 'file', 'vector', 'static', 'final', 'int', 'default_int_value', 'static', 'final', 'str', 'static', 'final', 'str', 'string', 'key', 'int', 'int', 'string', 'value', 'string', 'defaultvalue', 'string', 'newvalue', 'string', 'pattern', 'int', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'map']"
PropertyHelper.java,ant,"['package', 'org', 'apache', 'tools', 'propertyhelp', 'propertyhelp', 'object', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'hashtabl', 'hashtabl', 'hashtabl', 'hashtabl', 'hashtabl', 'propertyhelp', 'vector', 'vector', 'stringbuff', 'hashtabl', 'hashtabl', 'buildexcept', 'project', 'propertyhelp', 'hashtabl', 'hashtabl', 'hashtabl']"
PropertyOutputStream.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'propertyoutputstream', 'extends', 'bytearrayoutputstream', 'propertyoutputstream', 'propertyoutputstream', 'project']"
PropertyResource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'propertyresource', 'extends', 'resourc', 'propertyresourc', 'propertyresourc', 'inputstream', 'outputstream', 'inputstream', 'bytearrayinputstream', 'immutableresourceexcept', 'propertyoutputstream', 'static', 'final', 'inputstream']"
PropertySet.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'propertyset', 'extends', 'datatype', 'implements', 'resourcecollect', 'propertyref', 'builtinpropertysetname', 'extends', 'enumeratedattribut', 'mapper', 'mapper', 'properti', 'iter', 'object', 'vector', 'vector', 'buildexcept', 'buildexcept', 'propertyref', 'propertyref', 'propertyref', 'propertyref', 'buildexcept', 'mapper', 'hashtabl', 'hashset', 'hashset', 'properti', 'regexpmatcherfactori', 'buildexcept', 'buildexcept', 'stringbuff', 'treemap', 'iter', 'propertyresourc', 'unsupportedoperationexcept', 'boolean', 'dynamic', 'boolean', 'negate', 'set', 'vector', 'vector', 'mapper', 'boolean', 'noattributeset']"
Provider.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'spi', 'provider', 'extends', 'projectcompon', 'buildexcept', 'buildexcept']"
ProxyDiagnostics.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'java15', 'proxydiagnost', 'proxydiagnost', 'proxydiagnost', 'uri', 'buildexcept', 'stringbuff', 'uri']"
ProxySetup.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'proxysetup', 'proxysetup', 'project']"
PumpStreamHandler.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'pumpstreamhandler', 'implements', 'executestreamhandl', 'pumpstreamhandl', 'pumpstreamhandl', 'pumpstreamhandl', 'pumpstreamhandl', 'thread', 'thread', 'streampump', 'streampump', 'thread', 'thread', 'streampump', 'outputstream', 'outputstream', 'inputstream']"
Pvcs.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'pvc', 'pvcs', 'extends', 'org', 'apache', 'tools', 'ant', 'task', 'vector', 'pvc', 'execut', 'buildexcept', 'stringbuff', 'buildexcept', 'commandlin', 'buildexcept', 'random', 'file', 'fileoutputstream', 'file', 'pumpstreamhandl', 'logoutputstream', 'buildexcept', 'buildexcept', 'logstreamhandl', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'bufferedread', 'fileread', 'messageformat', 'file', 'bufferedread', 'fileread', 'bufferedwrit', 'filewrit', 'vector', 'static', 'final', 'int', 'pos_1', 'static', 'final', 'int', 'pos_2', 'static', 'final', 'int', 'pos_3', 'vector', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str']"
PvcsProject.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'pvc', 'pvcsproject', 'pvcsproject']"
Quantifier.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'quantifier', 'extends', 'enumeratedattribut', 'predic', 'quantifi', 'quantifi', 'quantifi', 'quantifi', 'quantifi', 'quantifi', 'quantifi', 'predic', 'predic', 'predic', 'predic', 'predic', 'buildexcept', 'static', 'final', 'pred', 'static', 'final', 'pred', 'static', 'final', 'pred', 'static', 'final', 'pred', 'static', 'final', 'pred', 'static', 'final', 'predicate']"
RCSFile.java,cvslib,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'cvslib', 'rcsfile']"
RExecTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'net', 'rexectask', 'extends', 'task', 'rexecsubtask', 'rexecwrite', 'extends', 'rexecsubtask', 'rexecread', 'extends', 'rexecsubtask', 'antrexecclient', 'extends', 'rexeccli', 'rexecsubtask', 'rexecsubtask', 'vector', 'buildexcept', 'stringbuff', 'buildexcept', 'buildexcept', 'buildexcept', 'stringbuff', 'buildexcept', 'buildexcept', 'rexecread', 'rexecwrit', 'buildexcept', 'buildexcept', 'buildexcept', 'antrexeccli', 'buildexcept', 'buildexcept', 'buildexcept', 'string', 'userid', 'string', 'password', 'string', 'command', 'string', 'server', 'vector', 'boolean', 'addcarriagereturn', 'integer', 'defaulttimeout', 'boolean', 'echostring', 'integer', 'timeout']"
ReaderInputStream.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'readerinputstream', 'extends', 'inputstream', 'readerinputstream', 'readerinputstream', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'illegalargumentexcept', 'ioexcept', 'ioexcept', 'runtimeexcept', 'ioexcept', 'ioexcept', 'reader', 'byte']"
Recorder.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'recorder', 'extends', 'task', 'implements', 'subbuildlisten', 'actionchoices', 'extends', 'enumeratedattribut', 'verbositylevelchoices', 'extends', 'loglevel', 'hashtabl', 'buildexcept', 'recorderentri', 'string', 'filename', 'boolean', 'append', 'boolean', 'start', 'boolean', 'emacsmode', 'static', 'hasht', 'static', 'final', 'string']"
RecorderEntry.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'recorderentry', 'implements', 'buildlogger', 'subbuildlisten', 'stringbuff', 'printstream', 'fileoutputstream', 'buildexcept', 'string', 'filename', 'boolean', 'record', 'printstream', 'out', 'long', 'targetstarttime', 'boolean', 'emacsmode', 'project']"
RedirectingOutputStream.java,cvslib,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'cvslib', 'redirectingoutputstream', 'extends', 'lineorientedoutputstream', 'redirectingoutputstream', 'final', 'changelogpars']"
RedirectingStreamHandler.java,cvslib,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'cvslib', 'redirectingoutputstream', 'bytearrayoutputstream', 'buildexcept']"
Redirector.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'redirector', 'propertyoutputstream', 'extends', 'bytearrayoutputstream', 'redirector', 'redirector', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'threadgroup', 'illegalargumentexcept', 'illegalargumentexcept', 'illegalargumentexcept', 'bufferedread', 'stringread', 'stringbuff', 'stringbuff', 'propertyoutputstream', 'keepaliveoutputstream', 'teeoutputstream', 'stringbuff', 'outputstreamfunnel', 'buildexcept', 'propertyoutputstream', 'keepaliveoutputstream', 'teeoutputstream', 'logoutputstream', 'teeoutputstream', 'logoutputstream', 'teeoutputstream', 'leadpipeinputstream', 'inputstreamread', 'chainreaderhelp', 'readerinputstream', 'thread', 'streampump', 'pipedoutputstream', 'buildexcept', 'leadpipeinputstream', 'inputstreamread', 'chainreaderhelp', 'readerinputstream', 'thread', 'streampump', 'pipedoutputstream', 'buildexcept', 'concatfileinputstream', 'buildexcept', 'stringbuff', 'bytearrayinputstream', 'chainreaderhelp', 'inputstreamread', 'buildexcept', 'readerinputstream', 'pumpstreamhandl', 'printstream', 'printstream', 'printstream', 'printstream', 'lazyfileoutputstream', 'teeoutputstream', 'lazyfileoutputstream', 'boolean', 'closed', 'file', 'file', 'file', 'boolean', 'logerror', 'propertyoutputstream', 'baos', 'propertyoutputstream', 'errorbaos', 'boolean', 'append', 'boolean', 'alwayslog', 'boolean', 'createemptyfiles', 'projectcompon', 'outputstream', 'outputstream', 'outputstream', 'errorstream', 'inputstream', 'inputstream', 'printstream', 'outprintstream', 'printstream', 'errorprintstream', 'vector', 'vector', 'vector', 'string', 'outputencoding', 'string', 'errorencoding', 'string', 'inputencoding', 'boolean', 'appendproperties', 'threadgroup', 'boolean', 'loginputstring']"
RedirectorElement.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'redirectorelement', 'extends', 'datatyp', 'filterchain', 'filterchain', 'filterchain', 'vector', 'vector', 'vector', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'illegalargumentexcept', 'illegalargumentexcept', 'filterchain', 'filterchain', 'filterchain', 'mapper', 'arraylist', 'boolean', 'usinginput', 'boolean', 'usingoutput', 'boolean', 'usingerror', 'mapper', 'mapper', 'mapper', 'vector', 'vector', 'vector']"
Reference.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'refer', 'refer', 'refer', 'refer', 'project', 'object', 'object', 'buildexcept', 'buildexcept', 'buildexcept', 'project']"
ReflectUtil.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'reflectutil', 'buildexcept', 'buildexcept']"
ReflectWrapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'reflectwrapp', 'reflectwrapp', 'reflectwrapp', 'object', 'object', 'object', 'object', 'object']"
Regexp.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexp']"
RegexpFactory.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexp', 'regexpfactory', 'extends', 'regexpmatcherfactori', 'regexpfactori', 'regexp', 'regexp', 'buildexcept', 'buildexcept']"
RegexpMatcher.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexp']"
RegexpMatcherFactory.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexp', 'regexpmatcherfactori', 'regexpmatcherfactori', 'regexpmatch', 'regexpmatch', 'buildexcept', 'buildexcept']"
RegexpPatternMapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexppatternmapper', 'implements', 'filenamemapp', 'regexppatternmapp', 'stringbuff', 'regexpmatcherfactori', 'buildexcept', 'boolean', 'handledirsep', 'int', 'regexpoptions']"
RegexpUtil.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'regexp', 'regexputil']"
RegularExpression.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'regularexpression', 'extends', 'datatyp', 'regularexpress', 'regexp', 'regularexpress', 'regexpfactori', 'boolean', 'alreadyinit', 'static', 'final', 'regexpfactori', 'regexp', 'regexp', 'boolean', 'setpatternpending']"
Rename.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'rename', 'extends', 'task', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'fileutil', 'file', 'file', 'boolean', 'replace']"
RenameExtensions.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'renameextensions', 'extends', 'matchingtask', 'renameextens', 'buildexcept', 'move', 'boolean', 'replace', 'file', 'mapper', 'mappertyp']"
Replace.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'replace', 'extends', 'matchingtask', 'nestedstr', 'replacefilt', 'fileinput', 'fileoutput', 'properti', 'nestedstr', 'nestedstr', 'replacefilt', 'nestedstr', 'vector', 'stringbuff', 'stringbuff', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'stringbuff', 'bufferedread', 'fileread', 'bufferedread', 'inputstreamread', 'fileinputstream', 'bufferedwrit', 'filewrit', 'bufferedwrit', 'fileoutputstream', 'stringbuff', 'stringbuff', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'properti', 'fileinputstream', 'buildexcept', 'buildexcept', 'buildexcept', 'fileinput', 'fileoutput', 'buildexcept', 'nestedstr', 'replacefilt', 'replacefilt', 'static', 'final', 'fileutil', 'file', 'src', 'nestedstring', 'token', 'nestedstr', 'file', 'propertyfile', 'file', 'replacefilterfile', 'properties', 'properties', 'vector', 'file', 'dir', 'boolean', 'summary', 'string', 'encoding', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'reader', 'char', 'static', 'final', 'int', 'buff_size', 'stringbuff', 'writer']"
ReplaceRegExp.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'replaceregexp', 'extends', 'task', 'replaceregexp', 'regularexpress', 'substitut', 'vector', 'buildexcept', 'regularexpress', 'buildexcept', 'substitut', 'buildexcept', 'regularexpress', 'buildexcept', 'substitut', 'fileread', 'filewrit', 'inputstreamread', 'fileinputstream', 'outputstreamwrit', 'fileoutputstream', 'bufferedread', 'bufferedwrit', 'printwrit', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'file', 'vector', 'regularexpress', 'substitut', 'static', 'final', 'fileutil', 'string', 'encoding']"
Resource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'resourc', 'resourc', 'resourc', 'resourc', 'resourc', 'object', 'inputstream', 'outputstream', 'iter', 'object', 'biginteg', 'unsupportedoperationexcept', 'illegalargumentexcept', 'unsupportedoperationexcept', 'unsupportedoperationexcept', 'iter', 'nosuchelementexcept', 'unsupportedoperationexcept', 'static', 'final', 'int', 'string', 'name', 'boolean', 'exists', 'long', 'lastmodified', 'boolean', 'directory', 'long', 'size', 'boolean', 'done']"
ResourceCollection.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ']"
ResourceComparator.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'compar', 'resourcecomparator', 'extends', 'datatype', 'implements', 'compar', 'synchron']"
ResourceCount.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'resourcecount', 'extends', 'task', 'implements', 'condit', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'integ', 'integ', 'resourcecollect', 'comparison', 'integ']"
ResourceFactory.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ']"
ResourceLocation.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'resourceloc', 'url', 'string', 'publicid', 'string', 'location', 'url', 'base']"
ResourceSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector']"
ResourceSelectorContainer.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'resourceselectorcontainer', 'extends', 'datatyp', 'resourceselectorcontain', 'resourceselectorcontain', 'iter', 'vector', 'vector']"
ResourceUtils.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'resourceutil', 'outdated', 'implements', 'resourceselector', 'exist', 'union', 'union', 'union', 'restrict', 'outdat', 'inputstreamread', 'inputstreamread', 'bufferedread', 'outputstreamwrit', 'outputstreamwrit', 'bufferedwrit', 'chainreaderhelp', 'bufferedread', 'linetoken', 'inputstreamread', 'inputstreamread', 'bufferedread', 'outputstreamwrit', 'outputstreamwrit', 'bufferedwrit', 'chainreaderhelp', 'bufferedread', 'bufferedinputstream', 'bufferedinputstream', 'bufferedread', 'inputstreamread', 'bufferedread', 'inputstreamread', 'date', 'restrict', 'resourc', 'static', 'final', 'fileutil', 'static', 'final', 'resourceselector']"
Resources.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'resources', 'extends', 'datatype', 'implements', 'resourcecollect', 'mycollection', 'extends', 'abstractcollect', 'myiterator', 'implements', 'iter', 'iter', 'object', 'iter', 'object', 'synchron', 'synchron', 'synchron', 'synchron', 'resourcecollect', 'iter', 'nosuchelementexcept', 'unsupportedoperationexcept', 'myiter', 'nosuchelementexcept', 'unsupportedoperationexcept', 'vector', 'failfast', 'stringbuff', 'mycollect', 'iter', 'iterator', 'ri', 'vector', 'collect']"
ResourcesMatch.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'resourcesmatch', 'implements', 'condit', 'union', 'buildexcept', 'buildexcept', 'union', 'resources', 'boolean', 'astext']"
Restrict.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'baseresourcecollectionwrapp', 'arraylist', 'baseresourcecollectionwrapp']"
RetryHandler.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'retryhandl', 'retryhandl', 'int', 'retriesallowed', 'task']"
Retryable.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util']"
Reverse.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'compar', 'reverse', 'extends', 'resourcecompar', 'revers', 'revers', 'buildexcept', 'resourcecompar']"
Rmic.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'rmic', 'extends', 'matchingtask', 'rmic', 'file', 'file', 'path', 'path', 'vector', 'path', 'path', 'vector', 'implementationspecificargu', 'classload', 'vector', 'facadetaskhelp', 'path', 'path', 'implementationspecificargu', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'file', 'filtersetcollect', 'buildexcept', 'sourcefilescann', 'file', 'file', 'path', 'path', 'boolean', 'verify', 'boolean', 'filtering', 'boolean', 'iiop', 'string', 'boolean', 'idl', 'string', 'boolean', 'debug', 'boolean', 'includeantruntime', 'boolean', 'includejavaruntime', 'vector', 'classloader', 'loader', 'facadetaskhelp', 'static', 'final', 'fileutil']"
RmicAdapter.java,rmic,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'rm']"
RmicAdapterFactory.java,rmic,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'rm', 'rmicadapterfactori', 'sunrmic', 'kafferm', 'wlrmic', 'forkingsunrm', 'xnewrmic']"
Rpm.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'rpm', 'extends', 'task', 'commandlin', 'logstreamhandl', 'logstreamhandl', 'bufferedoutputstream', 'fileoutputstream', 'printstream', 'buildexcept', 'logoutputstream', 'logoutputstream', 'bufferedoutputstream', 'fileoutputstream', 'printstream', 'buildexcept', 'logoutputstream', 'logoutputstream', 'pumpstreamhandl', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'file', 'execut', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'int', 'file', 'string', 'rpmbuildcommand', 'boolean', 'cleanbuilddir', 'boolean', 'removespec', 'boolean', 'removesource', 'file', 'file', 'boolean', 'failonerror', 'boolean', 'quiet']"
RuntimeConfigurable.java,ant,"['package', 'org', 'apache', 'tools', 'runtimeconfigurable', 'implements', 'serializ', 'runtimeconfigur', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'hashtabl', 'attributelistimpl', 'arraylist', 'hashmap', 'hashtabl', 'arraylist', 'stringbuff', 'stringbuff', 'stringbuff', 'buildexcept', 'arraylist', 'stringbuff', 'static', 'final', 'hasht', 'string', 'elementtag', 'list', 'runtimeconfigurable', 'children', 'transient', 'object', 'wrappedobject', 'transient', 'introspectionhelper', 'cr', 'transient', 'attributelist', 'list', 'string', 'attributenames', 'map', 'string', 'string', 'attributemap', 'stringbuffer', 'characters', 'boolean', 'proxyconfigured', 'string', 'polytype', 'string', 'id']"
SOS.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'so', 'sos', 'extends', 'task', 'implements', 'soscmd', 'buildexcept', 'buildexcept', 'execut', 'logstreamhandl', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'string', 'soscmddir', 'string', 'sosusername', 'string', 'projectpath', 'string', 'vssserverpath', 'string', 'sosserverpath', 'string', 'soshome', 'string', 'localpath', 'string', 'version', 'string', 'label', 'string', 'comment', 'string', 'filename', 'boolean', 'nocompress', 'boolean', 'nocache', 'boolean', 'recursive', 'boolean', 'verbose']"
SOSCheckin.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'so', 'soscheckin', 'extends', 'so', 'commandlin']"
SOSCheckout.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'so', 'soscheckout', 'extends', 'so', 'commandlin']"
SOSCmd.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'so']"
SOSGet.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'so', 'sosget', 'extends', 'so', 'commandlin']"
SOSLabel.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'so', 'soslabel', 'extends', 'so', 'commandlin', 'buildexcept']"
SQLExec.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'sqlexec', 'extends', 'jdbctask', 'delimitertype', 'extends', 'enumeratedattribut', 'onerror', 'extends', 'enumeratedattribut', 'transact', 'transact', 'union', 'vector', 'transact', 'buildexcept', 'buildexcept', 'printstream', 'bufferedoutputstream', 'fileoutputstream', 'buildexcept', 'buildexcept', 'stringbuff', 'bufferedread', 'stringtoken', 'stringbuff', 'stringbuff', 'stringbuff', 'fileresourc', 'buildexcept', 'buildexcept', 'stringread', 'inputstreamread', 'inputstreamread', 'int', 'goodsql', 'int', 'totalsql', 'connection', 'conn', 'union', 'statement', 'statement', 'file', 'srcfile', 'vector', 'boolean', 'print', 'boolean', 'showheaders', 'boolean', 'showtrailers', 'file', 'output', 'string', 'encoding', 'boolean', 'append', 'boolean', 'keepformat', 'boolean', 'escapeprocessing', 'boolean', 'expandproperties', 'resource', 'tsrcresource']"
SSHBase.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ssh', 'sshbase', 'extends', 'task', 'implements', 'loglisten', 'sshbase', 'sshuserinfo', 'jsch', 'static', 'final', 'int', 'ssh_port', 'int', 'port', 'boolean', 'failonerror', 'sshuserinfo']"
SSHExec.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ssh', 'sshexec', 'extends', 'sshbas', 'sshexec', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'bytearrayoutputstream', 'teeoutputstream', 'keepaliveoutputstream', 'thread', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'filewrit', 'stringread', 'string', 'command', 'long', 'maxwait', 'thread', 'thread', 'string', 'outputproperty', 'file', 'outputfile', 'boolean', 'append', 'static', 'final', 'str']"
SSHUserInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ssh', 'sshuserinfo', 'implements', 'userinfo', 'uikeyboardinteract', 'sshuserinfo', 'sshuserinfo', 'string', 'password', 'string', 'passphrase']"
SchemaValidate.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'schemavalidate', 'extends', 'xmlvalidatetask', 'schemaloc', 'schemaloc', 'file', 'hashmap', 'buildexcept', 'schemaloc', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'stringbuff', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'stringbuff', 'buildexcept', 'stringbuff', 'hashmap', 'boolean', 'fullchecking', 'boolean', 'disabledtd', 'schemaloc', 'file']"
Scp.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ssh', 'scp', 'extends', 'sshbas', 'linkedlist', 'buildexcept', 'buildexcept', 'buildexcept', 'scpfrommessag', 'scpfrommessagebysftp', 'arraylist', 'scptomessag', 'scptomessagebysftp', 'scptomessag', 'scptomessagebysftp', 'buildexcept', 'buildexcept', 'directori', 'file', 'directori', 'stringbuff', 'buildexcept', 'static', 'final', 'string', 'static', 'final', 'string', 'list', 'filesets', 'boolean', 'isfromremote', 'boolean', 'issftp']"
ScpFromMessage.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ssh', 'scpfrommessage', 'extends', 'abstractsshmessag', 'scpfrommessag', 'scpfrommessag', 'scpfrommessag', 'scpfrommessag', 'bytearrayoutputstream', 'ioexcept', 'file', 'file', 'fileoutputstream', 'eofexcept', 'static', 'final', 'byte', 'line_feed', 'static', 'final', 'int', 'buffer_size', 'file', 'boolean', 'isrecursive']"
ScpFromMessageBySftp.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ssh', 'scpfrommessagebysftp', 'extends', 'scpfrommessag', 'scpfrommessagebysftp', 'scpfrommessagebysftp', 'jschexcept', 'file', 'file', 'file', 'file', 'boolean', 'isrecursive', 'boolean', 'verbose']"
ScpToMessage.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ssh', 'scptomessage', 'extends', 'abstractsshmessag', 'scptomessag', 'scptomessag', 'scptomessag', 'scptomessag', 'scptomessag', 'scptomessag', 'file', 'fileinputstream', 'static', 'final', 'int', 'buffer_size', 'file', 'list']"
ScpToMessageBySftp.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ssh', 'scptomessagebysftp', 'extends', 'scptomessage', 'abstractsshmessage', 'scptomessagebysftp', 'scptomessagebysftp', 'scptomessagebysftp', 'scptomessagebysftp', 'file', 'jschexcept', 'jschexcept', 'file', 'list']"
Script.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'script', 'extends', 'task', 'path', 'scriptrunnerhelp', 'file', 'scriptrunnerhelp']"
ScriptCondition.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'opt', 'scriptcondition', 'extends', 'abstractscriptcomponent', 'implements', 'condit', 'boolean', 'value']"
ScriptDef.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'script', 'scriptdef', 'extends', 'defbas', 'attribut', 'nestedel', 'object', 'scriptrunnerhelp', 'arraylist', 'arraylist', 'buildexcept', 'buildexcept', 'hashset', 'buildexcept', 'buildexcept', 'hashmap', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'hashmap', 'anttypedefinit', 'buildexcept', 'buildexcept', 'scriptrunnerhelp', 'scriptrunnerbase', 'runner', 'list', 'list', 'set', 'map']"
ScriptDefBase.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'script', 'scriptdefbase', 'extends', 'task', 'implements', 'dynamicconfigur', 'object', 'hashmap', 'hashmap', 'buildexcept', 'buildexcept', 'arraylist', 'buildexcept', 'buildexcept', 'map', 'map']"
ScriptFilter.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'opt', 'scriptfilter', 'extends', 'tokenfilter', 'chainablereaderfilt', 'path', 'scriptrunnerhelp', 'scriptrunnerhelp', 'scriptrunnerbase', 'runner']"
ScriptMapper.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'opt', 'scriptmapper', 'extends', 'abstractscriptcomponent', 'implements', 'filenamemapp', 'arraylist', 'arraylist']"
ScriptRunner.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util']"
ScriptRunner.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'opt', 'scriptrunner', 'extends', 'scriptrunnerbas', 'object', 'bsfmanag', 'buildexcept', 'bsfmanag', 'bsfengine', 'bsfmanag']"
ScriptRunnerBase.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'scriptrunnerbas', 'project', 'hashmap', 'buildexcept', 'bufferedread', 'fileread', 'buildexcept', 'buildexcept', 'boolean', 'keepengine', 'project', 'classload', 'map']"
ScriptRunnerCreator.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'scriptrunnercr', 'scriptrunnercr', 'scriptrunnerbas', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'project', 'string', 'string', 'classloader', 'scriptloader']"
ScriptRunnerHelper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'scriptrunnerhelp', 'scriptrunnerbas', 'path', 'scriptrunnercr', 'classpathutils', 'delegate', 'cpdelegate', 'file', 'string', 'string', 'string', 'boolean', 'setbeans', 'projectcompon', 'classloader', 'scriptloader']"
ScriptSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'opt', 'scriptselector', 'extends', 'baseselector', 'path', 'file', 'file', 'scriptrunnerhelp', 'scriptrunnerhelp', 'scriptrunnerbas', 'file', 'file']"
SelectSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'selectselector', 'extends', 'baseselectorcontain', 'selectselector', 'fileselector', 'enumer', 'stringbuff']"
SelectorContainer.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector']"
SelectorScanner.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector']"
SelectorUtils.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'selectorutil', 'selectorutil', 'vector', 'stringtoken', 'stringbuff', 'stringtoken', 'stringbuff', 'static', 'selectorutil', 'static', 'final', 'fileutil']"
SendEmail.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'sendemail', 'extends', 'emailtask']"
Sequential.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'sequential', 'extends', 'task', 'implements', 'taskcontain', 'vector', 'vector']"
ServerDeploy.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'j2e', 'serverdeploy', 'extends', 'task', 'file', 'vector', 'file', 'vector']"
Service.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'spi', 'service', 'extends', 'projectcompon', 'inputstream', 'arraylist', 'provid', 'bytearrayoutputstream', 'outputstreamwrit', 'bytearrayinputstream', 'buildexcept', 'buildexcept', 'buildexcept', 'list']"
SetProxy.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'net', 'setproxy', 'extends', 'task', 'proxyauth', 'extends', 'authent', 'proxyauth', 'proxyauth', 'passwordauthent', 'string', 'socksproxyhost', 'int', 'socksproxyport', 'string', 'nonproxyhosts', 'string', 'proxyuser', 'string', 'proxypassword', 'passwordauthent']"
SignJar.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'signjar', 'extends', 'abstractjarsignertask', 'filenamemapp', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'identitymapp', 'buildexcept', 'file', 'static', 'final', 'fileutil', 'filenamemapp']"
SignedSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'signedselector', 'extends', 'datatype', 'implements', 'fileselector', 'issign', 'issign']"
SimpleP4OutputHandler.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'perforc', 'simplep4outputhandler', 'extends', 'p4handleradapt', 'simplep4outputhandl']"
Size.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'compar', 'size', 'extends', 'resourcecompar']"
Size.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'size', 'implements', 'resourceselector', 'comparison', 'comparison']"
SizeSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'sizeselector', 'extends', 'baseextendselector', 'byteunits', 'extends', 'enumeratedattribut', 'sizecomparisons', 'extends', 'comparison', 'sizeselector', 'stringbuff', 'byteunit', 'sizecomparison', 'long', 'multiplier', 'comparison']"
Sj.java,compilers,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'compil', 'sj', 'extends', 'defaultcompileradapt']"
Sleep.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'sleep', 'extends', 'task', 'sleep', 'buildexcept', 'buildexcept', 'boolean', 'failonerror', 'int', 'seconds', 'int', 'hours', 'int', 'minutes', 'int', 'milliseconds']"
SmtpResponseReader.java,mail,"['package', 'org', 'apache', 'tools', 'mail', 'smtpresponseread', 'smtpresponseread', 'stringbuff', 'bufferedread', 'inputstreamread', 'stringbuff']"
Socket.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'socket', 'extends', 'projectcomponent', 'implements', 'condit', 'buildexcept', 'buildexcept', 'string', 'server', 'int', 'port']"
Sort.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'sort', 'extends', 'baseresourcecollectionwrapp', 'sortedbag', 'extends', 'abstractcollect', 'mutableint', 'myiterator', 'implements', 'iter', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'nosuchelementexcept', 'unsupportedoperationexcept', 'treemap', 'myiter', 'mutableint', 'delegatedresourcecompar', 'sortedbag', 'int', 'value', 'iter', 'object', 'treemap', 'delegatedresourcecompar']"
SoundTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'sound', 'soundtask', 'extends', 'task', 'buildalert', 'buildalert', 'buildalert', 'soundtask', 'file', 'buildalert', 'buildalert', 'antsoundplay', 'vector', 'file', 'buildexcept', 'random', 'buildalert', 'success', 'buildalert', 'fail', 'file', 'source', 'int', 'loops', 'long', 'duration']"
SourceFileScanner.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'sourcefilescanner', 'implements', 'resourcefactori', 'sourcefilescann', 'file', 'file', 'resourc', 'vector', 'resourc', 'file', 'fileresourc', 'static', 'final', 'fileutil', 'file']"
Specification.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extens', 'specif', 'specif', 'specif', 'deweydecim', 'compat', 'compat', 'compat', 'compat', 'compat', 'compat', 'arraylist', 'deweydecim', 'illegalargumentexcept', 'nullpointerexcept', 'stringbuff', 'arraylist', 'arraylist', 'specif', 'parseexcept', 'parseexcept', 'parseexcept', 'parseexcept', 'parseexcept', 'specif', 'static', 'final', 'str', 'deweydecim', 'string']"
SplashScreen.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'splash', 'splashscreen', 'extends', 'jwindow', 'implements', 'actionlistener', 'buildlisten', 'splashscreen', 'splashscreen', 'jlabel', 'jlabel', 'jlabel', 'font', 'jprogressbar', 'jpanel', 'borderlayout', 'borderlayout', 'jlabel', 'jprogressbar', 'static', 'final', 'int', 'min', 'static', 'final', 'int', 'max']"
SplashTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'splash', 'splashtask', 'extends', 'task', 'url', 'base64convert', 'url', 'datainputstream', 'bytearrayoutputstream', 'imageicon', 'splashscreen', 'buildexcept', 'buildexcept', 'splashscreen', 'string', 'imgurl', 'string', 'proxy', 'string', 'user', 'string', 'password', 'int', 'showduration', 'boolean', 'useproxy', 'static', 'splashscreen', 'splash']"
StreamPumper.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'streampumper', 'implements', 'runn', 'streampump', 'streampump', 'synchron', 'synchron', 'synchron', 'synchron', 'illegalstateexcept', 'inputstream', 'outputstream', 'volatile', 'boolean', 'volatile', 'boolean', 'boolean', 'autoflush', 'exception', 'exception', 'int', 'buffersize', 'boolean', 'started']"
StringCPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'stringcpinfo', 'extends', 'constantcpinfo', 'stringcpinfo']"
StringResource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'stringresource', 'extends', 'resourc', 'stringresourc', 'stringresourc', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'buildexcept', 'immutableresourceexcept', 'inputstreamread', 'bytearrayinputstream', 'immutableresourceexcept', 'bytearrayoutputstream', 'filteroutputstream', 'string', 'encoding']"
StringTokenizer.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'stringtokenizer', 'extends', 'projectcomponent', 'implements', 'token', 'stringbuff', 'stringbuff', 'int', 'char', 'delims', 'boolean', 'delimsaretokens', 'boolean', 'suppressdelims', 'boolean', 'includedelims']"
StringUtils.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'stringutil', 'vector', 'stringbuff', 'stringwrit', 'printwrit', 'stringbuff']"
StyleBook.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'stylebook', 'extends', 'java', 'stylebook', 'buildexcept', 'buildexcept', 'buildexcept']"
SubAnt.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'path', 'path', 'vector', 'vector', 'vector', 'vector', 'buildexcept', 'file', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'ant', 'path', 'ant', 'ant', 'string', 'subtarget', 'file', 'genericantfile', 'boolean', 'verbose', 'boolean', 'inheritall', 'boolean', 'inheritrefs', 'boolean', 'failonerror', 'string', 'output', 'vector', 'vector', 'vector', 'vector', 'targetelement']"
SubBuildListener.java,ant,"['package', 'org', 'apache', 'tools']"
Substitution.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'substitution', 'extends', 'datatyp', 'substitut', 'substitut']"
SummaryJUnitResultFormatter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'summaryjunitresultformatt', 'stringbuff', 'buildexcept', 'stringbuff', 'buildexcept', 'numberformat', 'outputstream', 'boolean', 'withoutanderr', 'string', 'systemoutput', 'string', 'systemerror']"
SunJavah.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'javah', 'sunjavah', 'implements', 'javahadapt', 'executejava', 'buildexcept', 'path', 'commandlin', 'buildexcept', 'path']"
SunNative2Ascii.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'native2ascii', 'sunnative2ascii', 'extends', 'defaultnative2ascii', 'buildexcept', 'buildexcept']"
SunRmic.java,rmic,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'rm', 'sunrmic', 'extends', 'defaultrmicadapt', 'logoutputstream', 'buildexcept', 'buildexcept', 'buildexcept']"
Symlink.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'unix', 'symlink', 'extends', 'dispatchtask', 'synchron', 'vector', 'buildexcept', 'file', 'file', 'hashtabl', 'vector', 'properti', 'file', 'filenotfoundexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'bufferedoutputstream', 'fileoutputstream', 'file', 'buildexcept', 'buildexcept', 'file', 'hashset', 'file', 'file', 'properti', 'directoryscann', 'file', 'properti', 'bufferedinputstream', 'fileinputstream', 'printstream', 'logoutputstream', 'file', 'static', 'final', 'fileutil', 'vector', 'boolean', 'executing']"
Sync.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'sync', 'extends', 'task', 'mycopy', 'extends', 'copi', 'synctarget', 'extends', 'abstractfileset', 'mycopi', 'file', 'synctarget', 'mycopi', 'fileset', 'noneselector', 'directoryscann', 'file', 'file', 'buildexcept', 'hashset', 'buildexcept', 'buildexcept', 'mycopi', 'synctarget', 'set']"
Tar.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'tar', 'extends', 'matchingtask', 'tarlongfilemode', 'extends', 'enumeratedattribut', 'tarcompressionmethod', 'extends', 'enumeratedattribut', 'tarfileset', 'tarfileset', 'tarfileset', 'tarlongfilemod', 'tarcompressionmethod', 'tarlongfilemod', 'vector', 'vector', 'vector', 'tarcompressionmethod', 'tarfileset', 'tarlongfilemod', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'tarfileset', 'buildexcept', 'taroutputstream', 'bufferedoutputstream', 'fileoutputstream', 'buildexcept', 'fileresourc', 'buildexcept', 'tarentri', 'buildexcept', 'sourcefilescann', 'mergingmapp', 'fileresourc', 'buildexcept', 'hashset', 'hashmap', 'vector', 'vector', 'file', 'buildexcept', 'buildexcept', 'file', 'file', 'tarfileset', 'gzipoutputstream', 'cbzip2outputstream', 'tarlongfilemod', 'vector', 'boolean', 'longwarninggiven', 'tarcompressionmethod', 'string', 'files', 'boolean', 'preserveleadingslashes', 'final', 'string', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str']"
TarBuffer.java,tar,"['package', 'org', 'apache', 'tools', 'tar', 'tarbuff', 'tarbuff', 'tarbuff', 'tarbuff', 'tarbuff', 'tarbuff', 'tarbuff', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'ioexcept', 'inputstream', 'outputstream', 'byte', 'int', 'int', 'int', 'int', 'int', 'boolean']"
TarConstants.java,tar,"['package', 'org', 'apache', 'tools', 'tar']"
TarEntry.java,tar,"['package', 'org', 'apache', 'tools', 'tar', 'tarentry', 'implements', 'tarconst', 'tarentri', 'tarentri', 'tarentri', 'tarentri', 'date', 'file', 'tarentri', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'date', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'date', 'tarentri', 'file', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'stringbuff', 'file']"
TarFileSet.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'tarfileset', 'extends', 'archivefileset', 'tarfileset', 'object', 'tarscann', 'tarfileset', 'buildexcept', 'int', 'int']"
TarInputStream.java,tar,"['package', 'org', 'apache', 'tools', 'tar', 'tarinputstream', 'extends', 'filterinputstream', 'tarinputstream', 'tarinputstream', 'tarinputstream', 'tarentri', 'tarbuff', 'tarentri', 'stringbuff', 'ioexcept']"
TarOutputStream.java,tar,"['package', 'org', 'apache', 'tools', 'tar', 'taroutputstream', 'extends', 'filteroutputstream', 'taroutputstream', 'taroutputstream', 'taroutputstream', 'tarbuff', 'tarentri', 'runtimeexcept', 'ioexcept', 'ioexcept', 'boolean', 'closed']"
TarResource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'tarresource', 'extends', 'archiveresourc', 'tarresourc', 'tarresourc', 'tarresourc', 'inputstream', 'outputstream', 'tarinputstream', 'buildexcept', 'unsupportedoperationexcept', 'tarinputstream', 'buildexcept', 'int', 'int']"
TarScanner.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'tarscanner', 'extends', 'archivescann', 'tarinputstream', 'buildexcept', 'tarresourc', 'buildexcept']"
TarUtils.java,tar,"['package', 'org', 'apache', 'tools', 'tar', 'tarutil', 'stringbuff']"
Target.java,ant,"['package', 'org', 'apache', 'tools', 'target', 'implements', 'taskcontain', 'target', 'target', 'project', 'locat', 'task', 'enumer', 'arraylist', 'stringtoken', 'buildexcept', 'buildexcept', 'arraylist', 'arraylist', 'list', 'dependencies', 'list', 'locat', 'project', 'string', 'description']"
Task.java,ant,"['package', 'org', 'apache', 'tools', 'task', 'extends', 'projectcompon', 'task', 'target', 'runtimeconfigur', 'runtimeconfigur', 'buildexcept', 'unknownel', 'unknownel', 'unknownel']"
TaskAdapter.java,ant,"['package', 'org', 'apache', 'tools', 'taskadapter', 'extends', 'task', 'implements', 'typeadapt', 'execut', 'object', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'object']"
TaskContainer.java,ant,"['package', 'org', 'apache', 'tools']"
TaskLogger.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'tasklogg', 'tasklogg', 'task']"
TaskOutputStream.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'taskoutputstream', 'extends', 'outputstream', 'printstream', 'taskoutputstream', 'stringbuff', 'stringbuff', 'task', 'stringbuff']"
Taskdef.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'taskdef', 'extends', 'typedef', 'taskdef']"
TeeOutputStream.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'teeoutputstream', 'extends', 'outputstream', 'teeoutputstream', 'outputstream', 'outputstream']"
TelnetTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'net', 'telnettask', 'extends', 'task', 'telnetsubtask', 'telnetwrite', 'extends', 'telnetsubtask', 'telnetread', 'extends', 'telnetsubtask', 'anttelnetclient', 'extends', 'telnetcli', 'telnetsubtask', 'telnetsubtask', 'vector', 'buildexcept', 'buildexcept', 'buildexcept', 'anttelnetcli', 'buildexcept', 'buildexcept', 'telnetread', 'telnetwrit', 'buildexcept', 'stringbuff', 'buildexcept', 'buildexcept', 'buildexcept', 'string', 'userid', 'string', 'password', 'string', 'server', 'int', 'port', 'vector', 'boolean', 'addcarriagereturn', 'integer', 'defaulttimeout', 'boolean', 'echostring', 'integer', 'timeout']"
TempFile.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'tempfile', 'extends', 'task', 'buildexcept', 'static', 'final', 'fileutil', 'file', 'destdir']"
TimeComparison.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'timecomparison', 'extends', 'enumeratedattribut', 'timecomparison', 'timecomparison', 'timecomparison', 'timecomparison', 'timecomparison', 'buildexcept', 'static', 'final', 'fileutil']"
TimeoutObserver.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util']"
TimestampedLogger.java,listener,"['package', 'org', 'apache', 'tools', 'ant', 'listen', 'timestampedlogger', 'extends', 'defaultlogg', 'date', 'static', 'final', 'str']"
Tokenizer.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util']"
Tokens.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'tokens', 'extends', 'baseresourcecollectionwrapp', 'synchron', 'synchron', 'linetoken', 'concatresourceinputstream', 'inputstreamread', 'inputstreamread', 'buildexcept', 'arraylist', 'stringresourc', 'buildexcept', 'buildexcept', 'token']"
Touch.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'touch', 'extends', 'task', 'dateformat', 'dateformat', 'touch', 'dateformat', 'dateformat', 'dateformatfactori', 'vector', 'union', 'dateformatfactori', 'simpledateformat', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'fileresourc', 'buildexcept', 'fileresourc', 'buildexcept', 'buildexcept', 'static', 'final', 'fileutil', 'file', 'vector', 'union', 'boolean', 'verbose', 'filenamemapper', 'filenamemapper', 'dateformatfactory', 'dffactory']"
Touchable.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc']"
TraXLiaison.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'traxliaison', 'implements', 'xsltliaison3', 'errorlistener', 'xsltloggerawar', 'traxliaison', 'vector', 'hashtabl', 'vector', 'fileresourc', 'bufferedinputstream', 'fileinputstream', 'bufferedoutputstream', 'fileoutputstream', 'streamresult', 'saxsourc', 'inputsourc', 'illegalstateexcept', 'streamsourc', 'saxsourc', 'inputsourc', 'illegalstateexcept', 'streamsourc', 'bufferedinputstream', 'buildexcept', 'buildexcept', 'stringbuff', 'static', 'final', 'fileutil', 'project', 'string', 'factoryname', 'transformerfactory', 'tfactory', 'resourc', 'xsltlogger', 'entityresolv', 'transform', 'templat', 'uriresolv', 'vector', 'hashtabl', 'vector']"
Transform.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'transform', 'extends', 'executeon']"
Translate.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'i18n', 'translate', 'extends', 'matchingtask', 'vector', 'hashtabl', 'buildexcept', 'buildexcept', 'buildexcept', 'local', 'buildexcept', 'buildexcept', 'local', 'fileinputstream', 'buildexcept', 'inputstreamread', 'bufferedread', 'buildexcept', 'file', 'fileoutputstream', 'bufferedwrit', 'outputstreamwrit', 'fileinputstream', 'bufferedread', 'inputstreamread', 'linetoken', 'buildexcept', 'static', 'final', 'int', 'bundle_specified_language_country_variant', 'static', 'final', 'int', 'bundle_specified_language_country', 'static', 'final', 'int', 'bundle_specified_language', 'static', 'final', 'int', 'bundle_nomatch', 'static', 'final', 'int', 'bundle_default_language_country_variant', 'static', 'final', 'int', 'bundle_default_language_country', 'static', 'final', 'int', 'bundle_default_language', 'static', 'final', 'int', 'bundle_max_alternatives', 'bundle_default_language', 'file', 'vector', 'hashtabl', 'static', 'final', 'fileutil', 'long', 'boolean', 'loaded']"
Tstamp.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'tstamp', 'extends', 'task', 'customformat', 'unit', 'extends', 'enumeratedattribut', 'customformat', 'customformat', 'unit', 'vector', 'date', 'buildexcept', 'customformat', 'stringtoken', 'buildexcept', 'buildexcept', 'unit', 'buildexcept', 'buildexcept', 'simpledateformat', 'simpledateformat', 'local', 'simpledateformat', 'local', 'hashmap', 'integ', 'integ', 'integ', 'integ', 'integ', 'integ', 'integ', 'integ', 'vector', 'timezon', 'int', 'offset', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'string', 'map']"
Type.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'compar', 'type', 'extends', 'resourcecompar']"
Type.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resources', 'selector', 'type', 'implements', 'resourceselector', 'filedir', 'extends', 'enumeratedattribut', 'filedir', 'filedir', 'type', 'type', 'type', 'filedir', 'type', 'filedir', 'buildexcept', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'string', 'filedir', 'type']"
TypeAdapter.java,ant,"['package', 'org', 'apache', 'tools']"
TypeFound.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'typefound', 'extends', 'projectcomponent', 'implements', 'condit', 'buildexcept']"
TypeSelector.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'selector', 'typeselector', 'extends', 'baseextendselector', 'filetype', 'extends', 'enumeratedattribut', 'typeselector', 'stringbuff', 'filetyp', 'string', 'type']"
Typedef.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'typedef', 'extends', 'defin']"
URLResolver.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'extension', 'resolv', 'urlresolver', 'implements', 'extensionresolv', 'file', 'get', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'file', 'url']"
URLResource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'urlresource', 'extends', 'resourc', 'urlresourc', 'urlresourc', 'urlresourc', 'urlresourc', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'synchron', 'buildexcept', 'buildexcept', 'url', 'buildexcept', 'static', 'final', 'fileutil', 'url', 'urlconnect']"
UUEncoder.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'uuencod', 'uuencod', 'printstream', 'static', 'final', 'int', 'max_chars_per_line', 'outputstream']"
UUMailer.java,email,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'email', 'uumailer', 'extends', 'plainmail', 'buildexcept', 'fileinputstream', 'bufferedinputstream', 'uuencod']"
UnPackageNameMapper.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'unpackagenamemapper', 'extends', 'globpatternmapp']"
Union.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'union', 'extends', 'baseresourcecollectioncontain', 'union', 'union', 'resourc', 'union', 'arraylist']"
UnixStat.java,zip,"['package', 'org', 'apache', 'tools', 'zip']"
UnknownElement.java,ant,"['package', 'org', 'apache', 'tools', 'unknownelement', 'extends', 'task', 'unknownel', 'list', 'runtimeconfigur', 'task', 'object', 'unknownel', 'buildexcept', 'arraylist', 'buildexcept', 'arraylist', 'buildexcept', 'unknownel', 'target', 'runtimeconfigur', 'object', 'list', 'unknownelement', 'children', 'boolean', 'presetdefed']"
Unpack.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'unpack', 'extends', 'task', 'fileresourc', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'file', 'file']"
UnrecognizedExtraField.java,zip,"['package', 'org', 'apache', 'tools', 'zip', 'unrecognizedextrafield', 'implements', 'zipextrafield', 'zipshort', 'zipshort', 'zipshort', 'zipshort', 'zipshort', 'zipshort', 'byte', 'byte']"
UnsupportedAttributeException.java,ant,"['package', 'org', 'apache', 'tools', 'unsupportedattributeexception', 'extends', 'buildexcept', 'unsupportedattributeexcept']"
UnsupportedElementException.java,ant,"['package', 'org', 'apache', 'tools', 'unsupportedelementexception', 'extends', 'buildexcept', 'unsupportedelementexcept']"
Untar.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'untar', 'extends', 'expand', 'untarcompressionmethod', 'inputstream', 'untarcompressionmethod', 'buildexcept', 'fileinputstream', 'buildexcept', 'buildexcept', 'tarinputstream', 'bufferedinputstream', 'gzipinputstream', 'buildexcept', 'cbzip2inputstream', 'untarcompressionmethod', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str']"
UpToDate.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'uptodate', 'extends', 'task', 'implements', 'condit', 'union', 'mapper', 'vector', 'union', 'buildexcept', 'mapper', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'sourcefilescann', 'buildexcept', 'sourcefilescann', 'mergingmapp', 'file', 'file', 'vector', 'union']"
Utf8CPInfo.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'depend', 'constantpool', 'utf8cpinfo', 'extends', 'constantpoolentri', 'utf8cpinfo']"
VerifyJar.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'verifyjar', 'extends', 'abstractjarsignertask', 'bufferingoutputfilter', 'implements', 'chainableread', 'bufferingoutputfilterreader', 'extends', 'read', 'reader', 'bufferingoutputfilterread', 'bufferingoutputfilt', 'buildexcept', 'buildexcept', 'buildexcept', 'bufferingoutputfilterread', 'stringbuff', 'stringbuff', 'static', 'final', 'str', 'boolean', 'certificates', 'bufferingoutputfilt', 'bufferingoutputfilterread', 'reader', 'stringbuff']"
VisualBasicCompile.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'visualbasiccompile', 'extends', 'dotnetcompil', 'visualbasiccompil', 'buildexcept', 'boolean', 'removeintchecks', 'boolean', 'optionexplicit', 'boolean', 'optionstrict']"
WLJspc.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jsp', 'wljspc', 'extends', 'matchingtask', 'path', 'vector', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'file', 'path', 'date', 'file', 'file', 'file', 'stringtoken', 'file', 'file', 'path', 'vector']"
WLRmic.java,rmic,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'rm', 'wlrmic', 'extends', 'defaultrmicadapt', 'buildexcept', 'buildexcept']"
WLRun.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'wlrun', 'extends', 'task', 'path', 'path', 'path', 'path', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'path', 'path', 'file', 'string', 'weblogicpropertiesfile', 'file', 'beahome', 'string', 'managementpassword', 'string', 'pkpassword', 'key', 'password', 'so', 'the', 'server', 'can', 'decrypt', 'the', 'ssl', 'private', 'key']"
WLStop.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'wlstop', 'extends', 'task', 'path', 'buildexcept', 'buildexcept', 'path', 'path', 'int', 'delay', 'file', 'beahome']"
WaitFor.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'waitfor', 'extends', 'conditionbas', 'unit', 'extends', 'enumeratedattribut', 'waitfor', 'unit', 'buildexcept', 'buildexcept', 'hashmap', 'long', 'maxwaitmillis', '1000l', '60l', 'long', 'maxwaitmultiplier', 'long', 'checkeverymillis', 'long', 'checkeverymultiplier', 'static', 'final', 'string', 'map']"
War.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'war', 'extends', 'jar', 'war', 'buildexcept', 'zipfileset', 'buildexcept', 'file', 'boolean', 'needxmlfile', 'file', 'static', 'final', 'fileutil', 'static', 'final', 'str', 'static', 'final', 'str']"
Watchdog.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'watchdog', 'implements', 'runn', 'watchdog', 'synchron', 'synchron', 'synchron', 'vector', 'illegalargumentexcept', 'thread', 'vector', 'volatile', 'boolean', 'stopped']"
WeakishReference.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'weakishrefer', 'hardreference', 'extends', 'weakishrefer', 'object', 'hardrefer', 'weakrefer', 'weakishrefer', 'weakrefer']"
WeakishReference12.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'opt', 'weakishreference12', 'extends', 'weakishreference', 'hardrefer', 'weakishreference12']"
WebLogicHotDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'j2e', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'stringbuff', 'static', 'final', 'str']"
WeblogicDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'weblogicdeploymenttool', 'extends', 'genericdeploymenttool', 'if', 'replaceentries', 'containskey', 'je', 'getname', 'path', 'integ', 'vector', 'path', 'descriptorhandl', 'file', 'file', 'file', 'fileinputstream', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'jarfil', 'jarfil', 'hashtabl', 'hashtabl', 'hashtabl', 'file', 'jaroutputstream', 'fileoutputstream', 'jarentri', 'buildexcept', 'buildexcept', 'path', 'static', 'final', 'fileutil', 'boolean', 'keepgenerated', 'string', 'ejbcclass', 'boolean', 'keepgeneric', 'string', 'compiler', 'boolean', 'alwaysrebuild', 'boolean', 'noejbc', 'boolean', 'newcmp', 'path', 'wlclasspath', 'vector', 'integer', 'jvmdebuglevel', 'file']"
WeblogicTOPLinkDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'weblogictoplinkdeploymenttool', 'extends', 'weblogicdeploymenttool', 'file', 'buildexcept']"
WebsphereDeploymentTool.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'ejb', 'webspheredeploymenttool', 'extends', 'genericdeploymenttool', 'if', 'replaceentries', 'containskey', 'je', 'getname', 'path', 'path', 'descriptorhandl', 'descriptorhandl', 'file', 'file', 'file', 'file', 'buildexcept', 'file', 'stringbuff', 'file', 'buildexcept', 'buildexcept', 'jarfil', 'jarfil', 'hashtabl', 'hashtabl', 'hashtabl', 'file', 'jaroutputstream', 'fileoutputstream', 'jarentri', 'buildexcept', 'buildexcept', 'path', 'static', 'final', 'fileutil', 'boolean', 'keepgeneric', 'boolean', 'alwaysrebuild', 'boolean', 'ejbdeploy', 'boolean', 'newcmp', 'path', 'wasclasspath', 'boolean', 'quiet', 'file']"
WhichResource.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'whichresource', 'extends', 'task', 'path', 'path', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'antclassload', 'buildexcept', 'path']"
WsdlToDotnet.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'dotnet', 'wsdltodotnet', 'extends', 'task', 'schema', 'compiler', 'extends', 'enumeratedattribut', 'file', 'vector', 'schema', 'buildexcept', 'buildexcept', 'netcommand', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'compil', 'static', 'final', 'fileutil', 'file', 'destfile', 'boolean', 'server', 'string', 'namespace', 'boolean', 'failonerror', 'string', 'protocol', 'boolean', 'ideerrors', 'vector', 'schema', 'compiler', 'compiler', 'file', 'boolean', 'makeurl']"
XMLCatalog.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'internalresolver', 'implements', 'catalogresolv', 'externalresolver', 'implements', 'catalogresolv', 'xmlcatalog', 'path', 'path', 'path', 'inputsourc', 'sourc', 'internalresolv', 'inputsourc', 'sourc', 'externalresolv', 'inputsourc', 'sourc', 'vector', 'path', 'path', 'saxsourc', 'url', 'url', 'inputsourc', 'inputsourc', 'externalresolv', 'internalresolv', 'transformerexcept', 'transformerexcept', 'buildexcept', 'url', 'file', 'buildexcept', 'file', 'inputsourc', 'fileinputstream', 'path', 'inputsourc', 'buildexcept', 'url', 'inputsourc', 'url', 'resourceloc', 'saxsourc', 'buildexcept', 'buildexcept', 'buildexcept', 'url', 'resourceloc', 'saxsourc', 'buildexcept', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'static', 'final', 'fileutil', 'vector', 'path', 'path', 'catalogresolver', 'catalogresolver', 'method', 'setxmlcatalog', 'method', 'parsecatalog', 'method', 'resolveentity', 'method', 'resolve', 'object', 'resolverimpl', 'boolean', 'externalcatalogsprocessed']"
XMLConstants.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'package', 'cdata', 'implied', 'gt']"
XMLFragment.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'xmlfragment', 'extends', 'projectcomponent', 'implements', 'dynamicelementn', 'child', 'implements', 'dynamicconfiguratorn', 'xmlfragment', 'documentfrag', 'object', 'object', 'child', 'child', 'document', 'documentfrag', 'element']"
XMLJUnitResultFormatter.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'xmljunitresultformatter', 'implements', 'junitresultformatter', 'xmlconst', 'xmljunitresultformatt', 'exceptionininitializererror', 'hashtabl', 'hashtabl', 'hashtabl', 'date', 'bufferedwrit', 'outputstreamwrit', 'domelementwrit', 'buildexcept', 'static', 'final', 'str', 'document', 'element', 'hashtabl', 'hashtabl', 'hashtabl', 'outputstream']"
XMLResultAggregator.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'xmlresultaggregator', 'extends', 'task', 'implements', 'xmlconst', 'aggregatetransform', 'file', 'vector', 'vector', 'aggregatetransform', 'buildexcept', 'file', 'vector', 'file', 'bufferedoutputstream', 'fileoutputstream', 'printwrit', 'outputstreamwrit', 'domelementwrit', 'ioexcept', 'exceptionininitializererror']"
XMLValidateTask.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'opt', 'xmlvalidatetask', 'extends', 'task', 'with', 'if', 'classpath', 'null', 'validatorerrorhandler', 'implements', 'errorhandl', 'attribut', 'properti', 'path', 'attribut', 'properti', 'dtdlocat', 'vector', 'validatorerrorhandl', 'vector', 'vector', 'xmlcatalog', 'path', 'attribut', 'properti', 'dtdlocat', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'parseradapt', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'inputsourc', 'fileinputstream', 'buildexcept', 'buildexcept', 'buildexcept', 'static', 'final', 'fileutil', 'vector', 'final', 'vector', 'xmlcatalog', 'string', 'attributename']"
XNewRmic.java,rmic,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'rm', 'xnewrmic', 'extends', 'forkingsunrm', 'xnewrmic']"
XSLTLiaison.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef']"
XSLTLiaison2.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef']"
XSLTLiaison3.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef']"
XSLTLogger.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef']"
XSLTLoggerAware.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef']"
XSLTProcess.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'xsltprocess', 'extends', 'matchingtask', 'implements', 'xsltlogg', 'param', 'outputproperti', 'factori', 'attribute', 'implements', 'dynamicconfigur', 'stylemapper', 'implements', 'filenamemapp', 'xsltprocess', 'path', 'factori', 'xmlcatalog', 'enumer', 'param', 'outputproperti', 'factori', 'enumer', 'object', 'object', 'vector', 'vector', 'xmlcatalog', 'union', 'buildexcept', 'buildexcept', 'mapper', 'buildexcept', 'buildexcept', 'buildexcept', 'fileresourc', 'file', 'buildexcept', 'path', 'buildexcept', 'file', 'stylemapp', 'file', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'param', 'buildexcept', 'buildexcept', 'outputproperti', 'fileresourc', 'buildexcept', 'buildexcept', 'file', 'buildexcept', 'factori', 'vector', 'integ', 'buildexcept', 'file', 'destdir', 'file', 'basedir', 'string', 'xslfile', 'resource', 'xslresource', 'string', 'filenameparameter', 'string', 'filedirparameter', 'vector', 'file', 'infile', 'file', 'outfile', 'path', 'classpath', 'xsltliaison', 'boolean', 'stylesheetloaded', 'boolean', 'force', 'vector', 'xmlcatalog', 'static', 'final', 'str', 'static', 'final', 'fileutil', 'boolean', 'performdirectoryscan', 'factory', 'factory', 'boolean', 'reuseloadedstylesheet', 'antclassloader', 'loader', 'mapper', 'mapperelement', 'union', 'boolean', 'useimplicitfileset', 'string', 'name', 'string', 'expression', 'project', 'vector', 'object']"
Xalan2Executor.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'xalan2executor', 'extends', 'xalanexecutor', 'buildexcept', 'buildexcept', 'streamsourc', 'domsourc', 'streamresult', 'static', 'final', 'str', 'static', 'final', 'str', 'transformerfactori']"
XalanExecutor.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'junit', 'xalanexecutor', 'bytearrayoutputstream', 'bufferedoutputstream', 'fileoutputstream', 'file', 'buildexcept', 'static', 'final', 'str']"
XmlConstants.java,ant.util,"['package', 'org', 'apache', 'tools', 'ant', 'util', 'xmlconstant']"
XmlLogger.java,ant,"['package', 'org', 'apache', 'tools', 'xmllogger', 'implements', 'buildlogg', 'timedel', 'xmllogger', 'exceptionininitializererror', 'hashtabl', 'hashtabl', 'hashtabl', 'timedel', 'fileoutputstream', 'outputstreamwrit', 'domelementwrit', 'buildexcept', 'stack', 'timedel', 'runtimeexcept', 'timedel', 'runtimeexcept', 'runtimeexcept', 'printstream', 'printstream', 'static', 'documentbuild', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'document', 'hashtabl', 'hashtabl', 'hashtabl', 'timedelement', 'buildelement', 'element']"
XmlProperty.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'xmlproperty', 'extends', 'org', 'apache', 'tools', 'ant', 'task', 'xmlproperti', 'object', 'hashtabl', 'xmlcatalog', 'buildexcept', 'hashtabl', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'path', 'fileresourc', 'buildexcept', 'buildexcept', 'buildexcept', 'fileresourc', 'resourc', 'boolean', 'keeproot', 'boolean', 'validate', 'boolean', 'collapseattributes', 'boolean', 'semanticattributes', 'boolean', 'includesemanticattribute', 'file', 'rootdirectory', 'hashtabl', 'xmlcatalog', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'str', 'static', 'final', 'string', 'static', 'final', 'fileutil']"
Xor.java,condition,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'condit', 'xor', 'extends', 'conditionbase', 'implements', 'condit']"
Zip.java,taskdesf,"['package', 'org', 'apache', 'tools', 'ant', 'taskdef', 'zip', 'extends', 'matchingtask', 'whenempty', 'extends', 'enumeratedattribut', 'duplicate', 'extends', 'enumeratedattribut', 'archivest', 'file', 'resourc', 'hashtabl', 'vector', 'vector', 'vector', 'hashtabl', 'vector', 'buildexcept', 'buildexcept', 'buildexcept', 'buildexcept', 'zipfileset', 'file', 'vector', 'buildexcept', 'buildexcept', 'zipoutputstream', 'zipfileset', 'buildexcept', 'buildexcept', 'buildexcept', 'zipfil', 'fileoutputstream', 'buildexcept', 'zipscann', 'arraylist', 'arraylist', 'archivest', 'archivest', 'buildexcept', 'archivest', 'archivest', 'archivest', 'buildexcept', 'identitymapp', 'mergingmapp', 'globpatternmapp', 'archivest', 'archivest', 'archivest', 'archivest', 'archivest', 'buildexcept', 'identitymapp', 'archivest', 'archivest', 'vector', 'arraylist', 'buildexcept', 'zipentri', 'crc32', 'bytearrayoutputstream', 'bytearrayinputstream', 'buildexcept', 'fileinputstream', 'stack', 'file', 'file', 'vector', 'zipscann', 'file', 'vector', 'vector', 'boolean', 'docompress', 'boolean', 'doupdate', 'boolean', 'saveddoupdate', 'boolean', 'dofilesonly', 'static', 'final', 'long', 'vector', 'vector', 'static', 'final', 'fileutil', 'boolean', 'addingnewfiles', 'boolean', 'keepcompression', 'boolean', 'roundup', 'resource']"
ZipEntry.java,zip,"['package', 'org', 'apache', 'tools', 'zip', 'zipentry', 'extends', 'java', 'util', 'zip', 'zipentry', 'implements', 'clon', 'zipentri', 'zipentri', 'zipentri', 'object', 'zipextrafield', 'vector', 'vector', 'vector', 'runtimeexcept', 'static', 'final', 'int', 'platform_unix', 'static', 'final', 'int', 'platform_fat', 'int', 'internalattributes', 'int', 'platform', 'long', 'externalattributes', 'vector', 'zipextrafield', 'extrafields', 'string', 'name']"
ZipExtraField.java,zip,"['package', 'org', 'apache', 'tools', 'zip']"
ZipFile.java,zip,"['package', 'org', 'apache', 'tools', 'zip', 'zipfil', 'offsetentri', 'boundedinputstream', 'extends', 'inputstream', 'zipfil', 'zipfil', 'zipfil', 'zipfil', 'enumer', 'zipentri', 'inputstream', 'hashtabl', 'hashtabl', 'file', 'file', 'randomaccessfil', 'boundedinputstream', 'inflaterinputstream', 'inflat', 'zipexcept', 'zipentri', 'offsetentri', 'zipexcept', 'date', 'zipexcept', 'hashtabl', 'hashtabl', 'string', 'encoding', 'randomaccessfil', 'static', 'final', 'int', 'static', 'final', 'int', 'static', 'final', 'int', 'static', 'final', 'long', 'boolean', 'adddummybyte']"
ZipFileSet.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'zipfileset', 'extends', 'archivefileset', 'zipfileset', 'object', 'zipscann', 'zipfileset', 'buildexcept', 'string', 'encoding']"
ZipLong.java,zip,"['package', 'org', 'apache', 'tools', 'zip', 'ziplong', 'implements', 'clon', 'ziplong', 'ziplong', 'ziplong']"
ZipOutputStream.java,zip,"['package', 'org', 'apache', 'tools', 'zip', 'will', 'try', 'to', 'us', 'zipoutputstream', 'extends', 'filteroutputstream', 'used', 'to', 'extend', 'used', 'to', 'extend', 'zipoutputstream', 'zipoutputstream', 'vector', 'crc32', 'hashtabl', 'deflat', 'randomaccessfil', 'fileoutputstream', 'zipexcept', 'zipexcept', 'zipexcept', 'zipexcept', 'illegalargumentexcept', 'ziplong', 'date', 'zipexcept', 'zipentri', 'int', 'level', 'boolean', 'hascompressionlevelchanged', 'vector', 'crc32', 'long', 'written', 'long', 'datastart', 'long', 'localdatastart', 'long', 'cdoffset', 'long', 'cdlength', 'static', 'final', 'byte', 'static', 'final', 'byte', 'hashtabl', 'string', 'encoding', 'randomaccessfile', 'raf', 'static', 'final', 'byte']"
ZipResource.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'types', 'resourc', 'zipresource', 'extends', 'archiveresourc', 'zipresourc', 'zipresourc', 'file', 'inputstream', 'outputstream', 'buildexcept', 'zipfil', 'buildexcept', 'filterinputstream', 'unsupportedoperationexcept', 'zipfil', 'buildexcept']"
ZipScanner.java,types,"['package', 'org', 'apache', 'tools', 'ant', 'typ', 'zipscanner', 'extends', 'archivescann', 'buildexcept', 'zipfil', 'buildexcept', 'buildexcept', 'zipresourc']"
ZipShort.java,zip,"['package', 'org', 'apache', 'tools', 'zip', 'zipshort', 'implements', 'clon', 'zipshort', 'zipshort', 'zipshort']"
jlink.java,optional,"['package', 'org', 'apache', 'tools', 'ant', 'taskdefs', 'optional', 'jlink', 'jlink', 'vector', 'vector', 'zipoutputstream', 'fileoutputstream', 'file', 'file', 'jlink', 'zipfil', 'file', 'fileinputstream', 'zipentri', 'fileinputstream', 'zipentri', 'bufferedinputstream', 'fileinputstream', 'crc32', 'string', 'outfile', 'vector', 'vector', 'boolean', 'compression']"
